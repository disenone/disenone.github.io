{"config":{"lang":["en","zh"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"assets/ext/footer/","title":"Footer","text":"<p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>"},{"location":"assets/ext/footer_en/","title":"Footer en","text":"<p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>"},{"location":"","title":"Home","text":""},{"location":"#disenones-wiki","title":"Disenone's Wiki","text":"<p>\u200b\u65e0\u6b62\u5883\u200b</p> <p>Hi there~ \u200b\u6b22\u8fce\u200b\u6765\u5230\u200b\u6211\u200b\u7684\u200b\u77e5\u8bc6\u5e93\u200b\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200b\u9057\u5fd8\u200b\u3001\u200b\u4fbf\u4e8e\u200b\u5206\u4eab\u200b\uff0c\u200b\u6211\u200b\u5728\u200b\u8fd9\u91cc\u200b\u6536\u5f55\u200b\u77e5\u8bc6\u200b\u3002 \u200b\u8bf7\u200b\u968f\u610f\u200b\u6d4f\u89c8\u200b\uff5e</p> <p>\u200b\u7f16\u7a0b\u6280\u672f\u200b \u200b\u6e38\u620f\u200b\u5f00\u53d1\u200b</p>"},{"location":"contact-and-subscribe/","title":"Contact and Subscribe","text":""},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/","title":"C/C++ \u200b\u5b8f\u200b\u7f16\u7a0b\u200b\u89e3\u6790","text":"<p>\u200b\u672c\u6587\u200b\u7684\u200b\u76ee\u7684\u200b\u662f\u200b\u8981\u200b\u8bb2\u6e05\u695a\u200b C/C++ \u200b\u7684\u200b\u5b8f\u200b\u7f16\u7a0b\u200b\u7684\u200b\u89c4\u5219\u200b\u548c\u200b\u5b9e\u73b0\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u8ba9\u200b\u4f60\u200b\u4e0d\u518d\u200b\u60e7\u6015\u200b\u770b\u5230\u200b\u4ee3\u7801\u200b\u91cc\u9762\u200b\u7684\u200b\u5b8f\u200b\u3002\u200b\u6211\u4f1a\u200b\u9996\u5148\u200b\u8bf4\u200b\u8bf4\u200b C++ \u200b\u6807\u51c6\u200b 14 \u200b\u91cc\u9762\u200b\u63d0\u5230\u200b\u7684\u200b\u5173\u4e8e\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u7684\u200b\u89c4\u5219\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b Clang \u200b\u7684\u200b\u6e90\u7801\u200b\u6765\u200b\u89c2\u5bdf\u200b\u5b8f\u200b\u5c55\u5f00\u200b\uff0c\u200b\u6700\u540e\u200b\u57fa\u4e8e\u200b\u8fd9\u4e9b\u200b\u77e5\u8bc6\u200b\u6765\u200b\u804a\u804a\u200b\u5b8f\u200b\u7f16\u7a0b\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002</p> <p>\u200b\u672c\u6587\u200b\u7684\u200b\u4ee3\u7801\u200b\u5168\u90e8\u200b\u90fd\u200b\u5728\u200b\u8fd9\u91cc\u200b\uff1a\u200b\u4e0b\u8f7d\u200b\uff0c\u200b\u5728\u7ebf\u200b\u6f14\u793a\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_1","title":"\u5f15\u5b50","text":"<p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6267\u884c\u547d\u4ee4\u200b <code>gcc -P -E a.cpp -o a.cpp.i</code> \u200b\u6765\u200b\u8ba9\u200b\u7f16\u8bd1\u5668\u200b\u5bf9\u200b\u6587\u4ef6\u200b <code>a.cpp</code> \u200b\u53ea\u200b\u6267\u884c\u200b\u9884\u5904\u7406\u200b\u5e76\u200b\u4fdd\u5b58\u200b\u7ed3\u679c\u200b\u5230\u200b <code>a.cpp.i</code> \u200b\u4e2d\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\u6211\u4eec\u200b\u5148\u200b\u6765\u770b\u200b\u4e00\u4e9b\u200b\u4f8b\u5b50\u200b:</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#reentrancy","title":"\u9012\u5f52\u200b\u91cd\u200b\u5165\u200b\uff08Reentrancy\uff09","text":"<pre><code>#define ITER(arg0, arg1) ITER(arg1, arg0) \n\nITER(1, 2)          // -&gt; ITER(2, 1)\n</code></pre> <p>\u200b\u5b8f\u200b <code>ITER</code> \u200b\u4ea4\u6362\u200b\u4e86\u200b <code>arg0</code>, <code>arg1</code> \u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u4e4b\u540e\u200b\uff0c\u200b\u5f97\u5230\u200b\u7684\u200b\u662f\u200b <code>ITER(2, 1)</code>\u3002</p> <p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\uff0c<code>arg0</code> <code>arg1</code> \u200b\u7684\u200b\u4f4d\u7f6e\u200b\u6210\u529f\u200b\u4ea4\u6362\u200b\uff0c\u200b\u5728\u200b\u8fd9\u91cc\u200b\u5b8f\u200b\u6210\u529f\u200b\u5c55\u5f00\u200b\u4e86\u200b\u4e00\u6b21\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u53ea\u200b\u5c55\u5f00\u200b\u4e86\u200b\u4e00\u6b21\u200b\uff0c\u200b\u4e0d\u518d\u200b\u9012\u5f52\u200b\u91cd\u200b\u5165\u200b\u3002\u200b\u6362\u8a00\u4e4b\u200b\uff0c\u200b\u5b8f\u200b\u7684\u200b\u5c55\u5f00\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u662f\u200b\u4e0d\u53ef\u200b\u81ea\u8eab\u200b\u9012\u5f52\u200b\u91cd\u5165\u200b\u7684\u200b\uff0c\u200b\u5982\u679c\u200b\u5728\u200b\u9012\u5f52\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53d1\u73b0\u200b\u76f8\u540c\u200b\u7684\u200b\u5b8f\u200b\u5728\u200b\u4e4b\u524d\u200b\u7684\u200b\u9012\u5f52\u200b\u4e2d\u200b\u5df2\u7ecf\u200b\u5c55\u5f00\u200b\u8fc7\u200b\uff0c\u200b\u5219\u200b\u4e0d\u518d\u200b\u5c55\u5f00\u200b\uff0c\u200b\u8fd9\u200b\u662f\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u7684\u200b\u5176\u4e2d\u200b\u4e00\u6761\u200b\u91cd\u8981\u200b\u7684\u200b\u89c4\u5219\u200b\u3002\u200b\u7981\u6b62\u200b\u9012\u5f52\u200b\u91cd\u5165\u200b\u7684\u200b\u539f\u56e0\u200b\u4e5f\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u5c31\u662f\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200b\u65e0\u9650\u200b\u9012\u5f52\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_2","title":"\u5b57\u7b26\u4e32\u200b\u62fc\u63a5","text":"<pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n\nCONCAT(Hello, World)                // -&gt; HelloWorld\nCONCAT(Hello, CONCAT(World, !))     // -&gt;\u3000HelloCONCAT(World, !)\n</code></pre> <p>\u200b\u5b8f\u200b <code>CONCAT</code> \u200b\u76ee\u7684\u200b\u662f\u200b\u62fc\u63a5\u200b <code>arg0</code> <code>arg1</code>\u3002\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u4e4b\u540e\u200b\uff0c<code>CONCAT(Hello, World)</code> \u200b\u80fd\u591f\u200b\u5f97\u5230\u200b\u6b63\u786e\u200b\u7684\u200b\u7ed3\u679c\u200b <code>HelloWorld</code>\u3002\u200b\u4f46\u662f\u200b <code>CONCAT(Hello, CONCAT(World, !))</code> \u200b\u5374\u200b\u53ea\u200b\u5c55\u5f00\u200b\u4e86\u200b\u5916\u5c42\u200b\u7684\u200b\u5b8f\u200b\uff0c\u200b\u5185\u5c42\u200b\u7684\u200b <code>CONCAT(World, !)</code> \u200b\u5e76\u200b\u6ca1\u6709\u200b\u5c55\u5f00\u200b\u800c\u662f\u200b\u76f4\u63a5\u200b\u8ddf\u200b <code>Hello</code> \u200b\u62fc\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\u4e86\u200b\uff0c\u200b\u8fd9\u200b\u8ddf\u200b\u6211\u4eec\u200b\u9884\u60f3\u200b\u7684\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u6211\u4eec\u200b\u771f\u6b63\u200b\u60f3\u8981\u200b\u7684\u200b\u7ed3\u679c\u200b\u662f\u200b <code>HelloWorld!</code>\u3002\u200b\u8fd9\u200b\u5c31\u662f\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u7684\u200b\u53e6\u5916\u200b\u4e00\u6761\u200b\u91cd\u8981\u200b\u7684\u200b\u89c4\u5219\u200b\uff1a\u200b\u8ddf\u200b\u5728\u200b <code>##</code> \u200b\u64cd\u4f5c\u7b26\u200b\u540e\u9762\u200b\u7684\u200b\u5b8f\u200b\u53c2\u6570\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u6267\u884c\u200b\u5c55\u5f00\u200b\uff0c\u200b\u800c\u662f\u200b\u4f1a\u200b\u76f4\u63a5\u200b\u8ddf\u200b\u524d\u9762\u200b\u7684\u200b\u5185\u5bb9\u200b\u5148\u200b\u62fc\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u4e0a\u9762\u200b\u4e24\u4e2a\u200b\u4f8b\u5b50\u200b\u53ef\u4ee5\u200b\u770b\u200b\u51fa\u6765\u200b\uff0c\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u7684\u200b\u89c4\u5219\u200b\u6709\u200b\u4e00\u4e9b\u200b\u662f\u200b\u53cd\u200b\u76f4\u89c9\u200b\u7684\u200b\uff0c\u200b\u5982\u679c\u200b\u4e0d\u200b\u6e05\u695a\u200b\u5177\u4f53\u200b\u7684\u200b\u89c4\u5219\u200b\uff0c\u200b\u6709\u200b\u53ef\u80fd\u200b\u5199\u200b\u51fa\u6765\u200b\u7684\u200b\u5b8f\u200b\u8ddf\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u7684\u200b\u6548\u679c\u200b\u4e0d\u200b\u4e00\u81f4\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_3","title":"\u5b8f\u200b\u5c55\u5f00\u200b\u89c4\u5219","text":"<p>\u200b\u901a\u8fc7\u200b\u5f15\u5b50\u200b\u7684\u200b\u4e24\u4e2a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e86\u89e3\u200b\u5230\u200b\u4e86\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u662f\u200b\u6709\u200b\u4e00\u5957\u200b\u6807\u51c6\u200b\u7684\u200b\u89c4\u5219\u200b\u7684\u200b\uff0c\u200b\u8fd9\u5957\u200b\u89c4\u5219\u200b\u5b9a\u4e49\u200b\u5728\u200b C/C++ \u200b\u6807\u51c6\u200b\u91cc\u9762\u200b\uff0c\u200b\u5185\u5bb9\u200b\u4e0d\u200b\u591a\u200b\uff0c\u200b\u5efa\u8bae\u200b\u5148\u200b\u4ed4\u7ec6\u200b\u8bfb\u200b\u51e0\u904d\u200b\uff0c\u200b\u6211\u200b\u8fd9\u91cc\u200b\u987a\u5e26\u200b\u7ed9\u200b\u4e0b\u200b\u6807\u51c6\u200b n4296 \u200b\u7248\u672c\u200b\u7684\u200b\u94fe\u63a5\u200b\uff0c\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u5728\u200b 16.3 \u200b\u8282\u200b\uff1a\u200b\u4f20\u9001\u95e8\u200b\u3002\u200b\u4e0b\u9762\u200b\u6211\u200b\u6311\u51fa\u200b n4296 \u200b\u7248\u672c\u200b\u4e2d\u200b\u51e0\u6761\u200b\u91cd\u8981\u200b\u7684\u200b\u89c4\u5219\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u89c4\u5219\u200b\u4f1a\u200b\u51b3\u5b9a\u200b\u5982\u4f55\u200b\u6b63\u786e\u200b\u7f16\u5199\u200b\u5b8f\u200b\uff08\u200b\u8fd8\u662f\u200b\u5efa\u8bae\u200b\u62bd\u65f6\u95f4\u200b\u628a\u200b\u6807\u51c6\u200b\u91cc\u9762\u200b\u7684\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u7ec6\u8bfb\u200b\u4e0b\u200b\uff09\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_4","title":"\u53c2\u6570\u200b\u5206\u9694","text":"<p>\u200b\u5b8f\u200b\u7684\u200b\u53c2\u6570\u200b\u8981\u6c42\u200b\u662f\u200b\u7528\u200b\u9017\u53f7\u200b\u5206\u9694\u200b\uff0c\u200b\u800c\u4e14\u200b\u53c2\u6570\u200b\u7684\u200b\u4e2a\u6570\u200b\u9700\u8981\u200b\u8ddf\u5b8f\u200b\u5b9a\u4e49\u200b\u7684\u200b\u4e2a\u6570\u200b\u4e00\u81f4\u200b\uff0c\u200b\u4f20\u9012\u200b\u7ed9\u5b8f\u200b\u7684\u200b\u53c2\u6570\u200b\u4e2d\u200b\uff0c\u200b\u989d\u5916\u200b\u7528\u200b\u62ec\u53f7\u200b\u5305\u4f4f\u200b\u7684\u200b\u5185\u5bb9\u200b\u89c6\u4e3a\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u53c2\u6570\u200b\u5141\u8bb8\u200b\u4e3a\u7a7a\u200b\uff1a</p> <pre><code>#define ADD_COMMA(arg1, arg2) arg1, arg2\n\nADD_COMMA(a, b)             // -&gt; a, b\nADD_COMMA(a)                // \u200b\u62a5\u9519\u200b \"macro \"MACRO\" requires 2 arguments, but only 1 given\"\nADD_COMMA((a, b), c)        // -&gt; (a, b), c\nADD_COMMA(, b)              // -&gt; , b\n</code></pre> <p><code>ADD_COMMA((a, b), c)</code> \u200b\u4e2d\u200b <code>(a, b)</code> \u200b\u89c6\u4e3a\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u3002<code>ADD_COMMA(, b)</code> \u200b\u4e2d\u200b\uff0c\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u4e8e\u662f\u200b\u5c55\u5f00\u200b\u4e3a\u200b <code>, b</code>\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_5","title":"\u5b8f\u200b\u53c2\u6570\u200b\u5c55\u5f00","text":"<p>\u200b\u5728\u200b\u5bf9\u5b8f\u200b\u8fdb\u884c\u200b\u5c55\u5f00\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5982\u679c\u200b\u5b8f\u200b\u7684\u200b\u53c2\u6570\u200b\u4e5f\u200b\u662f\u200b\u53ef\u4ee5\u200b\u5c55\u5f00\u200b\u7684\u200b\u5b8f\u200b\uff0c\u200b\u4f1a\u5148\u200b\u628a\u200b\u53c2\u6570\u200b\u5b8c\u5168\u200b\u5c55\u5f00\u200b\uff0c\u200b\u518d\u200b\u5c55\u5f00\u200b\u5b8f\u200b\uff0c\u200b\u4f8b\u5982\u200b</p> <pre><code>ADD_COMMA(ADD_COMMA(1, 2), ADD_COMMA(3, 4))     // -&gt; 1, 2, 3, 4\n</code></pre> <p>\u200b\u4e00\u822c\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u7684\u200b\u5b8f\u200b\u5c55\u5f00\u200b\uff0c\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u8ba4\u4e3a\u200b\u662f\u200b\u5148\u200b\u5bf9\u200b\u53c2\u6570\u200b\u6c42\u503c\u200b\uff0c\u200b\u518d\u200b\u5bf9\u5b8f\u200b\u6c42\u503c\u200b\uff0c\u200b\u9664\u975e\u200b\u9047\u5230\u200b\u4e86\u200b <code>#</code> \u200b\u548c\u200b <code>##</code> \u200b\u64cd\u4f5c\u7b26\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_6","title":"<code>#</code> \u200b\u64cd\u4f5c\u7b26","text":"<p><code>#</code> \u200b\u64cd\u4f5c\u7b26\u200b\u540e\u9762\u200b\u8ddf\u200b\u7684\u200b\u5b8f\u200b\u53c2\u6570\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u8fdb\u884c\u200b\u5c55\u5f00\u200b\uff0c\u200b\u4f1a\u200b\u76f4\u63a5\u200b\u5b57\u7b26\u4e32\u200b\u5316\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#define STRINGIZE(arg0) # arg0\n\nSTRINGIZE(a)                // -&gt; \"a\"\nSTRINGIZE(STRINGIZE(a))     // -&gt; \"STRINGIZE(a)\"\n</code></pre> <p>\u200b\u6839\u636e\u200b\u8fd9\u200b\u6761\u200b\u89c4\u5219\u200b <code>STRINGIZE(STRINGIZE(a))</code> \u200b\u53ea\u80fd\u200b\u5c55\u5f00\u200b\u4e3a\u200b <code>\"STRINGIZE(a)\"</code>\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_7","title":"<code>##</code> \u200b\u64cd\u4f5c\u7b26","text":"<p><code>##</code> \u200b\u64cd\u4f5c\u7b26\u200b\u524d\u540e\u200b\u7684\u200b\u5b8f\u200b\u53c2\u6570\u200b\uff0c\u200b\u90fd\u200b\u4e0d\u4f1a\u200b\u8fdb\u884c\u200b\u5c55\u5f00\u200b\uff0c\u200b\u4f1a\u5148\u200b\u76f4\u63a5\u200b\u62fc\u63a5\u200b\u8d77\u6765\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n\nCONCAT(Hello, World)                        // -&gt; HelloWorld\nCONCAT(Hello, CONCAT(World, !))             // -&gt; HelloCONCAT(World, !)\nCONCAT(CONCAT(Hello, World) C, ONCAT(!))    // -&gt; CONCAT(Hello, World) CONCAT(!)\n</code></pre> <p><code>CONCAT(CONCAT(Hello, World) C, ONCAT(!))</code> \u200b\u53ea\u80fd\u200b\u662f\u200b\u5148\u200b\u62fc\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\uff0c\u200b\u5f97\u5230\u200b <code>CONCAT(Hello, World) CONCAT(!)</code>\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_8","title":"\u91cd\u590d\u200b\u626b\u63cf","text":"<p>\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u6267\u884c\u200b\u5b8c\u200b\u4e00\u6b21\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4f1a\u200b\u91cd\u65b0\u200b\u626b\u63cf\u200b\u5f97\u5230\u200b\u7684\u200b\u5185\u5bb9\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u5c55\u5f00\u200b\uff0c\u200b\u76f4\u5230\u200b\u6ca1\u6709\u200b\u53ef\u4ee5\u200b\u5c55\u5f00\u200b\u7684\u200b\u5185\u5bb9\u200b\u4e3a\u6b62\u200b\u3002</p> <p>\u200b\u4e00\u6b21\u200b\u5b8f\u200b\u5c55\u5f00\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u5148\u200b\u628a\u200b\u53c2\u6570\u200b\u5b8c\u5168\u200b\u5c55\u5f00\u200b\uff08\u200b\u9664\u975e\u200b\u9047\u5230\u200b <code>#</code> \u200b\u548c\u200b <code>##</code>\uff09\uff0c\u200b\u518d\u200b\u6839\u636e\u200b\u5b8f\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u628a\u200b\u5b8f\u200b\u548c\u200b\u5b8c\u5168\u200b\u5c55\u5f00\u200b\u540e\u200b\u7684\u200b\u53c2\u6570\u200b\u6309\u7167\u200b\u5b9a\u4e49\u200b\u8fdb\u884c\u200b\u66ff\u6362\u200b\uff0c\u200b\u518d\u200b\u5904\u7406\u200b\u5b9a\u4e49\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b <code>#</code> \u200b\u548c\u200b <code>##</code> \u200b\u64cd\u4f5c\u7b26\u200b\u3002</p> <pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n#define STRINGIZE(arg0) # arg0\n\nCONCAT(STRING, IZE(Hello))        // -&gt; STRINGIZE(Hello) -&gt; \"Hello\"\n</code></pre> <p><code>CONCAT(STRING, IZE(Hello))</code> \u200b\u7b2c\u4e00\u6b21\u200b\u626b\u63cf\u200b\u5c55\u5f00\u200b\u5f97\u5230\u200b <code>STRINGIZE(Hello)</code>\uff0c\u200b\u7136\u540e\u200b\u6267\u884c\u200b\u7b2c\u4e8c\u6b21\u200b\u626b\u63cf\u200b\uff0c\u200b\u53d1\u73b0\u200b <code>STRINGIZE</code> \u200b\u53ef\u4ee5\u200b\u7ee7\u7eed\u200b\u5c55\u5f00\u200b\uff0c\u200b\u6700\u540e\u200b\u5f97\u5230\u200b <code>\"Hello\"</code>\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_9","title":"\u7981\u6b62\u200b\u9012\u5f52\u200b\u91cd\u200b\u5165","text":"<p>\u200b\u5728\u200b\u91cd\u590d\u200b\u626b\u63cf\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u7981\u6b62\u200b\u9012\u5f52\u200b\u5c55\u5f00\u200b\u76f8\u540c\u200b\u7684\u200b\u5b8f\u200b\u3002\u200b\u53ef\u4ee5\u200b\u628a\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u7406\u89e3\u200b\u4e3a\u200b\u6811\u5f62\u200b\u7684\u200b\u7ed3\u6784\u200b\uff0c\u200b\u6839\u200b\u8282\u70b9\u200b\u5c31\u662f\u200b\u4e00\u200b\u5f00\u59cb\u200b\u8981\u200b\u5c55\u5f00\u200b\u7684\u200b\u5b8f\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u4e4b\u540e\u200b\u7684\u200b\u5185\u5bb9\u200b\u4f5c\u4e3a\u200b\u8be5\u5b8f\u200b\u7684\u200b\u5b50\u200b\u8282\u70b9\u200b\u8fde\u63a5\u200b\u5230\u200b\u6811\u4e0a\u200b\uff0c\u200b\u90a3\u4e48\u200b\u7981\u6b62\u200b\u9012\u5f52\u200b\u5c31\u662f\u200b\u5728\u200b\u5c55\u5f00\u200b\u5b50\u200b\u8282\u70b9\u200b\u7684\u200b\u5b8f\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b\u8be5\u5b8f\u200b\u8ddf\u200b\u4efb\u610f\u200b\u7956\u5148\u200b\u8282\u70b9\u200b\u7684\u200b\u5b8f\u200b\u76f8\u540c\u200b\uff0c\u200b\u5219\u200b\u7981\u6b62\u200b\u5c55\u5f00\u200b\u3002\u200b\u6765\u770b\u200b\u4e00\u4e9b\u200b\u4f8b\u5b50\u200b\uff1a</p> <pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n#define CONCAT_SPACE(arg0, arg1) arg0 arg1\n#define IDENTITY(arg0) IDENTITY_IMPL(arg0)\n#define IDENTITY_IMPL(arg0) arg0\n\nCONCAT(CON, CAT(a, b))                  // -&gt; CONCAT(a, b)\nIDENTITY_IMPL(CONCAT(CON, CAT(a, b)))   // -&gt; CONCAT(a, b)\nIDENTITY(CONCAT(CON, CAT(a, b)))        // -&gt; IDENTITY_IMPL(CONCAT(a, b)) -&gt; CONCAT(a, b)\n</code></pre> <p><code>CONCAT(CON, CAT(a, b))</code>\uff1a\u200b\u7531\u4e8e\u200b <code>CONCAT</code> \u200b\u662f\u200b\u7528\u200b <code>##</code> \u200b\u62fc\u63a5\u200b\u4e24\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u6839\u636e\u200b <code>##</code> \u200b\u7684\u200b\u89c4\u5219\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u5c55\u5f00\u200b\u53c2\u6570\u200b\uff0c\u200b\u76f4\u63a5\u200b\u62fc\u63a5\u200b\u3002\u200b\u6240\u4ee5\u200b\u7b2c\u4e00\u6b21\u200b\u5c55\u5f00\u200b\u5f97\u5230\u200b\u4e86\u200b <code>CONCAT(a, b)</code>\uff0c\u200b\u7531\u4e8e\u200b <code>CONCAT</code> \u200b\u5df2\u7ecf\u200b\u5c55\u5f00\u200b\u8fc7\u200b\u4e86\u200b\u4e0d\u4f1a\u200b\u518d\u200b\u9012\u5f52\u200b\u5c55\u5f00\u200b\uff0c\u200b\u6240\u4ee5\u200b\u505c\u6b62\u200b\u3002</p> <p><code>IDENTITY_IMPL(CONCAT(CON, CAT(a, b)))</code>\uff1a<code>IDENTITY_IMPL</code> \u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u5bf9\u200b\u53c2\u6570\u200b <code>arg0</code> \u200b\u6c42\u503c\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u7684\u200b\u53c2\u6570\u200b <code>arg0</code> \u200b\u6c42\u200b\u503c\u5f97\u200b\u5230\u200b\u4e86\u200b <code>CONCAT(a, b)</code>\uff0c\u200b\u5e76\u200b\u7531\u4e8e\u200b\u9012\u5f52\u200b\u88ab\u200b\u6807\u8bb0\u200b\u4e3a\u4e86\u200b\u7981\u6b62\u200b\u91cd\u200b\u5165\u200b\uff0c\u200b\u4e4b\u540e\u200b <code>IDENTITY_IMPL</code> \u200b\u5c55\u5f00\u200b\u5b8c\u6210\u200b\uff0c\u200b\u8fdb\u884c\u200b\u7b2c\u4e8c\u6b21\u200b\u626b\u63cf\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u53d1\u73b0\u200b\u662f\u200b\u7981\u6b62\u200b\u91cd\u5165\u200b\u7684\u200b <code>CONCAT(a, b)</code>\uff0c\u200b\u4e8e\u662f\u200b\u505c\u6b62\u200b\u5c55\u5f00\u200b\u3002\u200b\u5728\u200b\u8fd9\u91cc\u200b <code>CONCAT(a, b)</code> \u200b\u662f\u200b\u7531\u200b\u53c2\u6570\u200b <code>arg0</code> \u200b\u5c55\u5f00\u200b\u800c\u200b\u5f97\u5230\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u540e\u7eed\u200b\u5c55\u5f00\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4e5f\u200b\u4f1a\u200b\u4fdd\u6301\u200b\u7981\u6b62\u200b\u91cd\u5165\u200b\u7684\u200b\u6807\u8bb0\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u7236\u200b\u8282\u70b9\u200b\u662f\u200b\u53c2\u6570\u200b <code>arg0</code>\uff0c\u200b\u4e00\u76f4\u200b\u4fdd\u6301\u200b\u7740\u200b\u7981\u6b62\u200b\u91cd\u5165\u200b\u7684\u200b\u6807\u8bb0\u200b\u3002</p> <p><code>IDENTITY(CONCAT(CON, CAT(a, b)))</code>\uff1a\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4e3b\u8981\u200b\u662f\u200b\u4e3a\u4e86\u200b\u52a0\u5f3a\u200b\u5bf9\u200b\u7236\u5b50\u200b\u8282\u70b9\u200b\u7684\u200b\u7406\u89e3\u200b\uff0c\u200b\u53c2\u6570\u200b\u81ea\u5df1\u200b\u5c55\u5f00\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u662f\u200b\u81ea\u8eab\u200b\u4f5c\u4e3a\u200b\u7236\u200b\u8282\u70b9\u200b\uff0c\u200b\u5c55\u5f00\u200b\u7684\u200b\u5185\u5bb9\u200b\u4f5c\u4e3a\u200b\u5b50\u200b\u8282\u70b9\u200b\u53bb\u200b\u5224\u65ad\u200b\u9012\u5f52\u200b\uff0c\u200b\u5c55\u5f00\u200b\u540e\u200b\u7684\u200b\u53c2\u6570\u200b\u4f20\u5230\u200b\u5b8f\u200b\u5b9a\u4e49\u200b\u4e4b\u540e\u200b\uff0c\u200b\u7981\u6b62\u200b\u91cd\u5165\u200b\u7684\u200b\u6807\u8bb0\u200b\u4f1a\u200b\u7ee7\u7eed\u200b\u4fdd\u7559\u200b\uff08\u200b\u5982\u679c\u200b\u4f20\u5230\u200b\u5b8f\u200b\u5b9a\u4e49\u200b\u4e4b\u540e\u200b\u6ca1\u6709\u200b\u6539\u53d8\u200b\u53c2\u6570\u200b\u5c55\u5f00\u200b\u540e\u200b\u7684\u200b\u5b8f\u200b\uff09\u3002\u200b\u53ef\u4ee5\u200b\u628a\u200b\u53c2\u6570\u200b\u7684\u200b\u5c55\u5f00\u200b\u8fc7\u7a0b\u200b\u770b\u6210\u200b\u662f\u200b\u53e6\u5916\u200b\u4e00\u68f5\u6811\u200b\uff0c\u200b\u53c2\u6570\u200b\u7684\u200b\u5c55\u5f00\u200b\u7ed3\u679c\u200b\u5c31\u662f\u200b\u6811\u200b\u7684\u200b\u6700\u5e95\u5c42\u200b\u5b50\u200b\u8282\u70b9\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u5b50\u200b\u8282\u70b9\u200b\u4f20\u7ed9\u200b\u5b8f\u6765\u200b\u6267\u884c\u200b\u5c55\u5f00\u200b\u7684\u200b\u540c\u65f6\u200b\uff0c\u200b\u4f9d\u7136\u200b\u662f\u200b\u4fdd\u7559\u200b\u7740\u200b\u7981\u6b62\u200b\u91cd\u5165\u200b\u7684\u200b\u7279\u6027\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u5728\u200b\u7b2c\u4e00\u6b21\u200b\u5b8c\u5168\u200b\u5c55\u5f00\u200b\u4e4b\u540e\u200b\u5f97\u5230\u200b <code>IDENTITY_IMPL(CONCAT(a, b))</code>\uff0c<code>CONCAT(a, b)</code> \u200b\u88ab\u200b\u6807\u8bb0\u200b\u4e3a\u200b\u7981\u6b62\u200b\u91cd\u200b\u5165\u200b\uff0c \u200b\u5373\u4f7f\u200b <code>IDENTITY_IMPL</code> \u200b\u662f\u200b\u5bf9\u200b\u53c2\u6570\u200b\u6c42\u503c\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u53c2\u6570\u200b\u5df2\u7ecf\u200b\u7981\u6b62\u200b\u5c55\u5f00\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53c2\u6570\u200b\u5c31\u200b\u539f\u5c01\u4e0d\u52a8\u200b\u7684\u200b\u4f20\u5230\u200b\u5b9a\u4e49\u200b\u91cc\u200b\uff0c\u200b\u6700\u540e\u200b\u6211\u4eec\u200b\u8fd8\u662f\u200b\u5f97\u5230\u200b <code>CONCAT(a, b)</code>\u3002</p> <p>\u200b\u4ee5\u4e0a\u200b\u6211\u200b\u53ea\u662f\u200b\u5217\u51fa\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u6211\u200b\u8ba4\u4e3a\u200b\u6bd4\u8f83\u200b\u91cd\u8981\u200b\u7684\u200b\uff0c\u200b\u6216\u8005\u200b\u89c9\u5f97\u200b\u4e0d\u592a\u597d\u200b\u7406\u89e3\u200b\u7684\u200b\u89c4\u5219\u200b\uff0c\u200b\u8be6\u7ec6\u200b\u7684\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u89c4\u5219\u200b\uff0c\u200b\u8fd8\u662f\u200b\u5efa\u8bae\u200b\u82b1\u200b\u70b9\u200b\u65f6\u95f4\u200b\u76f4\u63a5\u200b\u53bb\u200b\u770b\u200b\u6807\u51c6\u200b\u6587\u6863\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#clang","title":"\u901a\u8fc7\u200b Clang \u200b\u89c2\u5bdf\u200b\u5c55\u5f00\u200b\u8fc7\u7a0b","text":"<p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7ed9\u200b Clang \u200b\u6e90\u7801\u200b\u52a0\u4e0a\u200b\u4e00\u4e9b\u200b\u6253\u5370\u4fe1\u606f\u200b\u6765\u200b\u89c2\u5bdf\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u6211\u200b\u65e0\u610f\u200b\u6df1\u5165\u200b\u89e3\u91ca\u200b Clang \u200b\u7684\u200b\u6e90\u7801\u200b\uff0c\u200b\u5728\u200b\u8fd9\u91cc\u200b\u7ed9\u200b\u4e00\u4efd\u200b\u4fee\u6539\u200b\u8fc7\u200b\u7684\u200b\u6587\u4ef6\u200b diff\uff0c\u200b\u6709\u200b\u5174\u8da3\u200b\u7684\u200b\u53ef\u4ee5\u200b\u81ea\u5df1\u200b\u7f16\u8bd1\u200b Clang \u200b\u6765\u200b\u7814\u7a76\u200b\u3002\u200b\u8fd9\u91cc\u200b\u6211\u200b\u662f\u200b\u7528\u200b\u7684\u200b llvm \u200b\u7248\u672c\u200b 11.1.0 \uff08\u200b\u4f20\u9001\u95e8\u200b\uff09\uff0c\u200b\u4fee\u6539\u200b\u8fc7\u200b\u7684\u200b\u6587\u4ef6\u200b\uff08\u200b\u4f20\u9001\u95e8\u200b\uff09\u3002\u200b\u4e0b\u9762\u200b\u7b80\u5355\u200b\u901a\u8fc7\u200b\u4f8b\u5b50\u200b\u6765\u200b\u9a8c\u8bc1\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u4ecb\u7ecd\u200b\u7684\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u89c4\u5219\u200b\uff1a</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#1","title":"\u4f8b\u5b50\u200b1","text":"<pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n\nCONCAT(C, ONCAT(a, b))      // CONCAT(a, b)\n</code></pre> <p>\u200b\u4f7f\u7528\u200b\u4fee\u6539\u200b\u8fc7\u200b\u7684\u200b Clang \u200b\u6765\u200b\u9884\u5904\u7406\u200b\u4ee5\u4e0a\u200b\u4ee3\u7801\u200b\uff1a <code>clang -P -E a.cpp -o a.cpp.i</code>\uff0c\u200b\u5f97\u5230\u200b\u4e0b\u9762\u200b\u7684\u200b\u6253\u5370\u4fe1\u606f\u200b\uff1a</p> <pre><code>HandleIdentifier: \nMacroInfo 0x559e57496900\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is ok to expand\n\nEnterMacro: 0\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x559e57496900 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nToken: 0\nidentifier: arg0\nArgs: [identifier: C]\nToken: 1\nhashhash: \nToken: 2\nidentifier: arg1\nArgs: [identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nLeave ExpandFunctionArguments: [identifier: C][hashhash: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\n\nLeaveMacro: 0\n\nHandleIdentifier: \nMacroInfo 0x559e57496900 disabled used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\n</code></pre> <p>\u200b\u7b2c\u200b 1 \u200b\u884c\u200b <code>HandleIdentifier</code> \u200b\u9047\u5230\u200b\u5b8f\u200b\u7684\u200b\u65f6\u5019\u200b\u4f1a\u200b\u6253\u5370\u200b\uff0c\u200b\u63a5\u7740\u200b\u6253\u5370\u200b\u5b8f\u200b\u7684\u200b\u4fe1\u606f\u200b\uff08\u200b\u7b2c\u200b 2-4 \u200b\u884c\u200b\uff09\uff0c\u200b\u5b8f\u200b\u6ca1\u6709\u200b\u7981\u7528\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u6309\u7167\u200b\u5b9a\u4e49\u200b\u6765\u200b\u5c55\u5f00\u200b <code>Macro is ok to expand</code>\uff0c\u200b\u4e4b\u540e\u200b\u8fdb\u5165\u200b\u5b8f\u200b <code>EnterMacro</code>\u3002</p> <p>\u200b\u771f\u6b63\u200b\u6267\u884c\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u7684\u200b\u51fd\u6570\u200b\u662f\u200b <code>ExpandFunctionArguments</code>\uff0c\u200b\u4e4b\u540e\u200b\u518d\u6b21\u200b\u6253\u5370\u200b\u5f85\u200b\u5c55\u5f00\u200b\u7684\u200b\u5b8f\u200b\u4fe1\u606f\u200b\uff0c\u200b\u6ce8\u610f\u200b\u5230\u200b\u6b64\u65f6\u200b\u5b8f\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u6807\u8bb0\u200b\u4e3a\u200b <code>used</code> \uff08\u200b\u7b2c\u200b 9 \u200b\u884c\u200b\uff09\u3002\u200b\u4e4b\u540e\u200b\u6839\u636e\u200b\u5b8f\u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u8fdb\u884c\u200b\u9010\u4e2a\u200b <code>Token</code> \u200b\u7684\u200b\u5c55\u5f00\u200b \uff08<code>Token</code> \u200b\u662f\u200b <code>Clang</code> \u200b\u9884\u5904\u7406\u200b\u91cc\u9762\u200b\u7684\u200b\u6982\u5ff5\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4e0d\u200b\u6df1\u5165\u200b\u8bf4\u660e\u200b\uff09\u3002</p> <p>\u200b\u7b2c\u200b 0 \u200b\u4e2a\u200b <code>Token</code> \u200b\u662f\u200b\u5f62\u53c2\u200b <code>arg0</code>, \u200b\u5bf9\u5e94\u200b\u7684\u200b\u5b9e\u53c2\u200b\u662f\u200b <code>C</code>\uff0c\u200b\u5224\u65ad\u200b\u4e0d\u200b\u9700\u8981\u200b\u5c55\u5f00\u200b\uff0c\u200b\u4e8e\u662f\u200b\u76f4\u63a5\u200b\u590d\u5236\u5230\u200b\u7ed3\u679c\u200b\u4e0a\u200b\uff08\u200b\u7b2c\u200b 11-13 \u200b\u884c\u200b\uff09\u3002</p> <p>\u200b\u7b2c\u200b 1 \u200b\u4e2a\u200b <code>Token</code> \u200b\u662f\u200b <code>hashhash</code>\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b <code>##</code> \u200b\u64cd\u4f5c\u7b26\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u590d\u5236\u5230\u200b\u7ed3\u679c\u200b\u4e0a\u200b\uff08\u200b\u7b2c\u200b 14-15 \u200b\u884c\u200b\uff09\u3002</p> <p>\u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b <code>Token</code> \u200b\u662f\u200b\u5f62\u53c2\u200b <code>arg1</code>\uff0c\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5b9e\u53c2\u200b\u662f\u200b <code>ONCAT(a, b)</code>\uff0c\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u4e5f\u200b\u4f1a\u200b\u628a\u200b\u5b9e\u53c2\u200b\u5904\u7406\u200b\u6210\u200b\u4e00\u4e2a\u4e2a\u200b\u7684\u200b <code>Token</code>\uff0c\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u6253\u5370\u200b\u7684\u200b\u7ed3\u679c\u200b\u7528\u200b\u4e2d\u62ec\u53f7\u200b\u5305\u4f4f\u200b\u4e86\u200b\u5b9e\u53c2\u200b\u7684\u200b\u6bcf\u4e2a\u200b <code>Token</code>\uff08\u200b\u7b2c\u200b 18 \u200b\u884c\u200b\uff09\uff0c\u200b\u7531\u4e8e\u200b <code>##</code> \u200b\u7684\u200b\u539f\u56e0\u200b\u8fd9\u4e2a\u200b\u5b9e\u53c2\u200b\u4f9d\u7136\u200b\u4e0d\u200b\u9700\u8981\u200b\u5c55\u5f00\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd8\u662f\u200b\u76f4\u63a5\u200b\u590d\u5236\u5230\u200b\u7ed3\u679c\u200b\u4e0a\u200b\uff08\u200b\u7b2c\u200b 16-18 \u200b\u884c\u200b\uff09\u3002</p> <p>\u200b\u6700\u540e\u200b <code>Leave ExpandFunctionArguments</code> \u200b\u6253\u5370\u200b\u672c\u6b21\u200b\u626b\u63cf\u200b\u5c55\u5f00\u200b\u5f97\u5230\u200b\u7684\u200b\u7ed3\u679c\u200b\uff08\u200b\u7b2c\u200b 19 \u200b\u884c\u200b\uff09\uff0c\u200b\u628a\u200b\u7ed3\u679c\u200b\u7684\u200b <code>Token</code> \u200b\u90fd\u200b\u7ffb\u8bd1\u200b\u8fc7\u6765\u200b\u5c31\u662f\u200b <code>C ## ONCAT(a, b)</code>\uff0c\u200b\u4e4b\u540e\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u5c31\u200b\u6267\u884c\u200b <code>##</code> \u200b\u64cd\u4f5c\u7b26\u200b\u6765\u200b\u751f\u6210\u200b\u65b0\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002</p> <p><code>##</code> \u200b\u6267\u884c\u200b\u4e4b\u540e\u200b\u5f97\u5230\u200b <code>CONCAT(a, b)</code>\uff0c\u200b\u9047\u5230\u200b\u5b8f\u200b <code>CONCAT</code>\uff0c\u200b\u9884\u5904\u7406\u200b\u8fd8\u662f\u200b\u5148\u200b\u8fdb\u5165\u200b <code>HandleIdentifier</code>\uff0c\u200b\u6253\u5370\u200b\u5b8f\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u53d1\u73b0\u200b\u8be5\u5b8f\u200b\u72b6\u6001\u200b\u662f\u200b <code>disable used</code>\uff0c\u200b\u662f\u200b\u5df2\u7ecf\u200b\u5c55\u5f00\u200b\u8fc7\u200b\u7684\u200b\uff0c\u200b\u7981\u6b62\u200b\u518d\u200b\u91cd\u5165\u200b\u4e86\u200b\uff0c\u200b\u663e\u793a\u200b <code>Macro is not ok to expand</code>\uff0c\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u4e0d\u518d\u200b\u5c55\u5f00\u200b\uff0c\u200b\u6700\u7ec8\u200b\u5f97\u5230\u200b\u7684\u200b\u7ed3\u679c\u200b\u5c31\u662f\u200b <code>CONCAT(a, b)</code>\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#2","title":"\u4f8b\u5b50\u200b2","text":"<pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n#define IDENTITY(arg0) arg0\n\nIDENTITY(CONCAT(C, ONCAT(a, b)))\n</code></pre>  Clang \u200b\u6253\u5370\u4fe1\u606f\u200b\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\uff09\uff1a <pre><code>HandleIdentifier: \nMacroInfo 0x562a148f5a60\n    #define &lt;macro&gt;[2853:IDENTITY](arg0) arg0\nMacro is ok to expand\n\nHandleIdentifier: \nMacroInfo 0x562a148f5930\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\n\nEnterMacro: 0\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x562a148f5a60 used\n    #define &lt;macro&gt;[2853:IDENTITY](arg0) arg0\nToken: 0\nidentifier: arg0\nArgs: [identifier: CONCAT][l_paren: ][identifier: C][comma: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][r_paren: ]\ngetPreExpArgument: [identifier: CONCAT][l_paren: ][identifier: C][comma: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][r_paren: ][eof: ]\n\nHandleIdentifier: \nMacroInfo 0x562a148f5930\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is ok to expand\n\nEnterMacro: 1\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x562a148f5930 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nToken: 0\nidentifier: arg0\nArgs: [identifier: C]\nToken: 1\nhashhash: \nToken: 2\nidentifier: arg1\nArgs: [identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nLeave ExpandFunctionArguments: [identifier: C][hashhash: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\n\nLeaveMacro: 1\n\nHandleIdentifier: \nMacroInfo 0x562a148f5930 disabled used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\nResultArgToks: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nLeave ExpandFunctionArguments: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\n\nLeaveMacro: 0\n\nHandleIdentifier: \nMacroInfo 0x562a148f5930 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\n</code></pre> <p>\u200b\u7b2c\u200b 12 \u200b\u884c\u200b\u5f00\u59cb\u200b\u5c55\u5f00\u200b <code>IDENTITY</code>\uff0c\u200b\u53d1\u73b0\u200b\u53c2\u6570\u200b <code>Token 0</code> \u200b\u662f\u200b <code>CONCAT(...)</code>\uff0c\u200b\u4e5f\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b8f\u200b\uff0c\u200b\u4e8e\u662f\u200b\u5148\u5bf9\u200b\u8be5\u200b\u53c2\u6570\u200b\u8fdb\u884c\u200b\u6c42\u503c\u200b\u3002</p> <p>\u200b\u7b2c\u200b 27 \u200b\u884c\u200b\u5f00\u59cb\u200b\u5c55\u5f00\u200b\u53c2\u6570\u200b\u5b8f\u200b <code>CONCAT(...)</code>\uff0c\u200b\u8ddf\u200b\u4f8b\u5b50\u200b 1 \u200b\u4e00\u6837\u200b\uff0c\u200b\u591a\u6b21\u200b\u626b\u63cf\u200b\u5c55\u5f00\u200b\u5b8c\u6210\u200b\u540e\u200b\u5f97\u5230\u200b <code>CONCAT(a, b)</code> \uff08\u200b\u7b2c\u200b 46 \u200b\u884c\u200b\uff09\u3002</p> <p>\u200b\u7b2c\u200b 47 \u200b\u7ed3\u675f\u200b\u5bf9\u200b <code>IDENTITY</code> \u200b\u7684\u200b\u5c55\u5f00\u200b\uff0c\u200b\u5f97\u5230\u200b\u7684\u200b\u7ed3\u679c\u200b\u662f\u200b <code>CONCAT(a, b)</code>\u3002</p> <p>\u200b\u7b2c\u200b 51 \u200b\u884c\u200b\u91cd\u65b0\u200b\u626b\u63cf\u200b <code>CONCAT(a, b)</code>\uff0c\u200b\u53d1\u73b0\u200b\u867d\u7136\u200b\u662f\u200b\u5b8f\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u4e4b\u524d\u200b\u7684\u200b\u53c2\u6570\u200b\u5c55\u5f00\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u8bbe\u7f6e\u200b\u6210\u200b\u4e86\u200b <code>used</code>\uff0c\u200b\u4e0d\u518d\u200b\u9012\u5f52\u200b\u5c55\u5f00\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4f5c\u4e3a\u200b\u6700\u7ec8\u200b\u7ed3\u679c\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#3","title":"\u4f8b\u5b50\u200b 3","text":"<pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n#define IDENTITY_IMPL(arg0) arg0\n#define IDENTITY(arg0) IDENTITY_IMPL(arg0)\n\nIDENTITY(CONCAT(C, ONCAT(a, b)))\n</code></pre> Clang \u200b\u6253\u5370\u4fe1\u606f\u200b\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\uff09\uff1a <pre><code>HandleIdentifier: \nMacroInfo 0x55e824457a80\n    #define &lt;macro&gt;[2853:IDENTITY_IMPL](arg0) arg0\n\nHandleIdentifier: \nMacroInfo 0x55e824457ba0\n    #define &lt;macro&gt;[2886:IDENTITY](arg0) IDENTITY_IMPL(arg0)\nMacro is ok to expand\n\nHandleIdentifier: \nMacroInfo 0x55e824457950\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\n\nEnterMacro: 0\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x55e824457ba0 used\n    #define &lt;macro&gt;[2886:IDENTITY](arg0) IDENTITY_IMPL(arg0)\nToken: 0\nidentifier: IDENTITY_IMPL\nToken: 1\nl_paren: \nToken: 2\nidentifier: arg0\nArgs: [identifier: CONCAT][l_paren: ][identifier: C][comma: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][r_paren: ]\ngetPreExpArgument: [identifier: CONCAT][l_paren: ][identifier: C][comma: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][r_paren: ][eof: ]\n\nHandleIdentifier: \nMacroInfo 0x55e824457950\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is ok to expand\n\nEnterMacro: 1\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x55e824457950 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nToken: 0\nidentifier: arg0\nArgs: [identifier: C]\nToken: 1\nhashhash: \nToken: 2\nidentifier: arg1\nArgs: [identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nLeave ExpandFunctionArguments: [identifier: C][hashhash: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\n\nLeaveMacro: 1\n\nHandleIdentifier: \nMacroInfo 0x55e824457950 disabled used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\nResultArgToks: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nToken: 3\nr_paren: \nLeave ExpandFunctionArguments: [identifier: IDENTITY_IMPL][l_paren: ][identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][r_paren: ]\n\nLeaveMacro: 0\n\nHandleIdentifier: \nMacroInfo 0x55e824457a80\n    #define &lt;macro&gt;[2853:IDENTITY_IMPL](arg0) arg0\nMacro is ok to expand\n\nHandleIdentifier: \nMacroInfo 0x55e824457950 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\n\nEnterMacro: 2\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x55e824457a80 used\n    #define &lt;macro&gt;[2853:IDENTITY_IMPL](arg0) arg0\nToken: 0\nidentifier: arg0\nArgs: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\ngetPreExpArgument: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][eof: ]\n\nHandleIdentifier: \nMacroInfo 0x55e824457950 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\nResultArgToks: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nLeave ExpandFunctionArguments: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\n\nLeaveMacro: 2\n\nHandleIdentifier: \nMacroInfo 0x55e824457950 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\n</code></pre> <ul> <li>\u200b\u7b2c\u200b 16 \u200b\u884c\u200b\u5f00\u59cb\u200b\u5c55\u5f00\u200b <code>IDENTITY</code>\uff0c\u200b\u540c\u7406\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u770b\u5230\u200b <code>Token 2</code> \uff08\u200b\u4e5f\u200b\u5373\u200b\u662f\u200b <code>arg0</code>\uff09\u200b\u662f\u200b\u5b8f\u200b\uff0c\u200b\u4e8e\u662f\u200b\u5148\u200b\u5c55\u5f00\u200b <code>CONCAT(C, ONCAT(a, b))</code>\u3002</li> </ul> <ul> <li>\u200b\u5c55\u5f00\u200b <code>arg0</code> \u200b\u540e\u200b\u5f97\u5230\u200b <code>CONCAT(a, b)</code> \uff08\u200b\u7b2c\u200b 23-54 \u200b\u884c\u200b\uff09</li> </ul> <ul> <li><code>IDENTITY</code> \u200b\u6700\u7ec8\u200b\u5c55\u5f00\u200b\u4e3a\u200b <code>IDENTITY_IMPL(CONCAT(a, b))</code>\uff08\u200b\u7b2c\u200b 57 \u200b\u884c\u200b\uff09</li> </ul> <ul> <li>\u200b\u91cd\u65b0\u200b\u626b\u63cf\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u5c55\u5f00\u200b <code>IDENTITY_IMPL</code>\uff08\u200b\u7b2c\u200b 61-72 \u200b\u884c\u200b\uff09\uff0c\u200b\u53d1\u73b0\u200b\u6b64\u65f6\u200b\u7684\u200b <code>Token 0</code> \u200b\u662f\u200b\u5b8f\u200b <code>CONCAT(a, b)</code>\uff0c\u200b\u4f46\u200b\u5904\u4e8e\u200b <code>used</code> \u200b\u72b6\u6001\u200b\uff0c\u200b\u4e2d\u6b62\u200b\u5c55\u5f00\u200b\u5e76\u200b\u8fd4\u56de\u200b\uff08\u200b\u7b2c\u200b 75-84\u200b\u884c\u200b\uff09\uff0c\u200b\u6700\u7ec8\u200b\u5f97\u5230\u200b\u7684\u200b\u7ed3\u679c\u200b\u8fd8\u662f\u200b <code>CONCAT(a, b)</code>\uff08\u200b\u7b2c\u200b 85 \u200b\u884c\u200b\uff09\u3002</li> </ul> <ul> <li>\u200b\u91cd\u65b0\u200b\u626b\u63cf\u200b\u7ed3\u679c\u200b\uff0c\u200b\u53d1\u73b0\u200b\u5b8f\u200b <code>CONCAT(a, b)</code> \u200b\u7684\u200b\u72b6\u6001\u200b\u662f\u200b <code>used</code>\uff0c\u200b\u505c\u6b62\u200b\u5c55\u5f00\u200b\u5e76\u200b\u5f97\u5230\u200b\u6700\u7ec8\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</li> </ul> <p>\u200b\u901a\u8fc7\u200b\u4ee5\u4e0a\u200b\u4e09\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5927\u81f4\u200b\u7684\u200b\u7406\u89e3\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u5c55\u5f00\u200b\u5b8f\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4e0d\u518d\u200b\u5bf9\u9884\u200b\u5904\u7406\u5668\u200b\u8fdb\u884c\u200b\u66f4\u200b\u6df1\u5165\u200b\u7684\u200b\u63a2\u8ba8\u200b\uff0c\u200b\u6709\u200b\u5174\u8da3\u200b\u53ef\u4ee5\u200b\u5bf9\u7167\u200b\u6211\u200b\u63d0\u4f9b\u200b\u7684\u200b\u4fee\u6539\u200b\u6587\u4ef6\u200b\u6765\u200b\u7814\u7a76\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_10","title":"\u5b8f\u200b\u7f16\u7a0b\u200b\u5b9e\u73b0","text":"<p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u5f00\u59cb\u200b\u8fdb\u5165\u200b\u5230\u200b\u4e86\u200b\u4e3b\u9898\u200b\uff08\u200b\u524d\u9762\u200b\u90a3\u200b\u4e00\u5927\u200b\u6bb5\u200b\u76ee\u7684\u200b\u662f\u200b\u4e3a\u4e86\u200b\u66f4\u597d\u200b\u7684\u200b\u7406\u89e3\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u89c4\u5219\u200b\uff09\uff0c\u200b\u5b8f\u200b\u7f16\u7a0b\u200b\u5b9e\u73b0\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_11","title":"\u57fa\u672c\u200b\u7b26\u53f7","text":"<p>\u200b\u9996\u5148\u200b\u53ef\u4ee5\u200b\u5148\u200b\u5b9a\u4e49\u200b\u5b8f\u200b\u7684\u200b\u7279\u6b8a\u7b26\u53f7\u200b\uff0c\u200b\u505a\u200b\u6c42\u503c\u200b\u548c\u200b\u62fc\u63a5\u200b\u7684\u200b\u65f6\u5019\u200b\u4f1a\u200b\u7528\u5230\u200b</p> <pre><code>#define PP_LPAREN() (\n#define PP_RPAREN() )\n#define PP_COMMA() ,\n#define PP_EMPTY() \n#define PP_HASHHASH # ## #      // \u200b\u8868\u793a\u200b ## \u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u4f46\u200b\u53ea\u662f\u200b\u4f5c\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u5f53\u4f5c\u200b ## \u200b\u64cd\u4f5c\u7b26\u200b\u6765\u200b\u5904\u7406\u200b\n</code></pre>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_12","title":"\u6c42\u503c","text":"<p>\u200b\u5229\u7528\u200b\u53c2\u6570\u200b\u4f18\u5148\u200b\u5c55\u5f00\u200b\u7684\u200b\u89c4\u5219\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5199\u51fa\u200b\u4e00\u4e2a\u200b\u6c42\u503c\u200b\u5b8f\u200b\uff1a</p> <pre><code>#define PP_IDENTITY(arg0) arg0\n\nPP_COMMA PP_LPAREN() PP_RPAREN()                // -&gt; PP_COMMA ( )\nPP_IDENTITY(PP_COMMA PP_LPAREN() PP_RPAREN())   // -&gt; PP_COMMA() -&gt; ,\n</code></pre> <p>\u200b\u5982\u679c\u200b\u53ea\u662f\u200b\u5199\u200b <code>PP_COMMA PP_LPAREN() PP_RPAREN()</code>\uff0c\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u53ea\u4f1a\u200b\u5206\u522b\u200b\u5904\u7406\u200b\u6bcf\u4e2a\u200b\u5b8f\u200b\uff0c\u200b\u5bf9\u200b\u5c55\u5f00\u200b\u7684\u200b\u7ed3\u679c\u200b\u4e0d\u4f1a\u200b\u518d\u200b\u5408\u5e76\u200b\u5904\u7406\u200b\u3002\u200b\u52a0\u4e0a\u200b <code>PP_IDENTITY</code> \u200b\u4e4b\u540e\u200b\uff0c\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u5c55\u5f00\u200b\u5f97\u5230\u200b\u7684\u200b <code>PP_COMMA()</code> \u200b\u518d\u200b\u8fdb\u884c\u200b\u6c42\u503c\u200b\uff0c\u200b\u5f97\u5230\u200b <code>,</code>\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_13","title":"\u62fc\u63a5","text":"<p>\u200b\u7531\u4e8e\u200b <code>##</code> \u200b\u62fc\u63a5\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u662f\u200b\u4e0d\u4f1a\u200b\u5c55\u5f00\u200b\u5de6\u53f3\u200b\u4e24\u8fb9\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u8ba9\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u5148\u200b\u6c42\u503c\u200b\u518d\u200b\u62fc\u63a5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8fd9\u6837\u200b\u5199\u200b\uff1a</p> <pre><code>#define PP_CONCAT(arg0, arg1) PP_CONCAT_IMPL(arg0, arg1)\n#define PP_CONCAT_IMPL(arg0, arg1) arg0 ## arg1\n\nPP_CONCAT(PP_IDENTITY(1), PP_IDENTITY(2))         // -&gt; 12\nPP_CONCAT_IMPL(PP_IDENTITY(1), PP_IDENTITY(2))    // -&gt; PP_IDENTITY(1)PP_IDENTITY(2) -&gt; \u200b\u62a5\u9519\u200b\n</code></pre> <p>\u200b\u8fd9\u91cc\u200b <code>PP_CONCAT</code> \u200b\u7528\u5230\u200b\u7684\u200b\u65b9\u6cd5\u200b\u53eb\u505a\u200b\u5ef6\u8fdf\u200b\u62fc\u63a5\u200b\uff0c\u200b\u5728\u200b\u5c55\u5f00\u200b\u4e3a\u200b <code>PP_CONCAT_IMPL</code> \u200b\u7684\u200b\u65f6\u5019\u200b\uff0c<code>arg0</code> \u200b\u548c\u200b <code>arg1</code> \u200b\u90fd\u200b\u4f1a\u200b\u5148\u200b\u5c55\u5f00\u200b\u6c42\u503c\u200b\uff0c\u200b\u4e4b\u540e\u200b\u518d\u200b\u7531\u200b <code>PP_CONCAT_IMPL</code> \u200b\u6267\u884c\u200b\u771f\u6b63\u200b\u7684\u200b\u62fc\u63a5\u200b\u64cd\u4f5c\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_14","title":"\u903b\u8f91\u8fd0\u7b97","text":"<p>\u200b\u501f\u52a9\u200b <code>PP_CONCAT</code> \u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u903b\u8f91\u8fd0\u7b97\u200b\u3002\u200b\u9996\u5148\u200b\u5b9a\u4e49\u200b <code>BOOL</code> \u200b\u503c\u200b\uff1a</p> <pre><code>#define PP_BOOL(arg0) PP_CONCAT(PP_BOOL_, arg0)\n#define PP_BOOL_0 0\n#define PP_BOOL_1 1\n#define PP_BOOL_2 1\n#define PP_BOOL_3 1\n// ...\n#define PP_BOOL_256 1\n\nPP_BOOL(3)              // -&gt; PP_BOOL_3 -&gt; 1\n</code></pre> <p>\u200b\u7528\u200b<code>PP_CONCAT</code> \u200b\u5148\u200b\u628a\u200b <code>PP_BOOL_</code> \u200b\u548c\u200b <code>arg0</code> \u200b\u62fc\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\uff0c\u200b\u518d\u200b\u5bf9\u200b\u62fc\u63a5\u200b\u7ed3\u679c\u200b\u8fdb\u884c\u200b\u6c42\u503c\u200b\u3002\u200b\u8fd9\u91cc\u200b\u7684\u200b <code>arg0</code> \u200b\u8981\u6c42\u200b\u662f\u200b\u6c42\u503c\u200b\u4e4b\u540e\u200b\u5f97\u5230\u200b <code>[0, 256]</code> \u200b\u8303\u56f4\u200b\u7684\u200b\u6570\u5b57\u200b\uff0c\u200b\u62fc\u63a5\u200b\u5728\u200b <code>PP_BOOL_</code> \u200b\u540e\u9762\u200b\u6c42\u503c\u200b\uff0c\u200b\u5c31\u200b\u80fd\u200b\u5f97\u5230\u200b\u5e03\u5c14\u503c\u200b\u3002\u200b\u4e0e\u200b\u6216\u975e\u200b\u8fd0\u7b97\u200b\uff1a</p> <pre><code>#define PP_NOT(arg0) PP_CONCAT(PP_NOT_, PP_BOOL(arg0))\n#define PP_NOT_0 1\n#define PP_NOT_1 0\n\n#define PP_AND(arg0, arg1) PP_CONCAT(PP_AND_, PP_CONCAT(PP_BOOL(arg0), PP_BOOL(arg1)))\n#define PP_AND_00 0\n#define PP_AND_01 0\n#define PP_AND_10 0\n#define PP_AND_11 1\n\n#define PP_OR(arg0, arg1) PP_CONCAT(PP_OR_, PP_CONCAT(PP_BOOL(arg0), PP_BOOL(arg1)))\n#define PP_OR_00 0\n#define PP_OR_01 1\n#define PP_OR_10 1\n#define PP_OR_11 1\n\nPP_NOT(PP_BOOL(2))      // -&gt; PP_CONCAT(PP_NOT_, 1) -&gt; PP_NOT_1 -&gt; 0\nPP_AND(2, 3)            // -&gt; PP_CONCAT(PP_AND_, 11) -&gt; PP_AND_11 -&gt; 1\nPP_AND(2, 0)            // -&gt; PP_CONCAT(PP_AND_, 10) -&gt; PP_AND_10 -&gt; 0\nPP_OR(2, 0)             // -&gt; PP_CONCAT(PP_OR_, 10) -&gt; PP_OR_10, -&gt; 1\n</code></pre> <p>\u200b\u5148\u200b\u7528\u200b <code>PP_BOOL</code> \u200b\u5bf9\u200b\u53c2\u6570\u200b\u6c42\u503c\u200b\uff0c\u200b\u4e4b\u540e\u200b\u518d\u200b\u6839\u636e\u200b <code>0 1</code> \u200b\u7684\u200b\u7ec4\u5408\u200b\u6765\u200b\u62fc\u63a5\u200b\u903b\u8f91\u8fd0\u7b97\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002\u200b\u5982\u679c\u200b\u4e0d\u7528\u200b <code>PP_BOOL</code> \u200b\u6765\u200b\u6c42\u503c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u53c2\u6570\u200b\u5c31\u200b\u53ea\u80fd\u200b\u652f\u6301\u200b <code>0 1</code> \u200b\u4e24\u79cd\u200b\u6570\u503c\u200b\uff0c\u200b\u9002\u7528\u6027\u200b\u5927\u5927\u964d\u4f4e\u200b\u3002\u200b\u540c\u7406\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5199\u51fa\u200b\u5f02\u6216\u200b\uff0c\u200b\u6216\u975e\u200b\u7b49\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6709\u200b\u5174\u8da3\u200b\u53ef\u4ee5\u200b\u81ea\u5df1\u200b\u5c1d\u8bd5\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_15","title":"\u6761\u4ef6\u200b\u9009\u62e9","text":"<p>\u200b\u5229\u7528\u200b <code>PP_BOOL</code> \u200b\u548c\u200b <code>PP_CONCAT</code>\uff0c\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u5199\u51fa\u200b\u6761\u4ef6\u200b\u9009\u62e9\u200b\u8bed\u53e5\u200b\uff1a</p> <pre><code>#define PP_IF(if, then, else) PP_CONCAT(PP_IF_, PP_BOOL(if))(then, else)\n#define PP_IF_1(then, else) then\n#define PP_IF_0(then, else) else\n\nPP_IF(1, 2, 3)      // -&gt; PP_IF_1(2, 3) -&gt; 2\nPP_IF(0, 2, 3)      // -&gt; PP_IF_0(2, 3) -&gt; 3\n</code></pre> <p><code>if</code> \u200b\u6c42\u503c\u200b\u5982\u679c\u200b\u662f\u200b <code>1</code>\uff0c\u200b\u7528\u200b <code>PP_CONCAT</code> \u200b\u62fc\u63a5\u200b\u6210\u200b <code>PP_IF_1</code>\uff0c\u200b\u6700\u540e\u200b\u5c55\u5f00\u200b\u4e3a\u200b <code>then</code> \u200b\u7684\u200b\u503c\u200b\uff1b\u200b\u540c\u7406\u200b\u82e5\u200b <code>if</code> \u200b\u6c42\u503c\u200b\u4e3a\u200b <code>0</code>\uff0c\u200b\u5f97\u5230\u200b <code>PP_IF_0</code>\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_16","title":"\u9012\u589e\u200b\u9012\u51cf","text":"<p>\u200b\u6574\u6570\u200b\u9012\u589e\u200b\u9012\u51cf\u200b\uff1a</p> <pre><code>#define PP_INC(arg0) PP_CONCAT(PP_INC_, arg0)\n#define PP_INC_0 1\n#define PP_INC_1 2\n#define PP_INC_2 3\n#define PP_INC_3 4\n// ...\n#define PP_INC_255 256\n#define PP_INC_256 256\n\n#define PP_DEC(arg0) PP_CONCAT(PP_DEC_, arg0)\n#define PP_DEC_0 0\n#define PP_DEC_1 0\n#define PP_DEC_2 1\n#define PP_DEC_3 2\n// ...\n#define PP_DEC_255 254\n#define PP_DEC_256 255\n\nPP_INC(2)                   // -&gt; PP_INC_2 -&gt; 3\nPP_DEC(3)                   // -&gt; PP_DEC_3 -&gt; 2\n</code></pre> <p>\u200b\u8ddf\u200b <code>PP_BOOL</code> \u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u6574\u6570\u200b\u7684\u200b\u9012\u589e\u200b\u9012\u51cf\u200b\u4e5f\u200b\u662f\u200b\u6709\u200b\u8303\u56f4\u200b\u9650\u5236\u200b\u7684\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u8303\u56f4\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>[0, 256]</code>\uff0c\u200b\u9012\u589e\u200b\u5230\u200b <code>256</code> \u200b\u4e4b\u540e\u200b\uff0c\u200b\u5b89\u5168\u200b\u8d77\u200b\u89c1\u200b\uff0c<code>PP_INC_256</code> \u200b\u4f1a\u200b\u8fd4\u56de\u200b\u81ea\u8eab\u200b <code>256</code> \u200b\u4f5c\u4e3a\u200b\u8fb9\u754c\u200b\uff0c\u200b\u540c\u7406\u200b <code>PP_DEC_0</code> \u200b\u4e5f\u200b\u662f\u200b\u8fd4\u56de\u200b <code>0</code>\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_17","title":"\u53d8\u200b\u957f\u200b\u53c2\u6570","text":"<p>\u200b\u5b8f\u200b\u53ef\u4ee5\u200b\u63a5\u53d7\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\uff0c\u200b\u683c\u5f0f\u200b\u662f\u200b\uff1a</p> <pre><code>#define LOG(format, ...) printf(\"log: \" format, __VA_ARGS__)\n\nLOG(\"Hello %s\\n\", \"World\")      // -&gt; printf(\"log: \" \"Hello %s\\n\", \"World\");\nLOG(\"Hello World\")              // -&gt; printf(\"log: \" \"Hello World\", ); \u200b\u591a\u200b\u4e86\u200b\u4e2a\u200b\u9017\u53f7\u200b\uff0c\u200b\u7f16\u8bd1\u200b\u62a5\u9519\u200b\n</code></pre> <p>\u200b\u7531\u4e8e\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u6709\u200b\u53ef\u80fd\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u7a7a\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u4f1a\u200b\u5bfc\u81f4\u200b\u7f16\u8bd1\u200b\u5931\u8d25\u200b\uff0c\u200b\u56e0\u6b64\u200b C++ 20 \u200b\u5f15\u5165\u200b\u4e86\u200b <code>__VA_OPT__</code>\uff0c\u200b\u5982\u679c\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u662f\u200b\u7a7a\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b\u7a7a\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b\u539f\u200b\u53c2\u6570\u200b\uff1a</p> <pre><code>#define LOG2(format, ...) printf(\"log: \" format __VA_OPT__(,) __VA_ARGS__)\n\nLOG2(\"Hello %s\\n\", \"World\")      // -&gt; printf(\"log: \" \"Hello %s\\n\", \"World\");\nLOG2(\"Hello World\")              // -&gt; printf(\"log: \" \"Hello World\" ); \u200b\u6ca1\u6709\u200b\u9017\u53f7\u200b\uff0c\u200b\u6b63\u5e38\u200b\u7f16\u8bd1\u200b\n</code></pre> <p>\u200b\u4f46\u200b\u53ef\u60dc\u200b\u53ea\u6709\u200b C++ 20 \u200b\u4ee5\u4e0a\u200b\u6807\u51c6\u200b\u624d\u200b\u6709\u200b\u8fd9\u4e2a\u200b\u5b8f\u200b\uff0c\u200b\u4e0b\u6587\u200b\u4e2d\u200b\u6211\u4eec\u200b\u5c06\u4f1a\u200b\u7ed9\u51fa\u200b <code>__VA_OPT__</code> \u200b\u7684\u200b\u5b9e\u73b0\u200b\u65b9\u6cd5\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_18","title":"\u60f0\u6027\u200b\u6c42\u503c","text":"<p>\u200b\u8003\u8651\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\uff1a</p> <pre><code>PP_IF(1, PP_COMMA(), PP_LPAREN())     // -&gt; PP_IF_1(,,)) -&gt; \u200b\u62a5\u9519\u200b unterminated argument list invoking macro \"PP_IF_1\"\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u77e5\u9053\u200b\uff0c\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u7684\u200b\u65f6\u5019\u200b\u4f1a\u200b\u5bf9\u200b\u5148\u200b\u53c2\u6570\u200b\u8fdb\u884c\u200b\u6c42\u503c\u200b\u3002<code>PP_COMMA()</code> \u200b\u548c\u200b <code>PP_LPAREN()</code> \u200b\u6c42\u503c\u200b\u4e4b\u540e\u200b\u518d\u200b\u4f20\u7ed9\u200b <code>PP_IF_1</code>\uff0c\u200b\u5f97\u5230\u200b <code>PP_IF_1(,,))</code>\uff0c\u200b\u5bfc\u81f4\u200b\u9884\u5904\u7406\u200b\u51fa\u9519\u200b\u3002\u200b\u6b64\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u91c7\u7528\u200b\u4e00\u79cd\u200b\u53eb\u505a\u200b\u60f0\u6027\u200b\u6c42\u503c\u200b\u65b9\u6cd5\u200b\uff1a</p> <pre><code>PP_IF(1, PP_COMMA, PP_LPAREN)()       // -&gt; PP_IF_1(PP_COMMA, PP_LPAREN)() -&gt; PP_COMMA() -&gt; ,\n</code></pre> <p>\u200b\u6539\u6210\u200b\u8fd9\u79cd\u200b\u5199\u6cd5\u200b\uff0c\u200b\u53ea\u200b\u4f20\u5b8f\u200b\u7684\u200b\u540d\u5b57\u200b\uff0c\u200b\u8ba9\u200b <code>PP_IF</code> \u200b\u9009\u51fa\u200b\u9700\u8981\u200b\u7684\u200b\u5b8f\u200b\u540d\u5b57\u200b\u4e4b\u540e\u200b\uff0c\u200b\u518d\u200b\u8ddf\u200b\u62ec\u53f7\u200b <code>()</code> \u200b\u62fc\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\u7ec4\u6210\u200b\u5b8c\u6210\u200b\u7684\u200b\u5b8f\u200b\uff0c\u200b\u6700\u540e\u200b\u518d\u200b\u5c55\u5f00\u200b\u3002\u200b\u60f0\u6027\u200b\u6c42\u503c\u200b\u5728\u200b\u5b8f\u200b\u7f16\u7a0b\u200b\u91cc\u9762\u200b\u4e5f\u200b\u662f\u200b\u5f88\u200b\u5e38\u89c1\u200b\u7684\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_19","title":"\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb","text":"<p>\u200b\u5224\u65ad\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u662f\u5426\u200b\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb\u200b\uff1a</p> <pre><code>#define PP_IS_BEGIN_PARENS(...) \\\n    PP_IS_BEGIN_PARENS_PROCESS( \\\n        PP_IS_BEGIN_PARENS_CONCAT( \\\n            PP_IS_BEGIN_PARENS_PRE_, PP_IS_BEGIN_PARENS_EAT __VA_ARGS__ \\\n        ) \\\n    )\n\n#define PP_IS_BEGIN_PARENS_PROCESS(...) PP_IS_BEGIN_PARENS_PROCESS_0(__VA_ARGS__)\n#define PP_IS_BEGIN_PARENS_PROCESS_0(arg0, ...) arg0\n\n#define PP_IS_BEGIN_PARENS_CONCAT(arg0, ...) PP_IS_BEGIN_PARENS_CONCAT_IMPL(arg0, __VA_ARGS__)\n#define PP_IS_BEGIN_PARENS_CONCAT_IMPL(arg0, ...) arg0 ## __VA_ARGS__\n\n#define PP_IS_BEGIN_PARENS_PRE_1 1,\n#define PP_IS_BEGIN_PARENS_PRE_PP_IS_BEGIN_PARENS_EAT 0,\n#define PP_IS_BEGIN_PARENS_EAT(...) 1\n\nPP_IS_BEGIN_PARENS(())              // -&gt; 1\nPP_IS_BEGIN_PARENS((()))            // -&gt; 1\nPP_IS_BEGIN_PARENS(a, b, c)         // -&gt; 0\nPP_IS_BEGIN_PARENS(a, ())           // -&gt; 0\nPP_IS_BEGIN_PARENS(a())             // -&gt; 0\nPP_IS_BEGIN_PARENS(()aa(bb()cc))    // -&gt; 1\nPP_IS_BEGIN_PARENS(aa(bb()cc))      // -&gt; 0\n</code></pre> <p><code>PP_IS_BEGIN_PARENS</code> \u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u5224\u65ad\u200b\u4f20\u5165\u200b\u7684\u200b\u53c2\u6570\u200b\u662f\u5426\u200b\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb\u200b\uff0c\u200b\u5728\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u62ec\u53f7\u200b\u53c2\u6570\u200b\u7684\u200b\u65f6\u5019\u200b\u4f1a\u200b\u9700\u8981\u200b\u7528\u5230\u200b\uff08\u200b\u8b6c\u5982\u200b\u540e\u9762\u200b\u8bf4\u200b\u5230\u200b\u7684\u200b <code>__VA_OPT__</code> \u200b\u5b9e\u73b0\u200b\uff09\u3002\u200b\u770b\u4e0a\u53bb\u200b\u6709\u70b9\u200b\u590d\u6742\u200b\uff0c\u200b\u6838\u5fc3\u601d\u60f3\u200b\u5c31\u662f\u200b\u6784\u5efa\u200b\u51fa\u200b\u4e00\u4e2a\u200b\u5b8f\u200b\uff0c\u200b\u82e5\u200b\u53d8\u957f\u200b\u53c2\u6570\u200b\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u8ddf\u200b\u62ec\u53f7\u200b\u8fde\u5728\u4e00\u8d77\u200b\u6c42\u200b\u503c\u5f97\u200b\u5230\u200b\u4e00\u79cd\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5426\u5219\u200b\u5c31\u200b\u53e6\u5916\u200b\u6c42\u200b\u503c\u5f97\u200b\u5230\u200b\u53e6\u200b\u4e00\u79cd\u200b\u7ed3\u679c\u200b\u3002\u200b\u6211\u4eec\u200b\u6765\u200b\u6162\u6162\u200b\u770b\u200b\uff1a</p> <p><code>PP_IS_BEGIN_PARENS_PROCESS</code> \u200b\u548c\u200b <code>PP_IS_BEGIN_PARENS_PROCESS_0</code> \u200b\u7ec4\u6210\u200b\u7684\u200b\u5b8f\u200b\u529f\u80fd\u200b\u662f\u200b\u5148\u200b\u5bf9\u200b\u4f20\u5165\u200b\u7684\u200b\u4e0d\u5b9a\u200b\u53c2\u6570\u200b\u6c42\u503c\u200b\uff0c\u200b\u7136\u540e\u200b\u53d6\u200b\u7b2c\u200b 0 \u200b\u4e2a\u200b\u53c2\u6570\u200b\u3002</p> <p><code>PP_IS_BEGIN_PARENS_CONCAT(PP_IS_BEGIN_PARENS_PRE_, PP_IS_BEGIN_PARENS_EAT __VA_ARGS__)</code> \u200b\u662f\u200b\u5148\u200b\u5bf9\u200b <code>PP_IS_BEGIN_PARENS_EAT __VA_ARGS__</code> \u200b\u6c42\u503c\u200b\uff0c\u200b\u5728\u200b\u628a\u200b\u6c42\u503c\u200b\u7ed3\u679c\u200b\u8ddf\u200b <code>PP_IS_BEGIN_PARENS_PRE_</code> \u200b\u62fc\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\u3002</p> <p><code>PP_IS_BEGIN_PARENS_EAT(...)</code> \u200b\u5b8f\u4f1a\u200b\u541e\u6389\u200b\u6240\u6709\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fd4\u56de\u200b1\uff0c\u200b\u5982\u679c\u200b\u4e0a\u200b\u4e00\u6b65\u200b <code>PP_IS_BEGIN_PARENS_EAT __VA_ARGS__</code> \u200b\u4e2d\u200b\uff0c<code>__VA_ARGS__</code> \u200b\u662f\u200b\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb\u200b\u7684\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5c31\u200b\u4f1a\u200b\u5339\u914d\u200b\u5230\u200b\u5bf9\u200b <code>PP_IS_BEGIN_PARENS_EAT(...)</code> \u200b\u7684\u200b\u6c42\u503c\u200b\uff0c\u200b\u7136\u540e\u200b\u8fd4\u56de\u200b <code>1</code>\uff1b\u200b\u76f8\u53cd\u200b\uff0c\u200b\u5982\u679c\u200b\u4e0d\u662f\u200b\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb\u200b\uff0c\u200b\u5219\u200b\u6ca1\u6709\u200b\u5339\u914d\u200b\u4e0a\u200b\uff0c<code>PP_IS_BEGIN_PARENS_EAT __VA_ARGS__</code> \u200b\u4f1a\u200b\u4fdd\u7559\u200b\u4e0d\u53d8\u200b\u3002</p> <p>\u200b\u82e5\u200b <code>PP_IS_BEGIN_PARENS_EAT __VA_ARGS__</code> \u200b\u6c42\u200b\u503c\u5f97\u200b\u5230\u200b <code>1</code>\uff0c<code>PP_IS_BEGIN_PARENS_CONCAT(PP_IS_BEGIN_PARENS_PRE_, 1) -&gt; PP_IS_BEGIN_PARENS_PRE_1 -&gt; 1,</code>\uff0c\u200b\u6ce8\u610f\u200b <code>1</code> \u200b\u540e\u9762\u200b\u662f\u200b\u6709\u200b\u4e2a\u200b\u9017\u53f7\u200b\u7684\u200b\uff0c\u200b\u628a\u200b <code>1,</code> \u200b\u4f20\u7ed9\u200b <code>PP_IS_BEGIN_PARENS_PROCESS_0</code>\uff0c\u200b\u53d6\u200b\u7b2c\u200b 0 \u200b\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u6700\u540e\u200b\u5f97\u5230\u200b <code>1</code>\uff0c\u200b\u8868\u793a\u200b\u53c2\u6570\u200b\u662f\u200b\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb\u200b\u3002</p> <p>\u200b\u82e5\u200b <code>PP_IS_BEGIN_PARENS_EAT __VA_ARGS__</code> \u200b\u6c42\u200b\u503c\u5f97\u200b\u5230\u200b\u4e0d\u662f\u200b <code>1</code>\uff0c\u200b\u800c\u662f\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u5219\u200b <code>PP_IS_BEGIN_PARENS_CONCAT(PP_IS_BEGIN_PARENS_PRE_, PP_IS_BEGIN_PARENS_EAT __VA_ARGS__) -&gt; PP_IS_BEGIN_PARENS_PRE_PP_IS_BEGIN_PARENS_EAT __VA_ARGS__ -&gt; 0, __VA_ARGS__</code>\uff0c\u200b\u4f20\u7ed9\u200b <code>PP_IS_BEGIN_PARENS_PROCESS_0</code> \u200b\u5f97\u5230\u200b\u7684\u200b\u662f\u200b <code>0</code>\uff0c\u200b\u8868\u793a\u200b\u53c2\u6570\u200b\u4e0d\u662f\u200b\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_20","title":"\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u7a7a","text":"<p>\u200b\u5224\u65ad\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u662f\u5426\u200b\u4e3a\u7a7a\u200b\u4e5f\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5e38\u7528\u200b\u7684\u200b\u5b8f\u200b\uff0c\u200b\u5728\u200b\u5b9e\u73b0\u200b <code>__VA_OPT__</code> \u200b\u7684\u200b\u65f6\u5019\u200b\u9700\u8981\u200b\u7528\u5230\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u8fd9\u91cc\u200b\u5229\u7528\u200b <code>PP_IS_BEGIN_PARENS</code>\uff0c\u200b\u53ef\u4ee5\u200b\u5148\u200b\u5199\u51fa\u200b\u4e0d\u200b\u5b8c\u6574\u200b\u7684\u200b\u7248\u672c\u200b\uff1a</p> <pre><code>#define PP_IS_EMPTY_PROCESS(...) \\\n    PP_IS_BEGIN_PARENS(PP_IS_EMPTY_PROCESS_EAT __VA_ARGS__ ())\n#define PP_IS_EMPTY_PROCESS_EAT(...) ()\n\nPP_IS_EMPTY_PROCESS()       // -&gt; 1\nPP_IS_EMPTY_PROCESS(1)      // -&gt; 0\nPP_IS_EMPTY_PROCESS(1, 2)   // -&gt; 0\nPP_IS_EMPTY_PROCESS(())     // -&gt; 1\n</code></pre> <p><code>PP_IS_EMPTY_PROCESS</code> \u200b\u7684\u200b\u4f5c\u7528\u200b\u662f\u200b\u5224\u65ad\u200b <code>PP_IS_EMPTY_PROCESS_EAT __VA_ARGS__ ()</code> \u200b\u662f\u5426\u200b\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b <code>__VA_ARGS__</code> \u200b\u662f\u200b\u7a7a\u200b\uff0c<code>PP_IS_EMPTY_PROCESS_EAT __VA_ARGS__ () -&gt; PP_IS_EMPTY_PROCESS_EAT() -&gt; ()</code>\uff0c\u200b\u5f97\u5230\u200b\u7684\u200b\u662f\u200b\u4e00\u5bf9\u200b\u62ec\u53f7\u200b <code>()</code>\uff0c\u200b\u518d\u200b\u4f20\u7ed9\u200b <code>PP_IS_BEGIN_PARENS</code> \u200b\u8fd4\u56de\u200b <code>1</code>\uff0c\u200b\u8868\u793a\u200b\u53c2\u6570\u200b\u662f\u200b\u7a7a\u200b\u3002</p> <p>\u200b\u5426\u5219\u200b\uff0c<code>PP_IS_EMPTY_PROCESS_EAT __VA_ARGS__ ()</code> \u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\u5730\u200b\u4f20\u7ed9\u200b <code>PP_IS_BEGIN_PARENS</code>\uff0c\u200b\u8fd4\u56de\u200b 0\uff0c\u200b\u8868\u793a\u200b\u975e\u7a7a\u200b\u3002</p> <p>\u200b\u7559\u610f\u200b\u7b2c\u200b 4 \u200b\u4e2a\u200b\u4f8b\u5b50\u200b <code>PP_IS_EMPTY_PROCESS(()) -&gt; 1</code>\uff0c<code>PP_IS_EMPTY_PROCESS</code> \u200b\u4e0d\u80fd\u200b\u6b63\u786e\u5904\u7406\u200b\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb\u200b\u7684\u200b\u53d8\u957f\u200b\u53c2\u6570\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u65f6\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u5e26\u6765\u200b\u7684\u200b\u62ec\u53f7\u200b\u4f1a\u200b\u5339\u914d\u200b <code>PP_IS_EMPTY_PROCESS_EAT</code> \u200b\u5bfc\u81f4\u200b\u6c42\u200b\u503c\u5f97\u200b\u5230\u200b <code>()</code>\u3002\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u533a\u522b\u5bf9\u5f85\u200b\u53c2\u6570\u200b\u662f\u5426\u200b\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb\u200b\u7684\u200b\u60c5\u51b5\u200b\uff1a</p> <pre><code>#define PP_IS_EMPTY(...) \\\n    PP_IS_EMPTY_IF(PP_IS_BEGIN_PARENS(__VA_ARGS__)) \\\n        (PP_IS_EMPTY_ZERO, PP_IS_EMPTY_PROCESS)(__VA_ARGS__)\n\n#define PP_IS_EMPTY_IF(if) PP_CONCAT(PP_IS_EMPTY_IF_, if)\n#define PP_IS_EMPTY_IF_1(then, else) then\n#define PP_IS_EMPTY_IF_0(then, else) else\n\n#define PP_IS_EMPTY_ZERO(...) 0\n\nPP_IS_EMPTY()       // -&gt; 1\nPP_IS_EMPTY(1)      // -&gt; 0\nPP_IS_EMPTY(1, 2)   // -&gt; 0\nPP_IS_EMPTY(())     // -&gt; 0\n</code></pre> <p><code>PP_IS_EMPTY_IF</code> \u200b\u6839\u636e\u200b <code>if</code> \u200b\u6761\u4ef6\u200b\u6765\u200b\u8fd4\u56de\u200b\u7b2c\u200b 0 \u200b\u6216\u8005\u200b \u200b\u7b2c\u200b 1 \u200b\u4e2a\u200b\u53c2\u6570\u200b\u3002 </p> <p>\u200b\u5982\u679c\u200b\u4f20\u5165\u200b\u7684\u200b\u53d8\u957f\u200b\u53c2\u6570\u200b\u4ee5\u200b\u62ec\u53f7\u200b\u5f00\u59cb\u200b\uff0c<code>PP_IS_EMPTY_IF</code> \u200b\u8fd4\u56de\u200b <code>PP_IS_EMPTY_ZERO</code>\uff0c\u200b\u6700\u540e\u200b\u8fd4\u56de\u200b <code>0</code>\uff0c\u200b\u8868\u793a\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u975e\u7a7a\u200b\u3002</p> <p>\u200b\u53cd\u4e4b\u200b <code>PP_IS_EMPTY_IF</code> \u200b\u8fd4\u56de\u200b <code>PP_IS_EMPTY_PROCESS</code>\uff0c\u200b\u6700\u540e\u200b\u7531\u200b <code>PP_IS_EMPTY_PROCESS</code> \u200b\u6765\u200b\u5224\u65ad\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u662f\u5426\u200b\u975e\u7a7a\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_21","title":"\u4e0b\u6807\u200b\u8bbf\u95ee","text":"<p>\u200b\u83b7\u53d6\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5143\u7d20\u200b\uff1a</p> <pre><code>#define PP_ARGS_ELEM(I, ...) PP_CONCAT(PP_ARGS_ELEM_, I)(__VA_ARGS__)\n#define PP_ARGS_ELEM_0(a0, ...) a0\n#define PP_ARGS_ELEM_1(a0, a1, ...) a1\n#define PP_ARGS_ELEM_2(a0, a1, a2, ...) a2\n#define PP_ARGS_ELEM_3(a0, a1, a2, a3, ...) a3\n// ...\n#define PP_ARGS_ELEM_7(a0, a1, a2, a3, a4, a5, a6, a7, ...) a7\n#define PP_ARGS_ELEM_8(a0, a1, a2, a3, a4, a5, a6, a7, a8, ...) a8\n\nPP_ARGS_ELEM(0, \"Hello\", \"World\")   // -&gt; PP_ARGS_ELEM_0(\"Hello\", \"World\") -&gt; \"Hello\"\nPP_ARGS_ELEM(1, \"Hello\", \"World\")   // -&gt; PP_ARGS_ELEM_1(\"Hello\", \"World\") -&gt; \"World\"\n</code></pre> <p><code>PP_ARGS_ELEM</code> \u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u662f\u200b\u5143\u7d20\u200b\u4e0b\u6807\u200b <code>I</code>\uff0c\u200b\u540e\u9762\u200b\u662f\u200b\u53d8\u957f\u200b\u53c2\u6570\u200b\u3002\u200b\u5229\u7528\u200b <code>PP_CONCAT</code> \u200b\u62fc\u63a5\u200b <code>PP_ARGS_ELEM_</code> \u200b\u548c\u200b <code>I</code>\uff0c\u200b\u5373\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u8fd4\u56de\u200b\u76f8\u5e94\u200b\u4f4d\u7f6e\u200b\u5143\u7d20\u200b\u7684\u200b\u5b8f\u200b <code>PP_ARGS_ELEM_0..8</code>\uff0c\u200b\u518d\u200b\u628a\u200b\u53d8\u957f\u200b\u53c2\u6570\u200b\u4f20\u7ed9\u200b\u8be5\u5b8f\u200b\uff0c\u200b\u5c55\u5f00\u200b\u8fd4\u56de\u200b\u4e0b\u6807\u200b\u5bf9\u5e94\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u5143\u7d20\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#pp_is_empty2","title":"PP_IS_EMPTY2","text":"<p>\u200b\u5229\u7528\u200b <code>PP_ARGS_ELEM</code> \u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u53e6\u200b\u4e00\u200b\u7248\u672c\u200b\u7684\u200b <code>PP_IS_EMPTY</code>\uff1a</p> <pre><code>#define PP_IS_EMPTY2(...) \\\n    PP_AND( \\\n        PP_AND( \\\n            PP_NOT(PP_HAS_COMMA(__VA_ARGS__)), \\\n            PP_NOT(PP_HAS_COMMA(__VA_ARGS__())) \\\n        ), \\\n        PP_AND( \\\n            PP_NOT(PP_HAS_COMMA(PP_COMMA_ARGS __VA_ARGS__)), \\\n            PP_HAS_COMMA(PP_COMMA_ARGS __VA_ARGS__ ()) \\\n        ) \\\n    )\n\n#define PP_HAS_COMMA(...) PP_ARGS_ELEM(8, __VA_ARGS__, 1, 1, 1, 1, 1, 1, 1, 0)\n#define PP_COMMA_ARGS(...) ,\n\nPP_IS_EMPTY2()              // -&gt; 1\nPP_IS_EMPTY2(a)             // -&gt; 0\nPP_IS_EMPTY2(a, b)          // -&gt; 0\nPP_IS_EMPTY2(())            // -&gt; 0\nPP_IS_EMPTY2(PP_COMMA)      // -&gt; 0\n</code></pre> <p>\u200b\u501f\u7528\u200b <code>PP_ARGS_ELEM</code> \u200b\u5b9e\u73b0\u200b\u5224\u65ad\u200b\u53c2\u6570\u200b\u662f\u5426\u200b\u542b\u6709\u200b\u9017\u53f7\u200b <code>PP_HAS_COMMA</code>\u3002<code>PP_COMMA_ARGS</code> \u200b\u4f1a\u200b\u541e\u6389\u200b\u4f20\u5165\u200b\u7684\u200b\u4efb\u610f\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u9017\u53f7\u200b\u3002</p> <p>\u200b\u5224\u65ad\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u662f\u5426\u200b\u4e3a\u7a7a\u200b\u7684\u200b\u57fa\u7840\u200b\u903b\u8f91\u200b\u662f\u200b <code>PP_COMMA_ARGS __VA_ARGS__ ()</code> \u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u9017\u53f7\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b <code>__VA_ARGS__</code> \u200b\u4e3a\u7a7a\u200b\uff0c<code>PP_COMMA_ARGS</code> \u200b\u548c\u200b <code>()</code> \u200b\u62fc\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\u6c42\u503c\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\u5199\u6cd5\u200b\u5c31\u662f\u200b <code>PP_HAS_COMMA(PP_COMMA_ARGS __VA_ARGS__ ())</code>\u3002</p> <p>\u200b\u4f46\u662f\u200b\u4f1a\u200b\u6709\u200b\u4f8b\u5916\u200b\u7684\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li><code>__VA_ARGS__</code> \u200b\u672c\u8eab\u200b\u6709\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5e26\u6765\u200b\u9017\u53f7\u200b\uff1b</li> <li><code>__VA_ARGS__ ()</code> \u200b\u62fc\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\u53d1\u751f\u200b\u6c42\u503c\u200b\u5e26\u6765\u200b\u9017\u53f7\u200b\uff1b</li> <li><code>PP_COMMA_ARGS __VA_ARGS__</code> \u200b\u62fc\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\u53d1\u751f\u200b\u6c42\u503c\u200b\u5e26\u6765\u200b\u9017\u53f7\u200b\uff1b</li> </ul> <p>\u200b\u9488\u5bf9\u200b\u4e0a\u9762\u200b\u8bf4\u200b\u5230\u200b\u7684\u200b\u4e09\u79cd\u200b\u4f8b\u5916\u60c5\u51b5\u200b\uff0c\u200b\u9700\u8981\u200b\u505a\u200b\u6392\u9664\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u540e\u200b\u7684\u200b\u5199\u6cd5\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u5bf9\u200b\u4ee5\u4e0b\u200b 4 \u200b\u4e2a\u200b\u6761\u4ef6\u200b\u6267\u884c\u200b\u4e0e\u200b\u903b\u8f91\u200b\uff1a</p> <ul> <li><code>PP_NOT(PP_HAS_COMMA(__VA_ARGS__))</code> &amp;&amp;</li> <li><code>PP_NOT(PP_HAS_COMMA(__VA_ARGS__()))</code> &amp;&amp;</li> <li><code>PP_NOT(PP_HAS_COMMA(PP_COMMA_ARGS __VA_ARGS__))</code> &amp;&amp;</li> <li><code>PP_HAS_COMMA(PP_COMMA_ARGS __VA_ARGS__ ())</code></li> </ul>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#__va_opt__","title":"<code>__VA_OPT__</code>","text":"<p>\u200b\u5229\u7528\u200b <code>PP_IS_EMPTY</code> \u200b\u7ec8\u4e8e\u200b\u53ef\u4ee5\u200b\u6765\u200b\u5b9e\u73b0\u200b\u7c7b\u4f3c\u200b <code>__VA_OPT__</code> \u200b\u7684\u200b\u5b8f\u200b\uff1a</p> <pre><code>#define PP_REMOVE_PARENS(tuple) PP_REMOVE_PARENS_IMPL tuple\n#define PP_REMOVE_PARENS_IMPL(...) __VA_ARGS__\n\n#define PP_ARGS_OPT(data_tuple, empty_tuple, ...) \\\n    PP_ARGS_OPT_IMPL(PP_IF(PP_IS_EMPTY(__VA_ARGS__), empty_tuple, data_tuple))\n#define PP_ARGS_OPT_IMPL(tuple) PP_REMOVE_PARENS(tuple)\n\nPP_ARGS_OPT((data), (empty))        // -&gt; empty\nPP_ARGS_OPT((data), (empty), 1)     // -&gt; data\nPP_ARGS_OPT((,), (), 1)             // -&gt; ,\n</code></pre> <p><code>PP_ARGS_OPT</code> \u200b\u63a5\u53d7\u200b\u4e24\u4e2a\u200b\u56fa\u5b9a\u200b\u53c2\u6570\u200b\u548c\u200b\u53d8\u957f\u200b\u53c2\u6570\u200b\uff0c\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u975e\u7a7a\u65f6\u200b\u8fd4\u56de\u200b <code>data</code>\uff0c\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b <code>empty</code>\u3002\u200b\u4e3a\u4e86\u200b\u8ba9\u200b <code>data</code> \u200b\u548c\u200b <code>empty</code> \u200b\u652f\u6301\u200b\u9017\u53f7\u200b\uff0c\u200b\u8981\u6c42\u200b\u4e24\u8005\u200b\u90fd\u200b\u8981\u200b\u7528\u200b\u62ec\u53f7\u200b\u5305\u4f4f\u200b\u5b9e\u9645\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u6700\u540e\u200b\u7528\u200b <code>PP_REMOVE_PARENS</code> \u200b\u6765\u200b\u79fb\u9664\u200b\u5916\u5c42\u200b\u7684\u200b\u62ec\u53f7\u200b\u3002</p> <p>\u200b\u6709\u200b\u4e86\u200b <code>PP_ARGS_OPT</code> \u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b <code>LOG3</code> \u200b\u6765\u200b\u6a21\u62df\u200b <code>LOG2</code> \u200b\u5b9e\u73b0\u200b\u7684\u200b\u529f\u80fd\u200b\uff1a</p> <pre><code>#define LOG3(format, ...) \\\n    printf(\"log: \" format PP_ARGS_OPT((,), (), __VA_ARGS__) __VA_ARGS__)\n\nLOG3(\"Hello\");                  // -&gt; printf(\"log: \" \"Hello\" );\nLOG3(\"Hello %s\", \"World\");      // -&gt; printf(\"log: \" \"Hello %s\" , \"World\");\n</code></pre> <p><code>data_tuple</code> \u200b\u662f\u200b <code>(,)</code>\uff0c\u200b\u5982\u679c\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u975e\u7a7a\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u8fd4\u56de\u200b <code>data_tuple</code> \u200b\u91cc\u9762\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\uff0c\u200b\u5728\u200b\u8fd9\u91cc\u200b\u5c31\u662f\u200b\u9017\u53f7\u200b <code>,</code>\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_22","title":"\u6c42\u200b\u53c2\u6570\u200b\u4e2a\u6570","text":"<p>\u200b\u83b7\u53d6\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u7684\u200b\u4e2a\u6570\u200b\uff1a</p> <pre><code>#define PP_ARGS_SIZE_IMCOMPLETE(...) \\\n    PP_ARGS_ELEM(8, __VA_ARGS__, 8, 7, 6, 5, 4, 3, 2, 1, 0)\n\nPP_ARGS_SIZE_IMCOMPLETE(a)             // -&gt; 1\nPP_ARGS_SIZE_IMCOMPLETE(a, b)          // -&gt; 2\nPP_ARGS_SIZE_IMCOMPLETE(PP_COMMA())    // -&gt; 2\nPP_ARGS_SIZE_IMCOMPLETE()              // -&gt; 1\n</code></pre> <p>\u200b\u8ba1\u7b97\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u7684\u200b\u4e2a\u6570\u200b\uff0c\u200b\u662f\u200b\u901a\u8fc7\u200b\u6570\u200b\u53c2\u6570\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u6765\u200b\u83b7\u5f97\u200b\u7684\u200b\u3002<code>__VA_ARGS__</code> \u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u540e\u7eed\u200b\u7684\u200b\u53c2\u6570\u200b\u5168\u4f53\u200b\u5f80\u53f3\u200b\u79fb\u52a8\u200b\uff0c\u200b\u7528\u5b8f\u200b <code>PP_ARGS_ELEM</code> \u200b\u6765\u200b\u83b7\u53d6\u200b\u7b2c\u200b 8 \u200b\u4e2a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u5982\u679c\u200b <code>__VA_ARGS__</code> \u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5219\u200b\u7b2c\u200b 8 \u200b\u4e2a\u200b\u53c2\u6570\u200b\u7b49\u4e8e\u200b <code>1</code>\uff1b\u200b\u540c\u7406\u200b\u5982\u679c\u200b <code>__VA_ARGS__</code> \u200b\u6709\u200b\u4e24\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5219\u200b\u7b2c\u200b 8 \u200b\u4e2a\u200b\u53c2\u6570\u200b\u5c31\u200b\u53d8\u4e3a\u200b <code>2</code>\uff0c\u200b\u521a\u597d\u200b\u7b49\u4e8e\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u7684\u200b\u4e2a\u6570\u200b\u3002</p> <p>\u200b\u8fd9\u91cc\u200b\u7ed9\u200b\u7684\u200b\u4f8b\u5b50\u200b\u53ea\u200b\u6700\u9ad8\u200b\u652f\u6301\u200b\u4e2a\u6570\u200b 8 \u200b\u7684\u200b\u53d8\u957f\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fd9\u662f\u200b\u4f9d\u8d56\u4e8e\u200b <code>PP_ARGS_ELEM</code> \u200b\u6240\u200b\u80fd\u200b\u652f\u6301\u200b\u7684\u200b\u6700\u5927\u200b\u957f\u5ea6\u200b\u3002</p> <p>\u200b\u4f46\u662f\u200b\u8fd9\u4e2a\u200b\u5b8f\u200b\u8fd8\u200b\u4e0d\u200b\u5b8c\u6574\u200b\uff0c\u200b\u5728\u200b\u53d8\u957f\u200b\u53c2\u6570\u200b\u4e3a\u7a7a\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u5b8f\u4f1a\u200b\u9519\u8bef\u200b\u8fd4\u56de\u200b <code>1</code>\u3002\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u7a7a\u200b\u7684\u200b\u53d8\u957f\u200b\u53c2\u6570\u200b\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u7528\u5230\u200b\u6211\u4eec\u200b\u524d\u9762\u200b\u8bf4\u200b\u5230\u200b\u7684\u200b <code>PP_ARGS_OPT</code> \u200b\u5b8f\u200b\uff1a</p> <pre><code>#define PP_COMMA_IF_ARGS(...) PP_ARGS_OPT((,), (), __VA_ARGS__)\n#define PP_ARGS_SIZE(...) PP_ARGS_ELEM(8, __VA_ARGS__ PP_COMMA_IF_ARGS(__VA_ARGS__) 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0)\n\nPP_ARGS_SIZE(a)             // -&gt; 1\nPP_ARGS_SIZE(a, b)          // -&gt; 2\nPP_ARGS_SIZE(PP_COMMA())    // -&gt; 2\nPP_ARGS_SIZE()              // -&gt; 0\nPP_ARGS_SIZE(,,,)           // -&gt; 4\n</code></pre> <p>\u200b\u95ee\u9898\u200b\u7684\u200b\u5173\u952e\u200b\u5c31\u662f\u200b\u9017\u53f7\u200b <code>,</code>\uff0c\u200b\u5728\u200b <code>__VA_ARGS__</code> \u200b\u4e3a\u7a7a\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u628a\u200b\u9017\u53f7\u200b\u9690\u53bb\u200b\u5c31\u200b\u80fd\u200b\u6b63\u786e\u200b\u8fd4\u56de\u200b <code>0</code>\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_23","title":"\u904d\u5386\u200b\u8bbf\u95ee","text":"<p>\u200b\u7c7b\u4f3c\u200b C++ \u200b\u7684\u200b <code>for_each</code>\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u5b8f\u200b\u7684\u200b <code>PP_FOR_EACH</code>\uff1a</p> <pre><code>#define PP_FOR_EACH(macro, contex, ...) \\\n    PP_CONCAT(PP_FOR_EACH_, PP_ARGS_SIZE(__VA_ARGS__))(0, macro, contex, __VA_ARGS__)\n\n#define PP_FOR_EACH_0(index, macro, contex, ...)\n#define PP_FOR_EACH_1(index, macro, contex, arg, ...) macro(index, contex, arg)\n\n#define PP_FOR_EACH_2(index, macro, contex, arg, ...) \\\n    macro(index, contex, arg) \\\n    PP_FOR_EACH_1(PP_INC(index), macro, contex, __VA_ARGS__)\n\n#define PP_FOR_EACH_3(index, macro, contex, arg, ...) \\\n    macro(index, contex, arg) \\\n    PP_FOR_EACH_2(PP_INC(index), macro, contex, __VA_ARGS__)\n// ...\n#define PP_FOR_EACH_8(index, macro, contex, arg, ...) \\\n    macro(index, contex, arg) \\\n    PP_FOR_EACH_7(PP_INC(index), macro, contex, __VA_ARGS__)\n\n#define DECLARE_EACH(index, contex, arg)    PP_IF(index, PP_COMMA, PP_EMPTY)() contex arg\n\nPP_FOR_EACH(DECLARE_EACH, int, x, y, z);    // -&gt; int x, y, z;\nPP_FOR_EACH(DECLARE_EACH, bool, a, b);      // -&gt; bool a, b;\n</code></pre> <p><code>PP_FOR_EACH</code> \u200b\u63a5\u6536\u200b\u4e24\u4e2a\u200b\u56fa\u5b9a\u200b\u53c2\u6570\u200b\uff1a <code>macro</code> \u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u904d\u5386\u200b\u7684\u200b\u65f6\u5019\u200b\u8c03\u7528\u200b\u7684\u200b\u5b8f\u200b\uff0c<code>contex</code> \u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u56fa\u5b9a\u503c\u200b\u53c2\u6570\u200b\u4f20\u7ed9\u200b <code>macro</code>\u3002<code>PP_FOR_EACH</code> \u200b\u5148\u200b\u901a\u8fc7\u200b <code>PP_ARGS_SIZE</code> \u200b\u83b7\u53d6\u200b\u53d8\u200b\u957f\u200b\u53c2\u6570\u200b\u7684\u200b\u957f\u5ea6\u200b <code>N</code>\uff0c\u200b\u518d\u7528\u200b <code>PP_CONCAT</code> \u200b\u62fc\u63a5\u200b\u5f97\u5230\u200b <code>PP_FOR_EACH_N</code>\uff0c\u200b\u4e4b\u540e\u200b <code>PP_FOR_EACH_N</code> \u200b\u4f1a\u200b\u8fed\u4ee3\u200b\u8c03\u7528\u200b <code>PP_FOR_EACH_N-1</code> \u200b\u6765\u200b\u5b9e\u73b0\u200b\u8ddf\u200b\u53d8\u957f\u200b\u53c2\u6570\u200b\u4e2a\u6570\u200b\u76f8\u540c\u200b\u7684\u200b\u904d\u5386\u200b\u6b21\u6570\u200b\u3002</p> <p>\u200b\u4f8b\u5b50\u200b\u91cc\u200b\u6211\u4eec\u200b\u58f0\u660e\u200b\u4e86\u200b <code>DECLARE_EACH</code> \u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b <code>macro</code>\uff0c<code>DECLARE_EACH</code> \u200b\u7684\u200b\u4f5c\u7528\u200b\u5c31\u662f\u200b\u8fd4\u56de\u200b <code>contex arg</code>\uff0c\u200b\u5982\u679c\u200b <code>contex</code> \u200b\u662f\u200b\u7c7b\u578b\u200b\u540d\u5b57\u200b\uff0c<code>arg</code> \u200b\u662f\u200b\u53d8\u91cf\u200b\u540d\u5b57\u200b\uff0c<code>DECLARE_EACH</code> \u200b\u5c31\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u58f0\u660e\u200b\u53d8\u91cf\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_24","title":"\u6761\u4ef6\u200b\u5faa\u73af","text":"<p>\u200b\u6709\u200b\u4e86\u200b <code>FOR_EACH</code> \u200b\u4e4b\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u5199\u6cd5\u200b\u5199\u51fa\u200b <code>PP_WHILE</code>\uff1a</p> <pre><code>#define PP_WHILE PP_WHILE_1\n\n#define PP_WHILE_1(pred, op, val) PP_WHILE_1_IMPL(PP_BOOL(pred(val)), pred, op, val)\n#define PP_WHILE_1_IMPL(cond, pred, op, val) \\\n    PP_IF(cond, PP_WHILE_2, val PP_EMPTY_EAT)(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))\n\n#define PP_WHILE_2(pred, op, val) PP_WHILE_2_IMPL(PP_BOOL(pred(val)), pred, op, val)\n#define PP_WHILE_2_IMPL(cond, pred, op, val) \\\n    PP_IF(cond, PP_WHILE_3, val PP_EMPTY_EAT)(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))\n\n#define PP_WHILE_3(pred, op, val) PP_WHILE_3_IMPL(PP_BOOL(pred(val)), pred, op, val)\n#define PP_WHILE_3_IMPL(cond, pred, op, val) \\\n    PP_IF(cond, PP_WHILE_4, val PP_EMPTY_EAT)(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))\n\n#define PP_WHILE_4(pred, op, val) PP_WHILE_4_IMPL(PP_BOOL(pred(val)), pred, op, val)\n#define PP_WHILE_4_IMPL(cond, pred, op, val) \\\n    PP_IF(cond, PP_WHILE_5, val PP_EMPTY_EAT)(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))\n// ...\n\n#define PP_WHILE_8(pred, op, val) PP_WHILE_8_IMPL(PP_BOOL(pred(val)), pred, op, val)\n#define PP_WHILE_8_IMPL(cond, pred, op, val) \\\n    PP_IF(cond, PP_WHILE_8, val PP_EMPTY_EAT)(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))\n\n#define PP_EMPTY_EAT(...)\n\n#define SUM_OP(xy_tuple) SUM_OP_OP_IMPL xy_tuple\n#define SUM_OP_OP_IMPL(x, y) (PP_DEC(x), y + x)\n\n#define SUM_PRED(xy_tuple) SUM_PRED_IMPL xy_tuple\n#define SUM_PRED_IMPL(x, y) x\n\n#define SUM(max_num, origin_num) \\\n    PP_IDENTITY(SUM_IMPL PP_WHILE(SUM_PRED, SUM_OP, (max_num, origin_num)))\n#define SUM_IMPL(ignore, ret) ret\n\nPP_WHILE(SUM_PRED, SUM_OP, (2, a))      // -&gt; (0, a + 2 + 1)\nSUM(2, a)                               // -&gt; a + 2 + 1\n</code></pre> <p><code>PP_WHILE</code> \u200b\u63a5\u53d7\u200b\u4e09\u4e2a\u200b\u53c2\u6570\u200b\uff1a <code>pred</code> \u200b\u6761\u4ef6\u200b\u5224\u65ad\u200b\u51fd\u6570\u200b\uff0c<code>op</code> \u200b\u64cd\u4f5c\u200b\u51fd\u6570\u200b\uff0c<code>val</code> \u200b\u521d\u59cb\u503c\u200b\uff1b\u200b\u5faa\u73af\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4e0d\u65ad\u200b\u7528\u200b <code>pred(val)</code> \u200b\u6765\u200b\u505a\u200b\u5faa\u73af\u200b\u7ec8\u6b62\u200b\u5224\u65ad\u200b\uff0c\u200b\u628a\u200b <code>op(val)</code> \u200b\u5f97\u5230\u200b\u7684\u200b\u503c\u200b\u4f20\u7ed9\u200b\u540e\u7eed\u200b\u7684\u200b\u5b8f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u6267\u884c\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>while (pred(val)) {\n    val = op(val);\n}\n</code></pre> <p><code>PP_WHILE_N</code> \u200b\u9996\u5148\u200b\u7528\u200b <code>pred(val)</code> \u200b\u5f97\u5230\u200b\u6761\u4ef6\u200b\u5224\u65ad\u200b\u7ed3\u679c\u200b\uff0c\u200b\u628a\u200b\u6761\u4ef6\u200b\u7ed3\u679c\u200b <code>cond</code> \u200b\u548c\u200b\u5176\u4f59\u200b\u53c2\u6570\u200b\u518d\u200b\u4f20\u7ed9\u200b <code>PP_WHILE_N_IMPL</code>\u3002 <code>PP_WHILE_N_IMPL</code> \u200b\u53ef\u4ee5\u200b\u5206\u4e24\u200b\u90e8\u5206\u200b\u770b\u200b\uff1a\u200b\u540e\u200b\u534a\u200b\u90e8\u5206\u200b <code>(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))</code> \u200b\u662f\u200b\u4f5c\u4e3a\u200b\u524d\u534a\u90e8\u200b\u5206\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c<code>PP_IF(cond, op, PP_EMPTY_EAT)(val)</code> \u200b\u662f\u200b\u5982\u679c\u200b <code>cond</code> \u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5219\u200b\u6c42\u503c\u200b <code>op(val)</code>\uff0c \u200b\u5426\u5219\u200b\u6c42\u503c\u200b <code>PP_EMPTY_EAT(val)</code> \u200b\u5f97\u5230\u200b\u7a7a\u200b\u3002\u200b\u524d\u534a\u90e8\u200b\u5206\u200b <code>PP_IF(cond, PP_WHILE_N+1, val PP_EMPTY_EAT)</code>\uff0c\u200b\u5982\u679c\u200b <code>cond</code> \u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b <code>PP_WHILE_N+1</code>\uff0c\u200b\u7ed3\u5408\u200b\u540e\u200b\u534a\u200b\u90e8\u5206\u200b\u7684\u200b\u53c2\u6570\u200b\u7ee7\u7eed\u6267\u884c\u200b\u5faa\u73af\u200b\uff1b\u200b\u5426\u5219\u200b\u8fd4\u56de\u200b <code>val PP_EMPTY_EAT</code>\uff0c\u200b\u6b64\u65f6\u200b <code>val</code> \u200b\u5c31\u662f\u200b\u6700\u7ec8\u200b\u7684\u200b\u8ba1\u7b97\u7ed3\u679c\u200b\uff0c\u200b\u800c\u200b <code>PP_EMPTY_EAT</code> \u200b\u4f1a\u200b\u541e\u6389\u200b\u540e\u200b\u534a\u200b\u90e8\u5206\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</p> <p><code>SUM</code> \u200b\u5b9e\u73b0\u200b <code>N + N-1 + ... + 1</code>\u3002\u200b\u521d\u59cb\u503c\u200b <code>(max_num, origin_num)</code>\uff1b<code>SUM_PRED</code> \u200b\u53d6\u503c\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b <code>x</code>\uff0c\u200b\u5224\u65ad\u200b\u662f\u5426\u200b\u5927\u4e8e\u200b 0\uff1b<code>SUM_OP</code> \u200b\u5bf9\u200b <code>x</code> \u200b\u6267\u884c\u200b\u9012\u51cf\u200b\u64cd\u4f5c\u200b <code>x = x - 1</code>\uff0c\u200b\u5bf9\u200b <code>y</code> \u200b\u6267\u884c\u200b <code>+ x</code> \u200b\u64cd\u4f5c\u200b <code>y = y + x</code>\u3002\u200b\u76f4\u63a5\u200b\u7528\u200b <code>SUM_PRED</code> \u200b\u548c\u200b <code>SUM_OP</code> \u200b\u4f20\u7ed9\u200b <code>PP_WHILE</code>\uff0c\u200b\u8fd4\u56de\u200b\u7684\u200b\u7ed3\u679c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5143\u7ec4\u200b\uff0c\u200b\u6211\u4eec\u200b\u771f\u6b63\u200b\u60f3\u8981\u200b\u7684\u200b\u7ed3\u679c\u200b\u662f\u200b\u5143\u7ec4\u200b\u7684\u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u4e8e\u662f\u200b\u518d\u7528\u200b <code>SUM</code> \u200b\u53d6\u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u503c\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_25","title":"\u9012\u5f52\u200b\u91cd\u200b\u5165","text":"<p>\u200b\u5230\u200b\u76ee\u524d\u4e3a\u6b62\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u904d\u5386\u200b\u8bbf\u95ee\u200b\u548c\u200b\u6761\u4ef6\u200b\u5faa\u73af\u200b\u90fd\u200b\u8fd0\u4f5c\u200b\u7684\u200b\u5f88\u200b\u597d\u200b\uff0c\u200b\u7ed3\u679c\u200b\u7b26\u5408\u200b\u9884\u671f\u200b\u3002\u200b\u8fd8\u200b\u8bb0\u5f97\u200b\u6211\u4eec\u200b\u5728\u200b\u8bb2\u5b8f\u200b\u5c55\u5f00\u200b\u89c4\u5219\u200b\u7684\u200b\u65f6\u5019\u200b\u63d0\u5230\u200b\u7684\u200b\u7981\u6b62\u200b\u9012\u5f52\u200b\u91cd\u5165\u200b\u4e48\u200b\uff0c\u200b\u5f53\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u6267\u884c\u200b\u4e24\u91cd\u200b\u5faa\u73af\u200b\u7684\u200b\u65f6\u5019\u200b\u5c31\u200b\u4e0d\u5e78\u200b\u9047\u5230\u200b\u5230\u200b\u4e86\u200b\u7981\u6b62\u200b\u9012\u5f52\u200b\u91cd\u200b\u5165\u200b\uff1a</p> <pre><code>#define SUM_OP2(xy_tuple) SUM_OP_OP_IMPL2 xy_tuple\n#define SUM_OP_OP_IMPL2(x, y) (PP_DEC(x), y + SUM(x, 0))\n\n#define SUM2(max_num, origin_num) \\\n    PP_IDENTITY(SUM_IMPL PP_WHILE(SUM_PRED, SUM_OP2, (max_num, origin_num)))\n\nSUM2(1, a)      // -&gt; a + SUM_IMPL PP_WHILE_1(SUM_PRED, SUM_OP, (1, a))\n</code></pre> <p><code>SUM2</code> \u200b\u628a\u200b\u53c2\u6570\u200b <code>op</code> \u200b\u6539\u7528\u200b <code>SUM_OP2</code>\uff0c<code>SUM_OP2</code> \u200b\u91cc\u9762\u200b\u4f1a\u200b\u8c03\u7528\u200b\u5230\u200b <code>SUM</code>\uff0c\u200b\u800c\u200b <code>SUM</code> \u200b\u5c55\u5f00\u200b\u8fd8\u4f1a\u200b\u662f\u200b <code>PP_WHILE_1</code>\uff0c\u200b\u76f8\u5f53\u4e8e\u200b <code>PP_WHILE_1</code> \u200b\u9012\u5f52\u200b\u8c03\u7528\u200b\u5230\u200b\u4e86\u200b\u81ea\u8eab\u200b\uff0c\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u505c\u6b62\u200b\u5c55\u5f00\u200b\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4e00\u79cd\u200b\u81ea\u52a8\u200b\u63a8\u5bfc\u200b\u9012\u5f52\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff08Automatic Recursion\uff09\uff1a</p> <pre><code>#define PP_AUTO_WHILE PP_CONCAT(PP_WHILE_, PP_AUTO_REC(PP_WHILE_PRED))\n\n#define PP_AUTO_REC(check) PP_IF(check(2), PP_AUTO_REC_12, PP_AUTO_REC_34)(check)\n#define PP_AUTO_REC_12(check) PP_IF(check(1), 1, 2)\n#define PP_AUTO_REC_34(check) PP_IF(check(3), 3, 4)\n\n#define PP_WHILE_PRED(n) \\\n    PP_CONCAT(PP_WHILE_CHECK_, PP_WHILE_ ## n(PP_WHILE_FALSE, PP_WHILE_FALSE, PP_WHILE_FALSE))\n#define PP_WHILE_FALSE(...) 0\n\n#define PP_WHILE_CHECK_PP_WHILE_FALSE 1\n\n#define PP_WHILE_CHECK_PP_WHILE_1(...) 0\n#define PP_WHILE_CHECK_PP_WHILE_2(...) 0\n#define PP_WHILE_CHECK_PP_WHILE_3(...) 0\n#define PP_WHILE_CHECK_PP_WHILE_4(...) 0\n// ...\n#define PP_WHILE_CHECK_PP_WHILE_8(...) 0\n\nPP_AUTO_WHILE       // -&gt; PP_WHILE_1\n\n#define SUM3(max_num, origin_num) \\\n    PP_IDENTITY(SUM_IMPL PP_AUTO_WHILE(SUM_PRED, SUM_OP, (max_num, origin_num)))\n\n#define SUM_OP4(xy_tuple) SUM_OP_OP_IMPL4 xy_tuple\n#define SUM_OP_OP_IMPL4(x, y) (PP_DEC(x), y + SUM3(x, 0))\n\n#define SUM4(max_num, origin_num) \\\n    PP_IDENTITY(SUM_IMPL PP_AUTO_WHILE(SUM_PRED, SUM_OP4, (max_num, origin_num)))\n\nSUM4(2, a)          // -&gt; a + 0 + 2 + 1 + 0 + 1\n</code></pre> <p><code>PP_AUTO_WHILE</code> \u200b\u5c31\u662f\u200b <code>PP_WHILE</code> \u200b\u7684\u200b\u81ea\u52a8\u200b\u63a8\u5bfc\u200b\u9012\u5f52\u200b\u7248\u672c\u200b\uff0c\u200b\u6838\u5fc3\u200b\u7684\u200b\u5b8f\u662f\u200b <code>PP_AUTO_REC(PP_WHILE_PRED)</code>\uff0c\u200b\u8fd9\u4e2a\u200b\u5b8f\u200b\u53ef\u4ee5\u200b\u627e\u51fa\u200b\u5f53\u524d\u200b\u53ef\u7528\u200b\u7684\u200b <code>PP_WHILE_N</code> \u200b\u7248\u672c\u200b\u7684\u200b\u6570\u5b57\u200b <code>N</code>\u3002</p> <p>\u200b\u63a8\u5bfc\u200b\u7684\u200b\u539f\u7406\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u5c31\u662f\u200b\u641c\u7d22\u200b\u6240\u6709\u200b\u7248\u672c\u200b\uff0c\u200b\u627e\u51fa\u200b\u80fd\u591f\u200b\u6b63\u786e\u200b\u5c55\u5f00\u200b\u7684\u200b\u7248\u672c\u200b\uff0c\u200b\u8fd4\u56de\u200b\u8be5\u200b\u7248\u672c\u200b\u7684\u200b\u6570\u5b57\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u63d0\u5347\u200b\u641c\u7d22\u200b\u7684\u200b\u901f\u5ea6\u200b\uff0c\u200b\u4e00\u822c\u200b\u7684\u200b\u505a\u6cd5\u200b\u662f\u200b\u4f7f\u7528\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\uff0c\u200b\u8fd9\u200b\u5c31\u662f\u200b <code>PP_AUTO_REC</code> \u200b\u5728\u200b\u505a\u200b\u7684\u200b\u4e8b\u60c5\u200b\u3002<code>PP_AUTO_REC</code> \u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b <code>check</code>\uff0c<code>check</code> \u200b\u8d1f\u8d23\u200b\u68c0\u67e5\u200b\u7248\u672c\u200b\u53ef\u7528\u6027\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u7ed9\u51fa\u200b\u7684\u200b\u662f\u200b\u652f\u6301\u200b\u641c\u7d22\u200b\u7248\u672c\u200b\u8303\u56f4\u200b <code>[1, 4]</code>\u3002<code>PP_AUTO_REC</code> \u200b\u4f1a\u200b\u9996\u5148\u200b\u68c0\u67e5\u200b <code>check(2)</code>\uff0c\u200b\u5982\u679c\u200b <code>check(2)</code> \u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5219\u200b\u8c03\u7528\u200b <code>PP_AUTO_REC_12</code> \u200b\u641c\u7d22\u200b\u8303\u56f4\u200b <code>[1, 2]</code>\uff0c\u200b\u5426\u5219\u200b\u7528\u200b <code>PP_AUTO_REC_34</code> \u200b\u641c\u7d22\u200b <code>[3, 4]</code>\u3002<code>PP_AUTO_REC_12</code> \u200b\u68c0\u67e5\u200b <code>check(1)</code> \u200b\u5982\u679c\u200b\u4e3a\u200b\u771f\u200b\uff0c\u200b\u8bf4\u660e\u200b\u7248\u672c\u200b <code>1</code> \u200b\u53ef\u7528\u200b\uff0c\u200b\u5426\u5219\u200b\u7528\u200b\u7248\u672c\u200b <code>2</code>\uff0c<code>PP_AUTO_REC_34</code> \u200b\u540c\u7406\u200b\u3002</p> <p><code>check</code> \u200b\u5b8f\u8981\u200b\u600e\u4e48\u200b\u5199\u200b\u624d\u80fd\u200b\u77e5\u9053\u200b\u7248\u672c\u200b\u662f\u5426\u200b\u53ef\u7528\u200b\u5462\u200b\uff1f\u200b\u5728\u200b\u8fd9\u91cc\u200b\uff0c<code>PP_WHILE_PRED</code> \u200b\u4f1a\u200b\u5c55\u5f00\u200b\u6210\u200b\u4e24\u200b\u90e8\u5206\u200b\u7684\u200b\u62fc\u63a5\u200b\uff0c\u200b\u6211\u4eec\u200b\u6765\u770b\u200b\u540e\u200b\u90e8\u5206\u200b <code>PP_WHILE_ ## n(PP_WHILE_FALSE, PP_WHILE_FALSE, PP_WHILE_FALSE)</code>\uff1a\u200b\u5982\u679c\u200b <code>PP_WHILE_ ## n</code> \u200b\u53ef\u7528\u200b\uff0c\u200b\u7531\u4e8e\u200b <code>PP_WHILE_FALSE</code> \u200b\u56fa\u5b9a\u200b\u8fd4\u56de\u200b <code>0</code>\uff0c\u200b\u8fd9\u90e8\u5206\u200b\u4f1a\u200b\u5c55\u5f00\u200b\u5f97\u5230\u200b <code>val</code> \u200b\u53c2\u6570\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b <code>PP_WHILE_FALSE</code>\uff1b\u200b\u5426\u5219\u200b\u8fd9\u90e8\u5206\u200b\u5b8f\u4f1a\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u4f9d\u7136\u200b\u662f\u200b <code>PP_WHILE_n(PP_WHILE_FALSE, PP_WHILE_FALSE, PP_WHILE_FALSE)</code>\u3002</p> <p>\u200b\u628a\u200b\u540e\u200b\u90e8\u5206\u200b\u7684\u200b\u7ed3\u679c\u200b\u8ddf\u524d\u200b\u90e8\u5206\u200b <code>PP_WHILE_CHECK_</code> \u200b\u62fc\u63a5\u200b\u8d77\u6765\u200b\uff0c\u200b\u5f97\u5230\u200b\u4e24\u79cd\u200b\u7ed3\u679c\u200b\uff1a<code>PP_WHILE_CHECK_PP_WHILE_FALSE</code> \u200b\u6216\u8005\u200b <code>PP_WHILE_CHECK_PP_WHILE_n(PP_WHILE_FALSE, PP_WHILE_FALSE, PP_WHILE_FALSE)</code>\uff0c\u200b\u4e8e\u662f\u200b\u6211\u4eec\u200b\u8ba9\u200b <code>PP_WHILE_CHECK_PP_WHILE_FALSE</code> \u200b\u8fd4\u56de\u200b <code>1</code> \u200b\u8868\u660e\u200b\u53ef\u7528\u200b\uff0c<code>PP_WHILE_CHECK_PP_WHILE_n</code> \u200b\u8fd4\u56de\u200b <code>0</code> \u200b\u8868\u793a\u200b\u4e0d\u53ef\u200b\u7528\u200b\u3002\u200b\u81f3\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u5b8c\u6210\u200b\u4e86\u200b\u81ea\u52a8\u200b\u63a8\u5bfc\u200b\u9012\u5f52\u200b\u7684\u200b\u529f\u80fd\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_26","title":"\u7b97\u672f\u200b\u6bd4\u8f83","text":"<p>\u200b\u4e0d\u200b\u76f8\u7b49\u200b\uff1a</p> <pre><code>#define PP_NOT_EQUAL(x, y) PP_NOT_EQUAL_IMPL(x, y)\n#define PP_NOT_EQUAL_IMPL(x, y) \\\n    PP_CONCAT(PP_NOT_EQUAL_CHECK_, PP_NOT_EQUAL_ ## x(0, PP_NOT_EQUAL_ ## y))\n\n#define PP_NOT_EQUAL_CHECK_PP_EQUAL_NIL 1\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_0(...) 0\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_1(...) 0\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_2(...) 0\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_3(...) 0\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_4(...) 0\n// ...\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_8(...) 0\n\n#define PP_NOT_EQUAL_0(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n#define PP_NOT_EQUAL_1(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n#define PP_NOT_EQUAL_2(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n#define PP_NOT_EQUAL_3(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n#define PP_NOT_EQUAL_4(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n// ...\n#define PP_NOT_EQUAL_8(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n\nPP_NOT_EQUAL(1, 1)          // -&gt; 0\nPP_NOT_EQUAL(3, 1)          // -&gt; 1\n</code></pre> <p>\u200b\u5224\u65ad\u200b\u6570\u503c\u200b\u662f\u5426\u200b\u76f8\u7b49\u200b\uff0c\u200b\u7528\u5230\u200b\u4e86\u200b\u7981\u6b62\u200b\u9012\u5f52\u200b\u91cd\u5165\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u628a\u200b <code>x</code> \u200b\u548c\u200b <code>y</code> \u200b\u9012\u5f52\u200b\u62fc\u63a5\u200b\u6210\u200b <code>PP_NOT_EQUAL_x PP_NOT_EQUAL_y</code> \u200b\u5b8f\u200b\uff0c\u200b\u5982\u679c\u200b <code>x == y</code>\uff0c\u200b\u5219\u200b\u4e0d\u4f1a\u200b\u5c55\u5f00\u200b <code>PP_NOT_EQUAL_y</code> \u200b\u5b8f\u200b\uff0c\u200b\u8ddf\u200b <code>PP_NOT_EQUAL_CHECK_</code> \u200b\u62fc\u63a5\u200b\u6210\u200b <code>PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_y</code> \u200b\u8fd4\u56de\u200b <code>0</code>\uff1b\u200b\u53cd\u4e4b\u200b\uff0c\u200b\u4e24\u6b21\u200b\u90fd\u200b\u6210\u529f\u200b\u5c55\u5f00\u200b\u6700\u540e\u200b\u5f97\u5230\u200b <code>PP_EQUAL_NIL</code>\uff0c\u200b\u62fc\u63a5\u200b\u5f97\u5230\u200b <code>PP_NOT_EQUAL_CHECK_PP_EQUAL_NIL</code> \u200b\u8fd4\u56de\u200b <code>1</code>\u3002</p> <p>\u200b\u76f8\u7b49\u200b\uff1a</p> <pre><code>#define PP_EQUAL(x, y) PP_NOT(PP_NOT_EQUAL(x, y))\n\nPP_EQUAL(1, 1)              // -&gt; 1\nPP_EQUAL(1, 3)              // -&gt; 0\n</code></pre> <p>\u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b\uff1a</p> <pre><code>#define PP_LESS_EQUAL(x, y) PP_NOT(PP_SUB(x, y))\n\nPP_LESS_EQUAL(2, 1)         // -&gt; 0\nPP_LESS_EQUAL(1, 1)         // -&gt; 1\nPP_LESS_EQUAL(1, 2)         // -&gt; 1\n</code></pre> <p>\u200b\u5c0f\u4e8e\u200b\uff1a</p> <pre><code>#define PP_LESS(x, y) PP_AND(PP_LESS_EQUAL(x, y), PP_NOT_EQUAL(x, y))\n\nPP_LESS(2, 1)               // -&gt; 0\nPP_LESS(1, 2)               // -&gt; 1\nPP_LESS(2, 2)               // -&gt; 0\n</code></pre> <p>\u200b\u53e6\u5916\u200b\u8fd8\u6709\u200b\u5927\u4e8e\u200b\uff0c\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b\u7b49\u7b49\u200b\u7b97\u672f\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4e0d\u518d\u200b\u8d58\u8ff0\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_27","title":"\u7b97\u672f\u200b\u8fd0\u7b97","text":"<p>\u200b\u5229\u7528\u200b <code>PP_AUTO_WHILE</code> \u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u57fa\u7840\u200b\u7684\u200b\u7b97\u672f\u200b\u8fd0\u7b97\u200b\u4e86\u200b\uff0c\u200b\u800c\u4e14\u200b\u652f\u6301\u200b\u5d4c\u5957\u200b\u8fd0\u7b97\u200b\u3002</p> <p>\u200b\u52a0\u6cd5\u200b\uff1a</p> <pre><code>#define PP_ADD(x, y) \\\n    PP_IDENTITY(PP_ADD_IMPL PP_AUTO_WHILE(PP_ADD_PRED, PP_ADD_OP, (x, y)))\n#define PP_ADD_IMPL(x, y) x\n\n#define PP_ADD_PRED(xy_tuple) PP_ADD_PRED_IMPL xy_tuple\n#define PP_ADD_PRED_IMPL(x, y) y\n\n#define PP_ADD_OP(xy_tuple) PP_ADD_OP_IMPL xy_tuple\n#define PP_ADD_OP_IMPL(x, y) (PP_INC(x), PP_DEC(y))\n\nPP_ADD(1, 2)                  // -&gt; 3\nPP_ADD(1, PP_ADD(1, 2))       // -&gt; 4\n</code></pre> <p>\u200b\u51cf\u6cd5\u200b\uff1a</p> <pre><code>#define PP_SUB(x, y) \\\n    PP_IDENTITY(PP_SUB_IMPL PP_AUTO_WHILE(PP_SUB_PRED, PP_SUB_OP, (x, y)))\n#define PP_SUB_IMPL(x, y) x\n\n#define PP_SUB_PRED(xy_tuple) PP_SUB_PRED_IMPL xy_tuple\n#define PP_SUB_PRED_IMPL(x, y) y\n\n#define PP_SUB_OP(xy_tuple) PP_SUB_OP_IMPL xy_tuple\n#define PP_SUB_OP_IMPL(x, y) (PP_DEC(x), PP_DEC(y))\n\nPP_SUB(2, 1)                // -&gt; 1\nPP_SUB(3, PP_ADD(2, 1))     // -&gt; 0\n</code></pre> <p>\u200b\u4e58\u6cd5\u200b\uff1a</p> <pre><code>#define PP_MUL(x, y) \\\n    IDENTITY(PP_MUL_IMPL PP_AUTO_WHILE(PP_MUL_PRED, PP_MUL_OP, (0, x, y)))\n#define PP_MUL_IMPL(ret, x, y) ret\n\n#define PP_MUL_PRED(rxy_tuple) PP_MUL_PRED_IMPL rxy_tuple\n#define PP_MUL_PRED_IMPL(ret, x, y) y\n\n#define PP_MUL_OP(rxy_tuple) PP_MUL_OP_IMPL rxy_tuple\n#define PP_MUL_OP_IMPL(ret, x, y) (PP_ADD(ret, x), x, PP_DEC(y))\n\nPP_MUL(1, 1)                // -&gt; 1\nPP_MUL(2, PP_ADD(0, 1))     // -&gt; 2\n</code></pre> <p>\u200b\u4e58\u6cd5\u200b\u5b9e\u73b0\u200b\u8fd9\u91cc\u200b\u589e\u52a0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b <code>ret</code>\uff0c\u200b\u521d\u59cb\u503c\u200b\u4e3a\u200b <code>0</code>\uff0c\u200b\u6bcf\u6b21\u200b\u8fed\u4ee3\u200b\u4f1a\u200b\u6267\u884c\u200b <code>ret = ret + x</code>\u3002</p> <p>\u200b\u9664\u6cd5\u200b\uff1a</p> <pre><code>#define PP_DIV(x, y) \\\n    IDENTITY(PP_DIV_IMPL PP_AUTO_WHILE(PP_DIV_PRED, PP_DIV_OP, (0, x, y)))\n#define PP_DIV_IMPL(ret, x, y) ret\n\n#define PP_DIV_PRED(rxy_tuple) PP_DIV_PRED_IMPL rxy_tuple\n#define PP_DIV_PRED_IMPL(ret, x, y) PP_LESS_EQUAL(y, x)\n\n#define PP_DIV_OP(rxy_tuple) PP_DIV_OP_IMPL rxy_tuple\n#define PP_DIV_OP_IMPL(ret, x, y) (PP_INC(ret), PP_SUB(x, y), y)\n\nPP_DIV(1, 2)                // -&gt; 0\nPP_DIV(2, 1)                // -&gt; 2\nPP_DIV(2, PP_ADD(1, 1))     // -&gt; 1\n</code></pre> <p>\u200b\u9664\u6cd5\u200b\u5229\u7528\u200b\u4e86\u200b <code>PP_LESS_EQUAL</code>\uff0c\u200b\u53ea\u6709\u200b <code>y &lt;= x</code> \u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u624d\u200b\u7ee7\u7eed\u200b\u5faa\u73af\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_28","title":"\u6570\u636e\u7ed3\u6784","text":"<p>\u200b\u5b8f\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6709\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u5176\u5b9e\u200b\u6211\u4eec\u200b\u5728\u200b\u524d\u9762\u200b\u7684\u200b\u4e5f\u200b\u7a0d\u5fae\u200b\u7528\u5230\u200b\u4e86\u200b\u4e00\u79cd\u200b\u6570\u636e\u7ed3\u6784\u200b <code>tuple</code>\uff0c<code>PP_REMOVE_PARENS</code> \u200b\u5c31\u662f\u200b\u53ef\u4ee5\u200b\u53bb\u6389\u200b <code>tuple</code> \u200b\u7684\u200b\u5916\u5c42\u200b\u62ec\u53f7\u200b\uff0c\u200b\u8fd4\u56de\u200b\u91cc\u9762\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\u200b\u6211\u4eec\u200b\u8fd9\u91cc\u200b\u5c31\u200b\u4ee5\u200b <code>tuple</code> \u200b\u4e3a\u200b\u4f8b\u5b50\u200b\u8ba8\u8bba\u200b\u76f8\u5173\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5176\u4ed6\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b <code>list, array</code> \u200b\u7b49\u200b\u6709\u200b\u5174\u8da3\u200b\u53ef\u4ee5\u200b\u53bb\u200b\u770b\u200b <code>Boost</code> \u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002</p> <p><code>tuple</code> \u200b\u5b9a\u4e49\u200b\u4e3a\u7528\u200b\u62ec\u53f7\u200b\u5305\u4f4f\u200b\u7684\u200b\u9017\u53f7\u200b\u5206\u5f00\u200b\u7684\u200b\u5143\u7d20\u200b\u96c6\u5408\u200b\uff1a<code>(a, b, c)</code>\u3002</p> <pre><code>#define PP_TUPLE_REMOVE_PARENS(tuple) PP_REMOVE_PARENS(tuple)\n\n// \u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u4e0b\u200b\u6807\u7684\u200b\u5143\u7d20\u200b\n#define PP_TUPLE_ELEM(i, tuple) PP_ARGS_ELEM(i, PP_TUPLE_REMOVE_PARENS(tuple))\n\n// \u200b\u541e\u6389\u200b\u6574\u4e2a\u200b tuple \u200b\u8fd4\u56de\u200b\u7a7a\u200b\n#define PP_TUPLE_EAT() PP_EMPTY_EAT\n\n// \u200b\u83b7\u53d6\u200b\u5927\u5c0f\u200b\n#define PP_TUPLE_SIZE(tuple) PP_ARGS_SIZE(PP_TUPLE_REMOVE_PARENS(tuple))\n\n// \u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b\n#define PP_TUPLE_PUSH_BACK(elem, tuple) \\\n    PP_TUPLE_PUSH_BACK_IMPL(PP_TUPLE_SIZE(tuple), elem, tuple)\n#define PP_TUPLE_PUSH_BACK_IMPL(size, elem, tuple) \\\n    (PP_TUPLE_REMOVE_PARENS(tuple) PP_IF(size, PP_COMMA, PP_EMPTY)() elem)\n\n// \u200b\u63d2\u5165\u200b\u5143\u7d20\u200b\n#define PP_TUPLE_INSERT(i, elem, tuple) \\\n    PP_TUPLE_ELEM( \\\n        3, \\\n        PP_AUTO_WHILE( \\\n            PP_TUPLE_INSERT_PRED, \\\n            PP_TUPLE_INSERT_OP, \\\n            (0, i, elem, (), tuple) \\\n        ) \\\n    )\n#define PP_TUPLE_INSERT_PRED(args) PP_TUPLE_INSERT_PERD_IMPL args \n#define PP_TUPLE_INSERT_PERD_IMPL(curi, i, elem, ret, tuple) \\\n    PP_NOT_EQUAL(PP_TUPLE_SIZE(ret), PP_INC(PP_TUPLE_SIZE(tuple)))\n#define PP_TUPLE_INSERT_OP(args) PP_TUPLE_INSERT_OP_IMPL args\n#define PP_TUPLE_INSERT_OP_IMPL(curi, i, elem, ret, tuple) \\\n    ( \\\n    PP_IF(PP_NOT_EQUAL(PP_TUPLE_SIZE(ret), i), PP_INC(curi), curi), \\\n    i, elem, \\\n    PP_TUPLE_PUSH_BACK(\\\n        PP_IF( \\\n            PP_NOT_EQUAL(PP_TUPLE_SIZE(ret), i), \\\n            PP_TUPLE_ELEM(curi, tuple), elem \\\n        ), \\\n        ret \\\n    ), \\\n    tuple \\\n    )\n\n// \u200b\u5220\u9664\u200b\u672b\u5c3e\u200b\u5143\u7d20\u200b\n#define PP_TUPLE_POP_BACK(tuple) \\\n    PP_TUPLE_ELEM( \\\n        1, \\\n        PP_AUTO_WHILE( \\\n            PP_TUPLE_POP_BACK_PRED, \\\n            PP_TUPLE_POP_BACK_OP, \\\n            (0, (), tuple) \\\n        ) \\\n    )\n#define PP_TUPLE_POP_BACK_PRED(args) PP_TUPLE_POP_BACK_PRED_IMPL args\n#define PP_TUPLE_POP_BACK_PRED_IMPL(curi, ret, tuple) \\\n    PP_IF( \\\n        PP_TUPLE_SIZE(tuple), \\\n        PP_NOT_EQUAL(PP_TUPLE_SIZE(ret), PP_DEC(PP_TUPLE_SIZE(tuple))), \\\n        0 \\\n    )\n#define PP_TUPLE_POP_BACK_OP(args) PP_TUPLE_POP_BACK_OP_IMPL args\n#define PP_TUPLE_POP_BACK_OP_IMPL(curi, ret, tuple) \\\n    (PP_INC(curi), PP_TUPLE_PUSH_BACK(PP_TUPLE_ELEM(curi, tuple), ret), tuple)\n\n// \u200b\u5220\u9664\u200b\u5143\u7d20\u200b\n#define PP_TUPLE_REMOVE(i, tuple) \\\n    PP_TUPLE_ELEM( \\\n        2, \\\n        PP_AUTO_WHILE( \\\n            PP_TUPLE_REMOVE_PRED, \\\n            PP_TUPLE_REMOVE_OP, \\\n            (0, i, (), tuple) \\\n        ) \\\n    )\n#define PP_TUPLE_REMOVE_PRED(args) PP_TUPLE_REMOVE_PRED_IMPL args\n#define PP_TUPLE_REMOVE_PRED_IMPL(curi, i, ret, tuple) \\\n    PP_IF( \\\n        PP_TUPLE_SIZE(tuple), \\\n        PP_NOT_EQUAL(PP_TUPLE_SIZE(ret), PP_DEC(PP_TUPLE_SIZE(tuple))), \\\n        0 \\\n    )    \n#define PP_TUPLE_REMOVE_OP(args) PP_TUPLE_REMOVE_OP_IMPL args\n#define PP_TUPLE_REMOVE_OP_IMPL(curi, i, ret, tuple) \\\n    ( \\\n    PP_INC(curi), \\\n    i, \\\n    PP_IF( \\\n        PP_NOT_EQUAL(curi, i), \\\n        PP_TUPLE_PUSH_BACK(PP_TUPLE_ELEM(curi, tuple), ret), \\\n        ret \\\n    ), \\\n    tuple \\\n    )\n\nPP_TUPLE_SIZE(())               // -&gt; 0\n\nPP_TUPLE_PUSH_BACK(2, (1))      // -&gt; (1, 2)\nPP_TUPLE_PUSH_BACK(2, ())       // -&gt; (2)\n\nPP_TUPLE_INSERT(1, 2, (1, 3))   // -&gt; (1, 2, 3)\n\nPP_TUPLE_POP_BACK(())           // -&gt; ()\nPP_TUPLE_POP_BACK((1))          // -&gt; ()\nPP_TUPLE_POP_BACK((1, 2, 3))    // -&gt; (1, 2)\n\nPP_TUPLE_REMOVE(1, (1, 2, 3))   // -&gt; (1, 3)\nPP_TUPLE_REMOVE(0, (1, 2, 3))   // -&gt; (2, 3)\n</code></pre> <p>\u200b\u8fd9\u91cc\u200b\u7a0d\u5fae\u200b\u89e3\u91ca\u4e00\u4e0b\u200b\u63d2\u5165\u200b\u5143\u7d20\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5176\u4ed6\u200b\u5220\u9664\u200b\u5143\u7d20\u200b\u7b49\u200b\u64cd\u4f5c\u200b\u4e5f\u200b\u662f\u200b\u901a\u8fc7\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u539f\u7406\u200b\u6765\u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002<code>PP_TUPLE_INSERT(i, elem, tuple)</code> \u200b\u53ef\u4ee5\u200b\u5728\u200b <code>tuple</code> \u200b\u7684\u200b\u4f4d\u7f6e\u200b <code>i</code> \u200b\u63d2\u5165\u200b\u5143\u7d20\u200b <code>elem</code>\uff0c\u200b\u4e3a\u4e86\u200b\u5b8c\u6210\u200b\u8fd9\u4e2a\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5148\u200b\u628a\u200b\u4f4d\u7f6e\u200b\u5c0f\u4e8e\u200b <code>i</code> \u200b\u7684\u200b\u5143\u7d20\u200b\u90fd\u200b\u5148\u7528\u200b <code>PP_TUPLE_PUSH_BACK</code> \u200b\u653e\u5230\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b <code>tuple</code> \u200b\u4e0a\u200b\uff08<code>ret</code>\uff09\uff0c\u200b\u7136\u540e\u200b\u5728\u200b\u4f4d\u7f6e\u200b <code>i</code> \u200b\u653e\u5165\u200b\u5143\u7d20\u200b <code>elem</code>\uff0c\u200b\u4e4b\u540e\u200b\u518d\u200b\u628a\u200b\u539f\u200b <code>tuple</code> \u200b\u4f4d\u7f6e\u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b <code>i</code> \u200b\u7684\u200b\u5143\u7d20\u200b\u653e\u5230\u200b <code>ret</code> \u200b\u540e\u9762\u200b\uff0c\u200b\u6700\u540e\u200b <code>ret</code> \u200b\u5c31\u200b\u5f97\u5230\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_29","title":"\u5c0f\u7ed3","text":"<p>\u200b\u672c\u6587\u200b\u7684\u200b\u76ee\u7684\u200b\u662f\u200b\u60f3\u8981\u200b\u9610\u8ff0\u200b\u6e05\u695a\u200b C/C++ \u200b\u5b8f\u200b\u7f16\u7a0b\u200b\u7684\u200b\u539f\u7406\u200b\u548c\u200b\u57fa\u672c\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5728\u200b\u8bb0\u5f55\u200b\u6211\u200b\u672c\u4eba\u200b\u7684\u200b\u4e00\u4e9b\u200b\u7406\u89e3\u200b\u548c\u200b\u8ba4\u8bc6\u200b\u7684\u200b\u540c\u65f6\u200b\uff0c\u200b\u5e0c\u671b\u200b\u80fd\u591f\u200b\u5bf9\u200b\u5176\u4ed6\u4eba\u200b\u80fd\u200b\u5e26\u6765\u200b\u4e00\u4e9b\u200b\u89e3\u60d1\u200b\u548c\u200b\u542f\u53d1\u200b\u3002\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u5c3d\u7ba1\u200b\u672c\u6587\u200b\u7bc7\u5e45\u200b\u6709\u70b9\u200b\u957f\u200b\uff0c\u200b\u4f46\u200b\u8fd8\u662f\u200b\u6709\u200b\u4e00\u4e9b\u200b\u5173\u4e8e\u200b\u5b8f\u200b\u7f16\u7a0b\u200b\u7684\u200b\u6280\u5de7\u200b\u548c\u200b\u7528\u6cd5\u200b\u662f\u200b\u6ca1\u6709\u200b\u6d89\u53ca\u200b\u5230\u200b\u7684\u200b\uff0c\u200b\u8b6c\u5982\u200b CHAOS_PP \u200b\u63d0\u51fa\u200b\u7684\u200b\u57fa\u4e8e\u200b\u5ef6\u8fdf\u200b\u5c55\u5f00\u200b\u7684\u200b\u9012\u5f52\u200b\u8c03\u7528\u200b\u65b9\u6cd5\u200b\uff0cBOOST_PP \u200b\u91cc\u9762\u200b\u7684\u200b <code>REPEAT</code> \u200b\u76f8\u5173\u200b\u5b8f\u200b\u7b49\u7b49\u200b\uff0c\u200b\u6709\u200b\u5174\u8da3\u200b\u7684\u200b\u53ef\u4ee5\u200b\u81ea\u884c\u200b\u67e5\u9605\u200b\u8d44\u6599\u200b\u3002</p> <p>\u200b\u5b8f\u200b\u7f16\u7a0b\u200b\u7684\u200b\u8c03\u8bd5\u200b\u662f\u200b\u4e00\u4e2a\u200b\u75db\u82e6\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\uff1a</p> <ul> <li>\u200b\u7528\u200b <code>-P -E</code> \u200b\u9009\u9879\u200b\u8f93\u51fa\u200b\u9884\u5904\u7406\u200b\u7ed3\u679c\u200b\uff1b</li> <li>\u200b\u7528\u200b\u524d\u9762\u200b\u63d0\u5230\u200b\u7684\u200b\u6211\u200b\u81ea\u5df1\u200b\u4fee\u6539\u200b\u7684\u200b <code>clang</code> \u200b\u7248\u672c\u200b\u4ed4\u7ec6\u200b\u7814\u7a76\u200b\u5c55\u5f00\u200b\u8fc7\u7a0b\u200b\uff1b</li> <li>\u200b\u628a\u200b\u590d\u6742\u200b\u7684\u200b\u5b8f\u200b\u62c6\u89e3\u200b\uff0c\u200b\u67e5\u770b\u200b\u4e2d\u95f4\u200b\u5b8f\u200b\u7684\u200b\u5c55\u5f00\u200b\u7ed3\u679c\u200b\uff1b</li> <li>\u200b\u5c4f\u853d\u200b\u65e0\u5173\u200b\u7684\u200b\u5934\u6587\u4ef6\u200b\u548c\u200b\u5b8f\u200b\uff1b</li> <li>\u200b\u6700\u540e\u200b\u5c31\u662f\u200b\u8981\u8111\u200b\u8865\u5b8f\u200b\u5c55\u5f00\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e86\u200b\uff0c\u200b\u719f\u6089\u200b\u5b8f\u200b\u5c55\u5f00\u200b\u4e4b\u540e\u200b\u8c03\u8bd5\u200b\u7684\u200b\u6548\u7387\u200b\u4e5f\u200b\u4f1a\u200b\u63d0\u5347\u200b\u3002</li> </ul> <p>\u200b\u672c\u6587\u200b\u4e2d\u200b\u7684\u200b\u5b8f\u200b\u662f\u200b\u6211\u200b\u81ea\u5df1\u200b\u5728\u200b\u7406\u89e3\u200b\u4e86\u200b\u539f\u7406\u200b\u4e4b\u540e\u200b\u91cd\u65b0\u200b\u5b9e\u73b0\u200b\u51fa\u6765\u200b\u7684\u200b\uff0c\u200b\u6709\u200b\u90e8\u5206\u200b\u5b8f\u200b\u501f\u9274\u200b\u4e86\u200b <code>Boost</code> \u200b\u7684\u200b\u5b9e\u73b0\u200b\u548c\u200b\u5f15\u7528\u200b\u91cc\u9762\u200b\u7684\u200b\u6587\u7ae0\u200b\uff0c\u200b\u6709\u200b\u4efb\u4f55\u200b\u9519\u8bef\u200b\u4e4b\u200b\u5904\u200b\uff0c\u200b\u6b22\u8fce\u200b\u968f\u65f6\u200b\u6307\u6b63\u200b\uff0c\u200b\u4e5f\u200b\u6b22\u8fce\u200b\u627e\u200b\u6211\u200b\u6765\u200b\u8ba8\u8bba\u200b\u76f8\u5173\u200b\u7684\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u672c\u6587\u200b\u7684\u200b\u4ee3\u7801\u200b\u5168\u90e8\u200b\u90fd\u200b\u5728\u200b\u8fd9\u91cc\u200b\uff1a\u200b\u4e0b\u8f7d\u200b\uff0c\u200b\u5728\u7ebf\u200b\u6f14\u793a\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#_30","title":"\u5f15\u7528","text":"<ul> <li>Boost.Preprocessor</li> <li>C/C++ \u200b\u5b8f\u200b\u7f16\u7a0b\u200b\u7684\u200b\u827a\u672f\u200b</li> </ul> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/","title":"C/C++ \u200b\u7684\u200b\u547d\u4ee4\u884c\u200b\u53c2\u6570\u200b\u5904\u7406\u200b\u603b\u7ed3","text":"<p>\u200b\u524d\u4e00\u9635\u5b50\u200b\u7ffb\u200b Linux \u200b\u5185\u6838\u200b\u4ee3\u7801\u200b\u7684\u200b\u65f6\u5019\u200b\u770b\u5230\u200b\u4e86\u200b\u5185\u6838\u200b\u5bf9\u200b\u6a21\u5757\u200b\u53c2\u6570\u200b (moduleparam) \u200b\u7684\u200b\u5904\u7406\u200b\uff0c\u200b\u89c9\u5f97\u200b\u633a\u200b\u7cbe\u5999\u200b\uff0c\u200b\u8ba9\u200b\u6211\u200b\u4e0d\u7981\u200b\u60f3\u200b\u7814\u7a76\u200b\u4e0b\u200b C \u200b\u4e0b\u200b\u7684\u200b\u547d\u4ee4\u884c\u200b\u53c2\u6570\u200b\u8981\u200b\u600e\u6837\u200b\u66f4\u597d\u200b\u5730\u200b\u5904\u7406\u200b\u3002\u200b\u672c\u6587\u200b\u6240\u7528\u200b\u4ee3\u7801\u200b\u90fd\u200b\u5728\u200b\u8fd9\u91cc\u200b aparsing \u3002\u200b\u4ee3\u7801\u200b\u652f\u6301\u200b\u5728\u200b Windows \u3001 Linux \u3001 Mac OS X \u200b\u4e0b\u200b\u7f16\u8bd1\u200b\u8fd0\u884c\u200b\uff0c\u200b\u8be6\u7ec6\u200b\u7684\u200b\u7f16\u8bd1\u200b\u6307\u5357\u200b\u5728\u200b README.md \u200b\u91cc\u9762\u200b\u3002 </p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/#getenv","title":"getenv","text":"<p>\u200b\u6807\u51c6\u200b\u5e93\u4e3a\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b <code>getenv</code> \uff0c\u200b\u6309\u7167\u200b\u5b57\u9762\u200b\u610f\u601d\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u662f\u200b\u7528\u6765\u200b\u83b7\u53d6\u200b\u73af\u5883\u53d8\u91cf\u200b\u7684\u200b\uff0c\u200b\u90a3\u4e48\u200b\u53ea\u8981\u200b\u6211\u4eec\u200b\u9884\u5148\u200b\u8bbe\u7f6e\u200b\u597d\u200b\u9700\u8981\u200b\u7684\u200b\u73af\u5883\u53d8\u91cf\u200b\uff0c\u200b\u5728\u200b\u7a0b\u5e8f\u200b\u91cc\u9762\u200b\u62ff\u200b\u51fa\u6765\u200b\uff0c\u200b\u5c31\u200b\u95f4\u63a5\u200b\u5730\u200b\u628a\u200b\u53c2\u6570\u200b\u4f20\u5230\u200b\u7a0b\u5e8f\u200b\u91cc\u9762\u200b\u5566\u200b\u3002\u200b\u6211\u4eec\u200b\u6765\u770b\u200b\u4e0b\u9762\u200b\u8fd9\u200b\u6bb5\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n\n//char *getenv( const char *name );\n//GETENV_ADD=abc GETENV_NUM=2 ./getenv_test \n\nint main (int argc, char **argv)\n{\n    char *add, *num;\n    if((add = getenv(\"GETENV_ADD\")))\n        printf(\"GETENV_ADD = %s\\n\", add);\n    else\n        printf(\"GETENV_ADD not found\\n\");\n\n    if((num = getenv(\"GETENV_NUM\")))\n    {\n        int numi = atoi(num);\n        printf(\"GETENV_NUM = %d\\n\", numi);\n    }\n    else\n        printf(\"GETENV_NUM not found\\n\");\n}\n</code></pre> <p><code>getenv</code> \u200b\u51fd\u6570\u200b\u58f0\u660e\u200b\u5982\u200b\u7b2c\u200b 4 \u200b\u884c\u200b\uff0c\u200b\u4f20\u5165\u200b\u60f3\u8981\u200b\u83b7\u53d6\u200b\u7684\u200b\u53d8\u91cf\u200b\u540d\u5b57\u200b\uff0c\u200b\u8fd4\u56de\u200b\u8be5\u200b\u53d8\u91cf\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5982\u679c\u200b\u627e\u200b\u4e0d\u5230\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b0\u300210 \u200b\u548c\u200b 15 \u200b\u884c\u200b\u5c31\u662f\u200b\u5206\u522b\u200b\u83b7\u53d6\u200b\u4e24\u4e2a\u200b\u73af\u5883\u53d8\u91cf\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5982\u679c\u200b\u53d8\u91cf\u200b\u6709\u6548\u200b\u5219\u200b\u6253\u5370\u200b\u53d8\u91cf\u503c\u200b\u3002\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b <code>getenv</code> \u200b\u8fd4\u56de\u200b\u7684\u200b\u90fd\u200b\u662f\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u9700\u8981\u200b\u4f7f\u7528\u8005\u200b\u624b\u52a8\u200b\u8f6c\u6362\u200b\u6570\u503c\u200b\u7c7b\u578b\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u4f7f\u7528\u200b\u8d77\u6765\u200b\u4e0d\u591f\u200b\u65b9\u4fbf\u200b\u3002\u200b\u7f16\u8bd1\u200b\u8fd0\u884c\u200b:</p> <p>Windows \u200b\u4e0b\u200b\uff1a</p> <pre><code>set GETENV_ADD=abc &amp; set GETENV_NUM=1 &amp; .\\getenv_test.exe\n</code></pre> <p>Linux \u200b\u4e0b\u200b\uff1a</p> <pre><code>GETENV_ADD=abc GETENV_NUM=2 ./getenv_test \n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>GETENV_ADD = abc\nGETENV_NUM = 2\n</code></pre>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/#getopt","title":"getopt","text":"<p>Linux \u200b\u7ed9\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u7ec4\u200b\u51fd\u6570\u200b <code>getopt, getopt_long, getopt_long_only</code> \u200b\u6765\u200b\u5904\u7406\u200b\u547d\u4ee4\u884c\u200b\u4f20\u9012\u200b\u8fdb\u6765\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u8fd9\u200b\u4e09\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u58f0\u660e\u200b\u5206\u522b\u200b\u662f\u200b\uff1a</p> <pre><code>extern char *optarg;\nextern int optind, opterr, optopt;\n\nint getopt(int argc, char * const argv[],\n                  const char *optstring);\n\nint getopt_long(int argc, char * const argv[],\n            const char *optstring,\n            const struct option *longopts, int *longindex);\n\nint getopt_long_only(int argc, char * const argv[],\n            const char *optstring,\n            const struct option *longopts, int *longindex);\n</code></pre> <p><code>getopt</code> \u200b\u53ea\u80fd\u200b\u5904\u7406\u200b\u77ed\u200b\u53c2\u6570\u200b\uff08\u200b\u5373\u5355\u200b\u5b57\u7b26\u200b\u53c2\u6570\u200b\uff09\uff0c<code>getopt_long, getopt_long_only</code> \u200b\u5219\u200b\u53ef\u4ee5\u200b\u5904\u7406\u200b\u957f\u200b\u53c2\u6570\u200b\u3002\u200b\u8be6\u7ec6\u200b\u7684\u200b\u51fd\u6570\u200b\u89e3\u91ca\u200b\u53ef\u4ee5\u200b\u53bb\u200b\u7ffb\u200b Linux \u200b\u4e0b\u200b\u7684\u200b\u624b\u518c\u200b\uff0c\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u901a\u8fc7\u200b\u4f8b\u5b50\u200b\u6765\u200b\u8bf4\u660e\u200b <code>getopt</code> \u200b\u548c\u200b <code>getopt_long</code> \u200b\u7684\u200b\u7528\u6cd5\u200b\u3002</p> <p>\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b\uff0c Windows \u200b\u4e0b\u200b\u662f\u200b\u6ca1\u6709\u200b\u63d0\u4f9b\u200b\u8fd9\u200b\u4e00\u7ec4\u200b\u51fd\u6570\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u200b\u627e\u200b\u4e86\u200b\u4e00\u4efd\u200b\u53ef\u4ee5\u200b\u5728\u200b Windows \u200b\u4e0b\u200b\u7f16\u8bd1\u200b\u7684\u200b\u6e90\u7801\u200b\uff0c\u200b\u505a\u200b\u4e86\u200b\u5c0f\u5c0f\u7684\u200b\u6539\u52a8\u200b\uff0c\u200b\u4ee3\u7801\u200b\u90fd\u200b\u5728\u200b\u8fd9\u91cc\u200b\u3002</p> <pre><code>// test getopt\n\n#include &lt;getopt.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nstatic struct option long_options[] =\n{\n    {\"add\", required_argument, 0, 'a'},\n    {\"append\", no_argument, 0, 0},\n    {\"delete\", required_argument, 0, 0},\n    {\"verbose\", optional_argument, 0, 0},\n    {\"create\", no_argument, 0, 0},\n    {\"file\", required_argument, 0, 0},\n    {\"help\", no_argument, 0, 0},\n    {0, 0, 0, 0}\n};\n\nstatic char simple_options[] = \"a:bc::d:0123456789\";\n\nint main (int argc, char **argv)\n{\n\n    int c;\n    int digit_optind = 0;\n\n    while (1)\n    {\n        int this_option_optind = optind ? optind : 1;\n        int longindex = -1;\n\n        c = getopt_long(argc, argv, simple_options, long_options, &amp;longindex);\n        if (c == -1)\n        break;\n\n        switch (c)\n        {\n            // long option\n            case 0:\n                   printf(\"option %s\", long_options[longindex].name);\n                   if (optarg)\n                       printf(\" with arg %s\", optarg);\n                   printf(\"\\n\");\n                   break;\n\n                break;\n\n            case '0':\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n                if(digit_optind != 0 &amp;&amp; digit_optind != this_option_optind)\n                    printf(\"digits occur in two different argv-elements.\\n\");\n\n                digit_optind = this_option_optind;\n                printf(\"option %c\\n\", c);\n                break;\n\n            case 'a':\n                printf(\"option a with value '%s'\\n\", optarg);\n                break;\n\n            case 'b':\n                printf(\"option b\\n\");\n                break;\n\n            case 'c':\n                if(optarg)\n                    printf(\"option c with value '%s'\\n\", optarg);\n                else\n                    printf(\"option c\\n\");\n                break;\n\n            case '?':\n                break;\n\n            default:\n                printf(\"?? getopt returned character code 0%o ??\\n\", c);\n        } // switch\n    } // while\n\n    if (optind &lt; argc)\n    {\n        printf(\"non-option ARGV-elements: \");\n        while (optind &lt; argc)\n        printf(\"%s \", argv[optind++]);\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u6765\u200b\u7740\u91cd\u200b\u5206\u6790\u200b <code>getopt_long</code> \u200b\u7684\u200b\u7528\u6cd5\u200b\uff0c<code>getopt_long</code> \u200b\u7684\u200b\u524d\u200b\u4e09\u4e2a\u200b\u53c2\u6570\u200b\u8ddf\u200b <code>getopt</code> \u200b\u662f\u200b\u4e00\u6837\u200b\u7684\u200b\uff0c\u200b\u5206\u522b\u200b\u662f\u200b\uff1a\u200b\u547d\u4ee4\u884c\u200b\u53c2\u6570\u200b\u4e2a\u6570\u200b <code>argc</code> \uff0c\u200b\u547d\u4ee4\u884c\u200b\u53c2\u6570\u200b\u6570\u7ec4\u200b <code>argv</code>\uff0c\u200b\u77ed\u200b\u53c2\u6570\u200b\u5177\u4f53\u200b\u5f62\u5f0f\u200b <code>optstring</code>\u3002<code>otpstring</code> \u200b\u7684\u200b\u683c\u5f0f\u200b\u5c31\u662f\u200b\u4e00\u4e2a\u4e2a\u200b\u7684\u200b\u77ed\u200b\u53c2\u6570\u200b\u5b57\u7b26\u200b\uff0c\u200b\u540e\u9762\u200b\u52a0\u200b\u5192\u53f7\u200b <code>:</code> \u200b\u8868\u793a\u200b\u5e26\u200b\u53c2\u6570\u200b\uff0c\u200b\u4e24\u4e2a\u200b\u5192\u53f7\u200b <code>::</code> \u200b\u8868\u793a\u200b\u53ef\u200b\u9009\u200b\u53c2\u6570\u200b\uff0c\u200b\u8b6c\u5982\u200b\u7b2c\u200b 19 \u200b\u884c\u200b\uff0c\u200b\u5c31\u662f\u200b\u58f0\u660e\u200b\u77ed\u200b\u53c2\u6570\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff0c<code>b</code> \u200b\u53c2\u6570\u200b\u4e0d\u5e26\u200b\u989d\u5916\u200b\u53c2\u6570\u200b\uff0c <code>a</code> \u200b\u53c2\u6570\u200b\u5e26\u200b\u989d\u5916\u200b\u53c2\u6570\u200b\uff0c<code>c</code> \u200b\u5e26\u200b\u53ef\u9009\u200b\u53c2\u6570\u200b\u3002</p> <p><code>getopt_long</code> \u200b\u540e\u200b\u4e24\u4e2a\u200b\u53c2\u6570\u200b\u662f\u200b\u7528\u6765\u200b\u5904\u7406\u200b\u957f\u200b\u53c2\u6570\u200b\u7684\u200b\uff0c\u200b\u5176\u4e2d\u200b <code>option</code> \u200b\u7684\u200b\u7ed3\u6784\u200b\u662f\u200b\uff1a</p> <p><pre><code>struct option {\n    const char *name;       // \u200b\u957f\u200b\u53c2\u6570\u200b\u540d\u5b57\u200b\n    int         has_arg;    // \u200b\u662f\u5426\u200b\u5e26\u200b\u989d\u5916\u200b\u53c2\u6570\u200b\n    int        *flag;       // \u200b\u8bbe\u7f6e\u200b\u5982\u4f55\u200b\u8fd4\u56de\u200b\u51fd\u6570\u8c03\u7528\u200b\u7ed3\u679c\u200b\n    int         val;        // \u200b\u8fd4\u56de\u200b\u7684\u200b\u6570\u503c\u200b\n};\n</code></pre> \u200b\u867d\u7136\u200b\u8bf4\u200b\u662f\u200b\u957f\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f46\u200b <code>name</code> \u200b\u8fd8\u662f\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b\u4e3a\u5355\u200b\u5b57\u7b26\u200b\u957f\u5ea6\u200b\u7684\u200b\u3002</p> <p><code>has_arg</code> \u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>no_argument, required_argument, optional_argument</code>\uff0c\u200b\u5206\u522b\u200b\u8868\u793a\u200b\u4e0d\u5e26\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e26\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e26\u200b\u53ef\u9009\u200b\u53c2\u6570\u200b\u3002</p> <p><code>flag</code> \u200b\u548c\u200b <code>val</code> \u200b\u662f\u200b\u914d\u5408\u200b\u4f7f\u7528\u200b\u7684\u200b\uff0c\u200b\u5982\u679c\u200b <code>flag = NULL</code>\uff0c<code>getopt_long</code> \u200b\u4f1a\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b <code>val</code> \uff0c\u200b\u5426\u5219\u200b\u5982\u679c\u200b <code>flag</code> \u200b\u4e3a\u200b\u6709\u6548\u200b\u6307\u9488\u200b\uff0c<code>getopt_long</code> \u200b\u4f1a\u200b\u6267\u884c\u200b\u7c7b\u4f3c\u200b <code>*flag = val</code> \u200b\u7684\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u628a\u200b <code>flag</code> \u200b\u6307\u5411\u200b\u7684\u200b\u53d8\u91cf\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>val</code> \u200b\u7684\u200b\u6570\u503c\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b <code>getopt_long</code> \u200b\u627e\u5230\u200b\u5339\u914d\u200b\u7684\u200b\u77ed\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f1a\u200b\u8fd4\u56de\u200b\u8be5\u200b\u77ed\u200b\u53c2\u6570\u200b\u7684\u200b\u5b57\u7b26\u200b\u503c\u200b\uff0c\u200b\u5982\u679c\u200b\u627e\u5230\u200b\u5339\u914d\u200b\u7684\u200b\u957f\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f1a\u200b\u8fd4\u56de\u200b <code>val</code>\uff08 <code>flag = NULL</code> \uff09\u200b\u6216\u8005\u200b\u8fd4\u56de\u200b <code>0</code> \uff08 <code>flag != NULL; *flag = val;</code> \uff09\uff1b\u200b\u5982\u679c\u200b\u9047\u5230\u200b\u975e\u200b\u53c2\u6570\u200b\u7684\u200b\u5b57\u7b26\u200b\uff0c\u200b\u4f1a\u200b\u8fd4\u56de\u200b <code>?</code>\uff1b\u200b\u5982\u679c\u200b\u6240\u6709\u200b\u53c2\u6570\u200b\u90fd\u200b\u5904\u7406\u5b8c\u6bd5\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b <code>-1</code> \u3002</p> <p>\u200b\u5229\u7528\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u505a\u51fa\u200b\u7528\u957f\u200b\u53c2\u200b\u8ddf\u200b\u77ed\u200b\u53c2\u200b\u542b\u4e49\u200b\u76f8\u540c\u200b\u7684\u200b\u6548\u679c\u200b\uff0c\u200b\u8b6c\u5982\u200b <code>long_options</code> \u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b <code>add</code>\uff0c\u200b\u5176\u200b <code>val</code> \u200b\u503c\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u77ed\u200b\u53c2\u6570\u200b\u7684\u200b\u5b57\u7b26\u200b <code>'a'</code>\uff0c\u200b\u90a3\u4e48\u200b\u5224\u65ad\u200b\u8fd4\u56de\u200b\u65f6\u200b\uff0c<code>--add</code> \u200b\u548c\u200b <code>-a</code> \u200b\u4f1a\u200b\u8fdb\u5165\u200b\u76f8\u540c\u200b\u7684\u200b\u5904\u7406\u200b\u5206\u652f\u200b\uff0c\u200b\u88ab\u200b\u5f53\u4f5c\u200b\u76f8\u540c\u200b\u7684\u200b\u542b\u4e49\u200b\u6765\u200b\u5904\u7406\u200b\u4e86\u200b\u3002</p> <p>\u200b\u62fc\u56fe\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u5757\u200b\u5c31\u662f\u200b <code>optind</code> \u200b\u548c\u200b <code>optarg</code> \u200b\u7684\u200b\u7528\u6cd5\u200b\uff0c<code>optind</code> \u200b\u662f\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5f85\u5904\u7406\u200b\u53c2\u6570\u200b\u5728\u200b <code>argv</code> \u200b\u4e2d\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c <code>optarg</code> \u200b\u5219\u200b\u6307\u5411\u200b\u989d\u5916\u200b\u53c2\u6570\u200b\u5b57\u7b26\u4e32\u200b\u3002</p> <p>\u200b\u7f16\u8bd1\u200b\u8fd0\u884c\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>$ .\\getopt_test -a 1 -b -c4 --add 2 --verbose --verbose=3 -123 -e --e\noption a with value '1'\noption b\noption c with value '4'\noption a with value '2'\noption verbose\noption verbose with arg 3\noption 1\noption 2\noption 3\n.\\getopt_test: invalid option -- e\n.\\getopt_test: unrecognized option `--e'\n</code></pre> <p><code>-a</code> \u200b\u548c\u200b <code>--add</code> \u200b\u7684\u200b\u542b\u4e49\u200b\u76f8\u540c\u200b\uff0c\u200b\u77ed\u200b\u53c2\u6570\u200b\u7684\u200b\u53ef\u9009\u200b\u53c2\u6570\u200b\u76f4\u63a5\u200b\u8ddf\u200b\u5728\u200b\u540e\u9762\u200b\uff0c\u200b\u8b6c\u5982\u200b <code>-c4</code>\uff0c\u200b\u800c\u957f\u200b\u53c2\u6570\u200b\u7684\u200b\u53ef\u9009\u200b\u53c2\u6570\u200b\u9700\u8981\u200b\u6709\u200b\u7b49\u200b\u53f7\u200b\uff0c\u200b\u8b6c\u5982\u200b <code>--verbose=3</code>\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/#mobuleparam","title":"mobuleparam","text":"<p>ok\uff0c\u200b\u7ec8\u4e8e\u200b\u6765\u5230\u200b\u6700\u521d\u200b\u5f15\u53d1\u200b\u8fd9\u200b\u7bc7\u6587\u7ae0\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0cLinux \u200b\u5185\u6838\u200b\u7528\u200b\u4e86\u200b\u4e00\u79cd\u200b\u5f88\u200b\u53d6\u5de7\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6765\u200b\u7ed9\u200b\u5185\u6838\u6a21\u5757\u200b\u4f20\u9012\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u65b9\u6cd5\u200b\u5c31\u662f\u200b <code>moduleparam</code> \u3002\u200b\u6211\u200b\u5728\u200b\u8fd9\u91cc\u200b\u5148\u200b\u7b80\u5355\u200b\u89e3\u91ca\u200b Linux \u200b\u5185\u6838\u200b\u7684\u200b <code>moduleparam</code> \u200b\u7684\u200b\u505a\u6cd5\u200b\uff0c\u200b\u66f4\u200b\u8be6\u7ec6\u200b\u7684\u200b\u89e3\u91ca\u200b\u53ef\u4ee5\u200b\u53bb\u200b\u770b\u200b\u4ee3\u7801\u200b\u3002\u200b\u867d\u7136\u200b\u6211\u200b\u501f\u9274\u200b\u4e86\u200b\u4e00\u4e9b\u200b <code>moduleparam</code> \u200b\u7684\u200b\u5904\u7406\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4f46\u200b\u548c\u200b Linux \u200b\u5185\u6838\u200b\u7684\u200b <code>moduleparam</code> \u200b\u6709\u200b\u4e00\u4e9b\u200b\u4e0d\u540c\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u533a\u5206\u200b\uff0c\u200b\u6211\u4f1a\u200b\u628a\u200b\u6211\u200b\u7684\u200b\u65b9\u6cd5\u200b\u53eb\u505a\u200b <code>small moduleparam</code> \uff0c Linux \u200b\u5185\u6838\u200b\u7684\u200b\u4f9d\u7136\u200b\u53eb\u505a\u200b <code>moduleparam</code> \u3002</p> <p>\u200b\u5148\u200b\u6765\u200b\u770b\u770b\u200b <code>moduleparam</code> \u200b\u7684\u200b\u7528\u6cd5\u200b\uff0c\u200b\u5728\u200b\u6a21\u5757\u200b\u91cc\u9762\u200b\u58f0\u660e\u200b\uff1a</p> <pre><code>int enable_debug = 0;\nmodule_param(enable_debug, int, 0);\n</code></pre> <p>\u200b\u7136\u540e\u200b\u52a0\u8f7d\u200b\u6a21\u5757\u200b\u65f6\u200b\u8f93\u5165\u200b\u53c2\u6570\u200b\uff1a</p> <pre><code>$ insmod mod enable_debug=1\n</code></pre> <p>\u200b\u53d8\u91cf\u200b <code>enable_debug</code> \u200b\u5c31\u200b\u88ab\u200b\u6b63\u786e\u200b\u5730\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>1</code>\uff0c\u200b\u4f7f\u7528\u200b\u8d77\u6765\u200b\u5f88\u200b\u65b9\u4fbf\u200b\uff0c\u200b\u9700\u8981\u200b\u589e\u52a0\u200b\u7684\u200b\u4ee3\u7801\u200b\u4e5f\u200b\u5f88\u5c11\u200b\uff0c\u200b\u4ee3\u7801\u200b\u53ef\u4ee5\u200b\u5199\u200b\u5f97\u200b\u5f88\u200b\u7b80\u77ed\u200b\u4f18\u96c5\u200b\uff0c\u200b\u4e0d\u7528\u200b\u50cf\u200b <code>getenv</code> \u200b\u548c\u200b <code>getopt</code> \u200b\u90a3\u6837\u200b\u5199\u200b\u5f88\u591a\u200b\u5faa\u73af\u200b\u5224\u65ad\u200b\uff0c\u200b\u800c\u4e14\u200b\u8fd8\u200b\u81ea\u5e26\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u200b\u770b\u5230\u200b\u5c31\u200b\u60f3\u200b\uff0c\u200b\u8981\u662f\u200b\u80fd\u200b\u628a\u200b\u8fd9\u4e2a\u200b\u65b9\u6cd5\u200b\u62ff\u6765\u200b\u5904\u7406\u200b\u547d\u4ee4\u884c\u200b\u53c2\u6570\u200b\uff0c\u200b\u90a3\u200b\u5c31\u200b\u66f4\u597d\u200b\u4e86\u200b\u3002</p> <p>\u200b\u63a5\u7740\u200b\u6765\u200b\u770b\u770b\u200b <code>moduleparam</code> \u200b\u7684\u200b\u6838\u5fc3\u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>struct kernel_param {\n    const char *name;           // \u200b\u53d8\u91cf\u200b\u540d\u5b57\u200b\n    u16 perm;                   // \u200b\u53d8\u91cf\u200b\u8bbf\u95ee\u200b\u6743\u9650\u200b\n    u16 flags;                  // \u200b\u53d8\u91cf\u200b\u662f\u5426\u200b bool \u200b\u7c7b\u578b\u200b\n    param_set_fn set;           // str -&gt; \u200b\u53d8\u91cf\u503c\u200b\n    param_get_fn get;           // \u200b\u53d8\u91cf\u503c\u200b -&gt; str\n    union {\n        void *arg;              // \u200b\u53d8\u91cf\u200b\u6307\u9488\u200b\n        const struct kparam_string *str;\n        const struct kparam_array *arr;\n    };\n};\n\n#define __module_param_call(prefix, name, set, get, arg, isbool, perm)  \\\n    /* Default value instead of permissions? */         \\\n    static int __param_perm_check_##name __attribute__((unused)) =  \\\n    BUILD_BUG_ON_ZERO((perm) &lt; 0 || (perm) &gt; 0777 || ((perm) &amp; 2))  \\\n    + BUILD_BUG_ON_ZERO(sizeof(\"\"prefix) &gt; MAX_PARAM_PREFIX_LEN);   \\\n    static const char __param_str_##name[] = prefix #name;      \\\n    static struct kernel_param __moduleparam_const __param_##name   \\\n    __used                              \\\n        __attribute__ ((unused,__section__ (\"__param\"),aligned(sizeof(void *)))) \\\n    = { __param_str_##name, perm, isbool ? KPARAM_ISBOOL : 0,   \\\n        set, get, { arg } }\n\n#define module_param_call(name, set, get, arg, perm)                  \\\n    __module_param_call(MODULE_PARAM_PREFIX,                  \\\n                name, set, get, arg,                  \\\n                __same_type(*(arg), bool), perm)\n\n#define module_param_named(name, value, type, perm)            \\\n    param_check_##type(name, &amp;(value));                \\\n    module_param_call(name, param_set_##type, param_get_##type, &amp;value, perm); \\\n    __MODULE_PARM_TYPE(name, #type)\n\n#define module_param(name, type, perm)              \\\n    module_param_named(name, name, type, perm)\n</code></pre> <p><code>module_param</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5b8f\u200b\uff0c\u200b\u5b83\u200b\u5b9e\u9645\u200b\u505a\u200b\u7684\u200b\u4e8b\u60c5\u200b\u662f\u200b\u5efa\u7acb\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u53ef\u4ee5\u200b\u53cd\u5c04\u200b\u5230\u200b\u4f20\u5165\u200b\u53d8\u91cf\u200b\u7684\u200b\u7ed3\u6784\u200b <code>kernel_param</code> \uff0c\u200b\u8be5\u200b\u7ed3\u6784\u200b\u4fdd\u5b58\u200b\u4e86\u200b\u8db3\u591f\u200b\u8bbf\u95ee\u200b\u548c\u200b\u8bbe\u7f6e\u200b\u53d8\u91cf\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u5373\u200b\u7b2c\u200b 20-24 \u200b\u884c\u200b\uff0c\u200b\u5e76\u4e14\u200b\u628a\u200b\u7ed3\u6784\u200b\u653e\u5728\u200b\u53eb\u505a\u200b <code>__param</code> \u200b\u7684\u200b <code>section</code> \u200b\u4e2d\u200b\uff08 <code>__section__ (\"__param\")</code> \uff09\u3002\u200b\u7ed3\u6784\u200b\u4fdd\u5b58\u200b\u597d\u200b\u4e4b\u540e\u200b\uff0c\u200b\u5185\u6838\u200b\u4f1a\u200b\u5728\u200b\u52a0\u8f7d\u200b\u6a21\u5757\u200b\u65f6\u200b\uff0c\u200b\u627e\u51fa\u200b elf \u200b\u6587\u4ef6\u200b\u7684\u200b <code>section __param</code> \u200b\u7684\u200b\u4f4d\u7f6e\u200b\u548c\u200b\u7ed3\u6784\u200b\u6570\u91cf\u200b\uff0c\u200b\u5728\u200b\u6839\u636e\u200b\u540d\u5b57\u200b\u548c\u200b <code>param_set_fn</code> \u200b\u5206\u522b\u200b\u8bbe\u7f6e\u200b\u6bcf\u4e2a\u200b\u53c2\u6570\u200b\u7684\u200b\u6570\u503c\u200b\u3002\u200b\u627e\u51fa\u200b\u7279\u5b9a\u200b\u540d\u5b57\u200b <code>section</code> \u200b\u7684\u200b\u65b9\u6cd5\u200b\u662f\u200b\u5e73\u53f0\u200b\u76f8\u5173\u200b\u7684\u200b\uff0cLinux \u200b\u5185\u6838\u200b\u5b9e\u73b0\u200b\u7684\u200b\u662f\u200b\u5bf9\u200b elf \u200b\u6587\u4ef6\u200b\u7684\u200b\u5904\u7406\u200b\uff0cLinux \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6307\u4ee4\u200b <code>readelf</code> \u200b\u6765\u200b\u67e5\u770b\u200b elf \u200b\u6587\u4ef6\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u6709\u200b\u5174\u8da3\u200b\u7684\u200b\u53ef\u4ee5\u200b\u67e5\u770b\u200b <code>readelf</code> \u200b\u7684\u200b\u5e2e\u52a9\u200b\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u4e0a\u9762\u200b\u8bf4\u9053\u200b Linux \u200b\u5185\u6838\u200b\u7684\u200b\u505a\u6cd5\u200b\u662f\u200b\u5e73\u53f0\u200b\u76f8\u5173\u200b\u7684\u200b\uff0c\u200b\u800c\u200b\u6211\u200b\u60f3\u8981\u200b\u7684\u200b\u5e73\u53f0\u200b\u65e0\u5173\u200b\u7684\u200b\u5904\u7406\u200b\u53c2\u6570\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u5c31\u8981\u200b\u6539\u4e00\u6539\u200b\u539f\u59cb\u200b\u7684\u200b <code>moduleparam</code> \u200b\u7684\u200b\u505a\u6cd5\u200b\uff0c\u200b\u628a\u200b <code>__section__ (\"__param\")</code> \u200b\u58f0\u660e\u200b\u53bb\u6389\u200b\uff0c\u200b\u6bd5\u7adf\u200b\u6211\u4eec\u200b\u5e76\u200b\u4e0d\u200b\u50cf\u200b\u53bb\u200b\u5f88\u200b\u9ebb\u70e6\u200b\u5730\u200b\u8bfb\u53d6\u200b elf \u200b\u6587\u4ef6\u200b\u7684\u200b <code>section</code> \u3002\u200b\u5148\u200b\u6765\u200b\u770b\u770b\u200b\u4fee\u6539\u200b\u540e\u200b\u7684\u200b\u7528\u6cd5\u200b\uff1a</p> <pre><code>#include \"moduleparam.h\"\n#include &lt;stdio.h&gt;\n\nstatic int test = 0;\nstatic bool btest = 0;\nstatic unsigned int latest_num = 0;\nstatic long latest[10] = {0};\nstatic char strtest[20] = \"\\0\";\n\nvoid usage()\n{\n    char *msg = \"usage: moduleparam_test [test=int] [btest[=bool]] [latest=int array] [strtest=string]\\n\";\n    printf(msg);\n}\n\nint unknown_handler(char *param, char *val)\n{\n    printf(\"find unknown param: %s\\n\", param);\n    return 0;\n}\n\nint main (int argc, char **argv)\n{\n    init_module_param(4);\n    module_param(test, int);\n    module_param_bool(btest);\n    module_param_array(latest, long, &amp;latest_num);\n    module_param_string(strtest, strtest, sizeof(strtest));\n\n    int ret = parse_params(argc, argv, unknown_handler);\n\n    if(ret != 0)\n    {\n        usage();\n        return 0;\n    }\n\n    char buf[1024];\n    for(int i=0; i &lt; MODULE_INIT_VARIABLE_NUM; ++i)\n    {\n        MODULE_INIT_VARIABLE[i].get(buf, &amp;MODULE_INIT_VARIABLE[i]);\n        printf(\"%s = %s\\n\", MODULE_INIT_VARIABLE[i].name, buf);\n    }\n    return 0;\n}\n</code></pre> <p>\u200b\u90a3\u4e48\u200b\u4e3a\u4e86\u200b\u4fdd\u5b58\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u53cd\u5c04\u200b\u7684\u200b\u7ed3\u6784\u200b\uff0c\u200b\u6211\u200b\u5c31\u200b\u589e\u52a0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5b8f\u200b <code>init_module_param(num)</code> \uff0c\u200b\u6765\u200b\u58f0\u660e\u200b\u4fdd\u5b58\u200b\u7ed3\u6784\u200b\u7684\u200b\u7a7a\u95f4\u200b\uff0c <code>num</code> \u200b\u662f\u200b\u53c2\u6570\u200b\u7684\u200b\u4e2a\u6570\u200b\uff0c\u200b\u5982\u679c\u200b\u5b9e\u9645\u200b\u58f0\u660e\u200b\u7684\u200b\u53c2\u6570\u200b\u4e2a\u6570\u200b\u8d85\u51fa\u200b <code>num</code> \uff0c\u200b\u7a0b\u5e8f\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u65ad\u8a00\u200b\u9519\u8bef\u200b\u3002<code>module_param</code> \u200b\u7684\u200b\u58f0\u660e\u200b\u8ddf\u200b\u539f\u59cb\u200b\u7684\u200b\u7a0d\u200b\u6709\u200b\u4e0d\u540c\u200b\uff0c\u200b\u53bb\u6389\u200b\u4e86\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u8868\u793a\u200b\u8bbf\u95ee\u200b\u6743\u9650\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u4e0d\u200b\u505a\u200b\u6743\u9650\u200b\u7684\u200b\u63a7\u5236\u200b\u3002\u200b\u53e6\u5916\u200b\u65b0\u589e\u200b\u4e86\u200b\u5b8f\u200b <code>module_param_bool</code> \u200b\u6765\u200b\u5904\u7406\u200b\u8868\u793a\u200b <code>bool</code> \u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c\u200b\u8fd9\u200b\u5728\u200b Linux \u200b\u7684\u200b\u7248\u672c\u200b\u662f\u200b\u4e0d\u200b\u9700\u8981\u200b\u7684\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u7528\u5230\u200b\u4e86\u200b gcc \u200b\u5185\u5efa\u51fd\u6570\u200b <code>__builtin_types_compatible_p</code> \u200b\u6765\u200b\u5224\u65ad\u200b\u53d8\u91cf\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5f88\u200b\u9057\u61be\u200b\uff0cMSVC \u200b\u662f\u200b\u6ca1\u6709\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u200b\u53ea\u80fd\u200b\u628a\u200b\u8fd9\u4e2a\u200b\u529f\u80fd\u200b\u53bb\u6389\u200b\uff0c\u200b\u589e\u52a0\u200b\u4e00\u4e2a\u200b\u5b8f\u200b\u3002 <code>module_param_array</code> \u200b\u548c\u200b <code>module_param_string</code> \u200b\u5c31\u662f\u200b\u5bf9\u200b\u6570\u7ec4\u200b\u548c\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5904\u7406\u200b\uff0c\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u529f\u80fd\u200b\u5728\u200b\u539f\u59cb\u200b\u7684\u200b\u7248\u672c\u200b\u4e5f\u200b\u662f\u200b\u6709\u200b\u7684\u200b\u3002</p> <p>\u200b\u58f0\u660e\u200b\u53c2\u6570\u200b\u5b8c\u6bd5\u200b\uff0c\u200b\u5c31\u662f\u200b\u5904\u7406\u200b\u4f20\u5165\u200b\u7684\u200b\u53c2\u6570\u200b\u4e86\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5b8f\u200b <code>parse_params</code> \uff0c\u200b\u4f20\u5165\u200b <code>argc, argv</code>\uff0c\u200b\u7b2c\u200b 3 \u200b\u4e2a\u200b\u53c2\u6570\u200b\u662f\u200b\u5bf9\u200b\u672a\u77e5\u200b\u53c2\u6570\u200b\u7684\u200b\u5904\u7406\u200b\u56de\u8c03\u200b\u51fd\u6570\u6307\u9488\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f20\u200b <code>NULL</code> \uff0c\u200b\u5219\u200b\u5165\u200b\u5230\u200b\u4f4d\u7f6e\u200b\u53c2\u6570\u200b\u4f1a\u200b\u4e2d\u65ad\u200b\u5904\u7406\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fd4\u56de\u200b\u9519\u8bef\u7801\u200b\u3002</p> <p>\u200b\u7f16\u8bd1\u200b\u8fd0\u884c\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>.\\moduleparam_test.exe error=0 test=101 btest=1 latest=1,2,3 strtest=\\\"Hello World!\\\"\nParsing ARGS: error=0 test=101 btest=1 latest=1,2,3 strtest=\"Hello World!\"\nfind unknown param: error\ntest = 101\nbtest = Y\nlatest = 1,2,3\nstrtest = Hello World!\n</code></pre> <p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u6570\u503c\u200b\uff0c\u200b\u6570\u7ec4\u200b\u548c\u200b\u5b57\u7b26\u4e32\u200b\u90fd\u200b\u80fd\u200b\u6b63\u786e\u200b\u8bfb\u5165\u200b\u5e76\u200b\u8f6c\u6362\u200b\u683c\u5f0f\u200b\uff0c\u200b\u5982\u679c\u200b\u9047\u5230\u200b\u4e0d\u80fd\u200b\u8f6c\u6362\u200b\u683c\u5f0f\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f1a\u200b\u8fd4\u56de\u200b\u9519\u8bef\u7801\u200b\u5e76\u6253\u5370\u200b\u76f8\u5173\u200b\u4fe1\u606f\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u7b80\u5355\u200b\u5730\u200b\u6dfb\u52a0\u200b\u51e0\u884c\u200b\u4ee3\u7801\u200b\uff0c\u200b\u5c31\u200b\u5b8c\u6210\u200b\u53c2\u6570\u200b\u7684\u200b\u8bfb\u5165\u200b\u548c\u200b\u8f6c\u6362\u200b\u5904\u7406\u200b\uff0c\u200b\u7528\u200b\u8d77\u6765\u200b\u5f88\u200b\u4f18\u96c5\u200b\u3002\u200b\u66f4\u200b\u8be6\u7ec6\u200b\u5b9e\u73b0\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u770b\u200b\u4ee3\u7801\u200b\uff0c\u200b\u5728\u200b\u8fd9\u91cc\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-C%E5%92%8CCpp%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/#_1","title":"\u603b\u7ed3","text":"<p>\u200b\u8fd9\u6b21\u200b\u6211\u4eec\u200b\u603b\u7ed3\u200b\u4e86\u200b\u4e00\u4e0b\u200b C/C++ \u200b\u4e0b\u200b\u4e09\u79cd\u200b\u5904\u7406\u200b\u547d\u4ee4\u884c\u200b\u53c2\u6570\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5206\u522b\u200b\u662f\u200b <code>getenv</code> \uff0c<code>getopt</code> \u200b\u548c\u200b <code>moduleparam</code>\u3002\u200b\u4e09\u79cd\u200b\u65b9\u6cd5\u200b\u6709\u200b\u5404\u81ea\u200b\u7684\u200b\u7279\u70b9\u200b\uff0c\u200b\u4ee5\u540e\u200b\u6709\u200b\u9700\u8981\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u5b9e\u9645\u200b\u7684\u200b\u9700\u6c42\u200b\u6765\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff1a</p> <ul> <li><code>getenv</code> \u200b\u662f\u200b\u539f\u751f\u200b\u591a\u200b\u5e73\u53f0\u200b\u5c31\u200b\u652f\u6301\u200b\u7684\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u8fc7\u4e8e\u200b\u539f\u59cb\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b\u73af\u5883\u53d8\u91cf\u200b\uff0c\u200b\u5bf9\u200b\u73af\u5883\u200b\u6709\u200b\u4e00\u5b9a\u200b\u7684\u200b\u6c61\u67d3\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u4f7f\u7528\u200b\u524d\u200b\u6700\u597d\u200b\u6e05\u9664\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u73af\u5883\u53d8\u91cf\u200b\u9632\u6b62\u200b\u4e0a\u6b21\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u5b58\u7559\u200b\u6c61\u67d3\u200b</li> <li><code>getopt</code> \u200b\u662f\u200b Linux \u200b\u5e73\u53f0\u200b\u539f\u751f\u200b\u652f\u6301\u200b\u7684\u200b\uff0cWindows \u200b\u4e0d\u200b\u652f\u6301\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u5305\u542b\u200b\u5b9e\u73b0\u200b\u7684\u200b\u4ee3\u7801\u200b\u624d\u80fd\u200b\u8de8\u5e73\u53f0\u200b\u4f7f\u7528\u200b\u3002\u200b\u53c2\u6570\u200b\u7684\u200b\u4f20\u9012\u200b\u7b26\u5408\u200b Linux \u200b\u7684\u200b\u547d\u4ee4\u200b\u4f20\u53c2\u200b\u6807\u51c6\u200b\uff0c\u200b\u652f\u6301\u200b\u53ef\u200b\u9009\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f46\u200b\u4f7f\u7528\u200b\u8d77\u6765\u200b\u7565\u5fae\u200b\u9ebb\u70e6\u200b\uff0c\u200b\u901a\u5e38\u200b\u9700\u8981\u200b\u5faa\u73af\u200b\u548c\u200b\u6761\u4ef6\u200b\u5224\u65ad\u200b\u6765\u200b\u5904\u7406\u200b\u4e0d\u540c\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e76\u200b\u5bf9\u200b\u6570\u503c\u200b\u7c7b\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\u4e0d\u200b\u53cb\u597d\u200b\u3002</li> <li><code>moduleparam</code> \u200b\u662f\u200b\u53c2\u8003\u200b Linux \u200b\u5185\u6838\u200b\u7684\u200b <code>moduleparam</code> \u200b\u5b9e\u73b0\u200b\u7684\u200b\u547d\u4ee4\u884c\u200b\u53c2\u6570\u200b\u5904\u7406\u200b\u5de5\u5177\u200b\uff0c\u200b\u652f\u6301\u200b\u8de8\u5e73\u53f0\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4f7f\u7528\u200b\u7b80\u5355\u200b\uff0c\u200b\u80fd\u200b\u5bf9\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u53c2\u6570\u200b\u8fdb\u884c\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff0c\u200b\u7f3a\u70b9\u200b\u5c31\u662f\u200b\u6bcf\u4e2a\u200b\u53c2\u6570\u200b\u90fd\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200b\u76f8\u5e94\u200b\u7684\u200b\u53d8\u91cf\u200b\u5b58\u50a8\u200b\u3002</li> </ul> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/","title":"KCP \u200b\u6e90\u7801\u200b\u5256\u6790","text":"<p>\u200b\u9605\u8bfb\u200b\u672c\u6587\u200b\u4e4b\u524d\u200b\uff0c\u200b\u5982\u679c\u200b\u6ca1\u542c\u8bf4\u8fc7\u200b KCP \uff0c\u200b\u6216\u8005\u200b\u4e00\u70b9\u200b\u90fd\u200b\u4e0d\u200b\u4e86\u89e3\u200b KCP\uff0c\u200b\u9ebb\u70e6\u200b\u62bd\u200b\u4e00\u70b9\u200b\u65f6\u95f4\u200b\u5148\u200b\u770b\u770b\u200b KCP \u200b\u9879\u76ee\u200b\u7684\u200b\u8bf4\u660e\u200b\u6587\u6863\u200b\uff1a\u200b\u4f20\u9001\u95e8\u200b\u3002\u200b\u672c\u6587\u200b\u7684\u200b\u76ee\u7684\u200b\u662f\u200b\u6df1\u5165\u200b KCP \u200b\u7684\u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\u53bb\u200b\u7406\u89e3\u200b KCP \u3002</p>","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#kcp","title":"\u4ec0\u4e48\u200b\u662f\u200b KCP","text":"<p>KCP \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5feb\u901f\u200b\u53ef\u9760\u200b\u534f\u8bae\u200b\uff0c\u200b\u80fd\u591f\u200b\u4ee5\u6bd4\u200b TCP \u200b\u66f4\u200b\u4f4e\u200b\u7684\u200b\u5ef6\u8fdf\u200b\u6765\u200b\u4f20\u9001\u6570\u636e\u200b\uff0c\u200b\u6570\u636e\u200b\u91cd\u4f20\u200b\u66f4\u200b\u5feb\u200b\uff0c\u200b\u7b49\u5f85\u65f6\u95f4\u200b\u66f4\u200b\u77ed\u200b\u3002</p> <p>TCP\u200b\u662f\u200b\u4e3a\u200b\u6d41\u91cf\u200b\u8bbe\u8ba1\u200b\u7684\u200b\uff08\u200b\u6bcf\u79d2\u200b\u5185\u200b\u53ef\u4ee5\u200b\u4f20\u8f93\u200b\u591a\u5c11\u200bKB\u200b\u7684\u200b\u6570\u636e\u200b\uff09\uff0c\u200b\u8bb2\u7a76\u200b\u7684\u200b\u662f\u200b\u5145\u5206\u5229\u7528\u200b\u5e26\u5bbd\u200b\u3002\u200b\u800c\u200b KCP\u200b\u662f\u200b\u4e3a\u200b\u6d41\u901f\u200b\u8bbe\u8ba1\u200b\u7684\u200b\uff08\u200b\u5355\u4e2a\u200b\u6570\u636e\u5305\u200b\u4ece\u200b\u4e00\u7aef\u200b\u53d1\u9001\u5230\u200b\u4e00\u7aef\u200b\u9700\u8981\u200b\u591a\u5c11\u200b\u65f6\u95f4\u200b\uff09\uff0c\u200b\u4ee5\u200b10%-20%\u200b\u5e26\u5bbd\u200b\u6d6a\u8d39\u200b\u7684\u200b\u4ee3\u4ef7\u200b\u6362\u53d6\u200b\u4e86\u200b\u6bd4\u200b TCP\u200b\u5feb\u200b30%-40%\u200b\u7684\u200b\u4f20\u8f93\u901f\u5ea6\u200b\u3002TCP\u200b\u4fe1\u9053\u200b\u662f\u200b\u4e00\u6761\u200b\u6d41\u901f\u200b\u5f88\u200b\u6162\u200b\uff0c\u200b\u4f46\u200b\u6bcf\u79d2\u200b\u6d41\u91cf\u200b\u5f88\u5927\u200b\u7684\u200b\u5927\u8fd0\u6cb3\u200b\uff0c\u200b\u800c\u200bKCP\u200b\u662f\u200b\u6c34\u6d41\u200b\u6e4d\u6025\u200b\u7684\u200b\u5c0f\u200b\u6fc0\u6d41\u200b</p> <p>\u200b\u4ee5\u4e0a\u200b\u662f\u200b KCP \u200b\u6587\u6863\u200b\u4e0a\u9762\u200b\u5199\u200b\u7684\u200b\uff0c\u200b\u5173\u952e\u8bcd\u200b\u662f\u200b\u5e26\u5bbd\u200b\u548c\u200b\u6d41\u901f\u200b\uff0cKCP \u200b\u4f1a\u200b\u635f\u8017\u200b\u5e26\u5bbd\u200b\uff0c\u200b\u5e26\u6765\u200b\u7684\u200b\u597d\u5904\u200b\u662f\u200b\u66f4\u200b\u5927\u200b\u66f4\u200b\u5747\u8861\u200b\u7684\u200b\u4f20\u8f93\u901f\u7387\u200b\u3002\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u8bf4\u660e\u200b\u53c2\u8003\u200b KCP \u200b\u81ea\u8eab\u200b\u7684\u200b\u6587\u6863\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#kcp_1","title":"KCP \u200b\u6570\u636e\u7ed3\u6784","text":"<p>KCP \u200b\u6e90\u7801\u200b\u5728\u200b <code>ikcp.h</code> \u200b\u548c\u200b <code>ikcp.c</code> \u200b\u91cc\u9762\u200b\uff0c<code>ikcp.h</code> \u200b\u6838\u5fc3\u200b\u7684\u200b\u662f\u200b\u6570\u636e\u7ed3\u6784\u200b\u7684\u200b\u58f0\u660e\u200b\uff0c\u200b\u9996\u5148\u200b\u662f\u200b <code>SEGMENT</code> \u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u662f\u200b KCP \u200b\u534f\u8bae\u200b\u5904\u7406\u200b\u6570\u636e\u200b\u7684\u200b\u6700\u5c0f\u200b\u5355\u4f4d\u200b\uff1a</p>  SEGMENT \u200b\u7ed3\u6784\u200b\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>//=====================================================================\n// SEGMENT \u200b\u4e00\u4e2a\u200b SETMENT \u200b\u5c31\u662f\u200b\u4e00\u4e2a\u200b\u6570\u636e\u5305\u200b\n//=====================================================================\nstruct IKCPSEG\n{\n    // \u200b\u94fe\u8868\u200b\u8282\u70b9\u200b\uff0c\u200b\u53d1\u9001\u200b\u548c\u200b\u63a5\u53d7\u200b\u961f\u5217\u200b\u90fd\u200b\u662f\u200b\u8fd9\u91cc\u200b\u7684\u200b\u94fe\u8868\u200b\u7684\u200b\u7ed3\u6784\u200b\n    struct IQUEUEHEAD node;\n\n    // \u200b\u4f1a\u8bdd\u200b\u7f16\u53f7\u200b\uff0c\u200b\u540c\u4e00\u4e2a\u200b\u4f1a\u8bdd\u200b\u7f16\u53f7\u200b\u76f8\u540c\u200b\n    IUINT32 conv;\n\n    // \u200b\u6570\u636e\u5305\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8b6c\u5982\u200b DATA \u200b\u6216\u8005\u200b ACK\n    IUINT32 cmd;\n\n    // \u200b\u7531\u4e8e\u200b MTU \u200b\u7684\u200b\u9650\u5236\u200b\uff0c\u200b\u5927\u200b\u6570\u636e\u5305\u200b\u4f1a\u200b\u62c6\u200b\u5206\u6210\u200b\u591a\u4e2a\u200b\u5c0f\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u662f\u200b\u5c0f\u200b\u6570\u636e\u5305\u200b\u7684\u200b\u7f16\u53f7\u200b\n    IUINT32 frg\n\n    // \u200b\u6bcf\u4e2a\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u90fd\u200b\u4f1a\u200b\u9644\u5e26\u200b\u4e0a\u200b\u53d1\u9001\u200b\u65b9\u200b\u7684\u200b\u63a5\u53d7\u200b\u7a97\u53e3\u200b\u5927\u5c0f\u200b\n    IUINT32 wnd;\n\n    // \u200b\u53d1\u9001\u200b\u65f6\u95f4\u200b\uff0c\u200b\u5982\u679c\u200b\u662f\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u4f1a\u200b\u8bbe\u7f6e\u200b\u4e3a\u6e90\u200b\u6570\u636e\u5305\u200b\u7684\u200b ts\n    IUINT32 ts;\n\n    // \u200b\u552f\u4e00\u200b\u6807\u8bc6\u200b\u6570\u636e\u5305\u200b\u7684\u200b\u7f16\u53f7\u200b\n    IUINT32 sn;\n\n    // \u200b\u4ee3\u8868\u200b\u5c0f\u4e8e\u200b una \u200b\u7684\u200b\u6570\u636e\u5305\u200b\u90fd\u200b\u63a5\u6536\u200b\u6210\u529f\u200b\uff0c\u200b\u8ddf\u200b TCP \u200b\u542b\u4e49\u200b\u4e00\u81f4\u200b\uff1aoldest unacknowledged sequence number SND\n    IUINT32 una;\n\n    // \u200b\u6570\u636e\u200b\u957f\u5ea6\u200b\n    IUINT32 len;\n\n    // \u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u65f6\u95f4\u200b\n    IUINT32 resendts;\n\n    // \u200b\u4e0b\u6b21\u200b\u8d85\u65f6\u200b\u7b49\u5f85\u65f6\u95f4\u200b\n    IUINT32 rto;\n\n    // \u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\uff0c\u200b\u6536\u5230\u200b\u672c\u200b\u6570\u636e\u5305\u200b\u4e4b\u540e\u200b\u7684\u200b\u6570\u636e\u5305\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\u200b\u5927\u4e8e\u200b\u4e00\u5b9a\u200b\u6570\u91cf\u200b\u5c31\u200b\u89e6\u53d1\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\n    IUINT32 fastack;\n\n    // \u200b\u53d1\u9001\u200b\u6b21\u6570\u200b\n    IUINT32 xmit;\n\n    // \u200b\u6570\u636e\u200b\n    char data[1];\n};\n</code></pre> <p>\u200b\u770b\u200b\u5b8c\u200b <code>SEGMENT</code> \u200b\u7684\u200b\u6ce8\u91ca\u200b\uff0c\u200b\u5927\u81f4\u200b\u80fd\u200b\u770b\u51fa\u200b KCP \u200b\u7684\u200b\u6838\u5fc3\u200b\u4e5f\u200b\u662f\u200b\u4e00\u4e2a\u200b ARQ \u200b\u534f\u8bae\u200b\uff0c\u200b\u901a\u8fc7\u200b\u81ea\u52a8\u200b\u8d85\u65f6\u200b\u91cd\u200b\u4f20\u6765\u200b\u4fdd\u8bc1\u6570\u636e\u200b\u7684\u200b\u9001\u8fbe\u200b\u3002\u200b\u63a5\u7740\u200b\u518d\u200b\u6765\u200b\u770b\u770b\u200b KCP \u200b\u7ed3\u6784\u200b <code>KCPCB</code> \u200b\u7684\u200b\u5b9a\u4e49\u200b\uff1a</p>  KCP \u200b\u7ed3\u6784\u200b\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>//---------------------------------------------------------------------\n// IKCPCB\n//---------------------------------------------------------------------\nstruct IKCPCB\n{\n    // conv: \u200b\u4f1a\u8bdd\u200b\u7f16\u53f7\u200b\n    // mtu, mss: \u200b\u6700\u5927\u200b\u4f20\u8f93\u200b\u5355\u5143\u200b\uff0c\u200b\u6700\u5927\u200b\u62a5\u6587\u200b\u6bb5\u200b\u5927\u5c0f\u200b\n    // state: \u200b\u4f1a\u8bdd\u200b\u72b6\u6001\u200b\uff0c0 \u200b\u6709\u6548\u200b\uff0c-1 \u200b\u65ad\u5f00\u200b\n    IUINT32 conv, mtu, mss, state;\n\n    // snd_una: \u200b\u7b49\u5f85\u200b ACK \u200b\u7684\u200b\u5305\u200b\u7f16\u53f7\u200b\n    // snd_nxt: \u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u7b49\u5f85\u200b\u53d1\u9001\u200b\u7684\u200b\u6570\u636e\u5305\u200b\u7f16\u53f7\u200b\n    // rcv_nxt: \u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u7b49\u5f85\u200b\u63a5\u6536\u200b\u7684\u200b\u6570\u636e\u5305\u200b\u7f16\u53f7\u200b\n    IUINT32 snd_una, snd_nxt, rcv_nxt;\n\n    // ts_recent, ts_lastack: \u200b\u672a\u200b\u7528\u5230\u200b\n    // ssthresh: \u200b\u62e5\u585e\u200b\u63a7\u5236\u200b\u6162\u200b\u542f\u52a8\u200b\u9608\u503c\u200b\n    IUINT32 ts_recent, ts_lastack, ssthresh;\n\n    // rx_rto: rto (retransmission timeout)\uff0c\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u65f6\u95f4\u200b\n    // rx_rttval, rx_srtt, rx_minrto: \u200b\u8ba1\u7b97\u200b rto \u200b\u7684\u200b\u4e2d\u95f4\u200b\u53d8\u91cf\u200b\n    IINT32 rx_rttval, rx_srtt, rx_rto, rx_minrto;\n\n    // snd_wnd, rcv_wnd: \u200b\u6700\u5927\u200b\u53d1\u9001\u200b\u548c\u200b\u63a5\u6536\u200b\u7a97\u53e3\u200b\u5927\u5c0f\u200b\n    // rmt_wnd: remote wnd \uff0c\u200b\u5bf9\u7aef\u200b\u5269\u4f59\u200b\u63a5\u53d7\u200b\u7a97\u53e3\u200b\u5927\u5c0f\u200b\n    // cwnd: \u200b\u53ef\u200b\u53d1\u9001\u7a97\u53e3\u200b\u5927\u5c0f\u200b\n    // probe: \u200b\u662f\u5426\u200b\u8981\u200b\u53d1\u9001\u200b\u63a7\u5236\u200b\u62a5\u6587\u200b\u7684\u200b\u6807\u5fd7\u200b\n    IUINT32 snd_wnd, rcv_wnd, rmt_wnd, cwnd, probe;\n\n    // current: \u200b\u5f53\u524d\u200b\u65f6\u95f4\u200b\n    // interval: \u200b\u66f4\u65b0\u200b\u95f4\u9694\u200b\n    // ts_flush: \u200b\u4e0b\u6b21\u200b\u9700\u8981\u200b\u66f4\u65b0\u200b\u7684\u200b\u65f6\u95f4\u200b\n    // xmit: \u200b\u53d1\u9001\u200b\u5931\u8d25\u200b\u6b21\u6570\u200b\n    IUINT32 current, interval, ts_flush, xmit;\n\n    // \u200b\u5bf9\u5e94\u200b\u94fe\u8868\u200b\u7684\u200b\u957f\u5ea6\u200b\n    IUINT32 nrcv_buf, nsnd_buf;\n    IUINT32 nrcv_que, nsnd_que;\n\n    // nodelay: \u200b\u63a7\u5236\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u7684\u200b rto \u200b\u589e\u957f\u901f\u5ea6\u200b\n    // updated: \u200b\u662f\u5426\u200b\u8c03\u7528\u200b\u8fc7\u200b ikcp_update\n    IUINT32 nodelay, updated;\n\n    // ts_probe, probe_wait: \u200b\u5bf9\u7aef\u200b\u63a5\u6536\u200b\u7a97\u53e3\u200b\u957f\u65f6\u95f4\u200b\u4e3a\u200b 0 \u200b\u65f6\u200b\u4e3b\u52a8\u200b\u5b9a\u671f\u200b\u53d1\u8d77\u200b\u8be2\u95ee\u200b\n    IUINT32 ts_probe, probe_wait;\n\n    // deal_link: \u200b\u5bf9\u7aef\u200b\u957f\u65f6\u95f4\u200b\u65e0\u5e94\u7b54\u200b\n    // incr: \u200b\u53c2\u4e0e\u200b\u8ba1\u7b97\u200b\u53d1\u9001\u7a97\u53e3\u200b\u5927\u5c0f\u200b\n    IUINT32 dead_link, incr;\n\n    // queue: \u200b\u8ddf\u200b\u7528\u6237\u200b\u5c42\u200b\u63a5\u89e6\u200b\u7684\u200b\u6570\u636e\u5305\u200b\n    // buf: \u200b\u534f\u8bae\u200b\u7f13\u5b58\u200b\u7684\u200b\u6570\u636e\u5305\u200b\n    struct IQUEUEHEAD snd_queue;\n    struct IQUEUEHEAD rcv_queue;\n    struct IQUEUEHEAD snd_buf;\n    struct IQUEUEHEAD rcv_buf;\n\n    // \u200b\u9700\u8981\u200b\u53d1\u9001\u200b ack \u200b\u7684\u200b\u6570\u636e\u5305\u200b\u4fe1\u606f\u200b\n    IUINT32 *acklist;\n\n    // \u200b\u9700\u8981\u200b ack \u200b\u7684\u200b\u5305\u200b\u6570\u91cf\u200b\n    IUINT32 ackcount;\n\n    // acklist \u200b\u5185\u5b58\u5927\u5c0f\u200b\n    IUINT32 ackblock;\n\n    // \u200b\u7528\u6237\u200b\u5c42\u4f20\u200b\u8fdb\u6765\u200b\u7684\u200b\u6570\u636e\u200b\n    void *user;\n\n    // \u200b\u5b58\u653e\u200b\u4e00\u4e2a\u200b kcp \u200b\u5305\u200b\u7684\u200b\u7a7a\u95f4\u200b\n    char *buffer;\n\n    // \u200b\u89e6\u53d1\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u7684\u200b fastack \u200b\u6b21\u6570\u200b\n    int fastresend;\n\n    // \u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u6700\u5927\u200b\u6b21\u6570\u200b\n    int fastlimit;\n\n    // nocwnd: \u200b\u4e0d\u200b\u8003\u8651\u200b\u6162\u200b\u542f\u52a8\u200b\u7684\u200b\u53d1\u9001\u7a97\u53e3\u200b\u5927\u5c0f\u200b\n    // stream: \u200b\u6d41\u200b\u6a21\u5f0f\u200b\n    int nocwnd, stream;\n\n    // debug log\n    int logmask;\n\n    // \u200b\u53d1\u9001\u6570\u636e\u200b\u63a5\u53e3\u200b\n    int (*output)(const char *buf, int len, struct IKCPCB *kcp, void *user);\n\n    void (*writelog)(const char *log, struct IKCPCB *kcp, void *user);\n};\n</code></pre> <p>\u200b\u9010\u4e00\u200b\u628a\u200b KCP \u200b\u7ed3\u6784\u200b\u91cc\u9762\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u6ce8\u91ca\u200b\u4e0a\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u521d\u6b65\u200b\u611f\u89c9\u200b\u5230\u200b\uff0c\u200b\u6574\u5957\u200b KCP \u200b\u7684\u200b\u534f\u8bae\u200b\u4e0d\u592a\u200b\u590d\u6742\u200b\uff0c\u200b\u7ec6\u7ec6\u200b\u53bb\u200b\u5206\u6790\u200b\u4ee3\u7801\u200b\uff0c\u200b\u4f60\u200b\u6211\u200b\u90fd\u200b\u80fd\u200b\u8bfb\u61c2\u200b\u5e76\u200b\u7406\u89e3\u200b KCP \u200b\u534f\u8bae\u200b </p>","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#kcp-arq","title":"KCP \u200b\u7684\u200b ARQ \u200b\u5b9e\u73b0","text":"<p>KCP \u200b\u672c\u8d28\u200b\u4e0a\u200b\u662f\u200b\u4e00\u4e2a\u200b ARQ (Auto Repeat-reQuest\uff0c\u200b\u81ea\u52a8\u200b\u91cd\u4f20\u200b) \u200b\u534f\u8bae\u200b\uff0c\u200b\u6700\u200b\u57fa\u672c\u200b\u7684\u200b\u662f\u200b\u8981\u200b\u4fdd\u8bc1\u200b\u53ef\u9760\u200b\u7684\u200b\u4f20\u8f93\u200b\u3002\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5148\u200b\u6765\u200b\u5173\u6ce8\u200b KCP \u200b\u7684\u200b\u57fa\u672c\u200b ARQ \u200b\u90e8\u5206\u200b\uff0cKCP \u200b\u662f\u200b\u600e\u4e48\u200b\u5b9e\u73b0\u200b\u53ef\u9760\u200b\u4f20\u8f93\u200b\u7684\u200b\u3002</p> <p>ARQ \u200b\u987e\u540d\u601d\u4e49\u200b\uff0c\u200b\u5f53\u200b\u6211\u4eec\u200b\u8ba4\u4e3a\u200b\u5bf9\u7aef\u200b\u63a5\u6536\u200b\u6570\u636e\u5305\u200b\u5931\u8d25\u200b\u65f6\u200b\uff0c\u200b\u81ea\u52a8\u200b\u91cd\u65b0\u200b\u53d1\u9001\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u901a\u8fc7\u200b\u786e\u8ba4\u200b\u63a5\u6536\u200b\u548c\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u4e24\u4e2a\u200b\u673a\u5236\u200b\uff0c\u200b\u6765\u200b\u5b9e\u73b0\u200b\u53ef\u9760\u200b\u4f20\u8f93\u200b\u3002\u200b\u5177\u4f53\u200b\u7684\u200b\u4ee3\u7801\u200b\u5b9e\u73b0\u200b\u4e0a\u200b\uff0c KCP \u200b\u7ed9\u200b\u6bcf\u4e2a\u200b\u6570\u636e\u5305\u200b\uff08\u200b\u5c31\u662f\u200b\u4e0a\u200b\u4e00\u8282\u200b\u63d0\u5230\u200b\u7684\u200b <code>SEGMENT</code> \uff09 \u200b\u5206\u914d\u200b\u552f\u4e00\u200b\u7684\u200b <code>sn</code> \u200b\u6807\u8bc6\u7b26\u200b\uff0c\u200b\u4e00\u65e6\u200b\u5bf9\u7aef\u200b\u63a5\u6536\u200b\u5230\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u4f1a\u200b\u56de\u590d\u200b\u4e00\u4e2a\u200b ACK \u200b\u5305\u200b\uff08\u200b\u540c\u6837\u200b\u662f\u200b <code>SEGMENT</code>\uff09\uff0cACK \u200b\u5305\u200b\u7684\u200b <code>sn</code> \u200b\u8ddf\u200b\u63a5\u6536\u200b\u5230\u200b\u7684\u200b\u6570\u636e\u5305\u200b <code>sn</code> \u200b\u76f8\u540c\u200b\uff0c\u200b\u901a\u77e5\u200b\u63a5\u6536\u200b\u5230\u200b\u6b64\u200b\u6570\u636e\u5305\u200b\u5df2\u7ecf\u200b\u63a5\u6536\u200b\u6210\u529f\u200b\u3002<code>SEGMENT</code> \u200b\u4e0a\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200b <code>una</code> \u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u8868\u793a\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u671f\u5f85\u200b\u63a5\u6536\u200b\u7684\u200b\u6570\u636e\u5305\u200b\u7684\u200b\u7f16\u53f7\u200b\uff0c\u200b\u6362\u53e5\u8bdd\u8bf4\u200b\uff0c\u200b\u5373\u200b\u662f\u200b\u6240\u6709\u200b\u5728\u200b\u8be5\u200b\u7f16\u53f7\u200b\u4e4b\u524d\u200b\u7684\u200b\u6570\u636e\u5305\u200b\u90fd\u200b\u5df2\u7ecf\u200b\u63a5\u6536\u200b\u5b8c\u200b\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u4e00\u4e2a\u200b\u5168\u91cf\u200b\u7684\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u53d1\u9001\u200b\u7aef\u200b\u53ef\u4ee5\u200b\u66f4\u5feb\u200b\u7684\u200b\u66f4\u65b0\u200b\u53d1\u9001\u200b\u7f13\u51b2\u200b\u548c\u200b\u53d1\u9001\u7a97\u53e3\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8ddf\u8e2a\u200b KCP \u200b\u5305\u200b\u7684\u200b\u53d1\u9001\u200b\u548c\u200b\u63a5\u53d7\u200b\u4ee3\u7801\u200b\uff0c\u200b\u6765\u200b\u7406\u89e3\u200b\u6700\u200b\u57fa\u672c\u200b\u7684\u200b ARQ \u200b\u5b9e\u73b0\u200b\uff1a</p>","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#_1","title":"\u53d1\u9001","text":"<p>\u200b\u53d1\u9001\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u662f\u200b <code>ikcp_send</code> -&gt; <code>ikcp_update</code> -&gt; <code>ikcp_output</code>\uff0c\u200b\u4e0a\u5c42\u200b\u8c03\u7528\u200b <code>ikcp_send</code> \u200b\u628a\u200b\u6570\u636e\u200b\u4f20\u7ed9\u200b KCP\uff0cKCP \u200b\u5728\u200b <code>ikcp_update</code> \u200b\u4e2d\u200b\u5904\u7406\u200b\u6570\u636e\u200b\u7684\u200b\u53d1\u9001\u200b\u3002</p>  ikcp_send\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>//---------------------------------------------------------------------\n// \u200b\u53d1\u9001\u6570\u636e\u200b\u63a5\u53e3\u200b\uff0c\u200b\u7528\u6237\u200b\u8c03\u7528\u200b ikcp_send \u200b\u6765\u200b\u8ba9\u200b kcp \u200b\u53d1\u9001\u6570\u636e\u200b\n// user/upper level send, returns below zero for error\n//---------------------------------------------------------------------\nint ikcp_send(ikcpcb *kcp, const char *buffer, int len)\n{\n    IKCPSEG *seg;\n    int count, i;\n\n    // mss \u200b\u4e0d\u80fd\u200b\u5c0f\u4e8e\u200b1\n    assert(kcp-&gt;mss &gt; 0);\n    if (len &lt; 0) return -1;\n\n    // append to previous segment in streaming mode (if possible)\n    if (kcp-&gt;stream != 0) {\n        // \u200b\u5904\u7406\u200b\u6d41\u200b\u6a21\u5f0f\u200b\n        // ......\n    }\n\n    // \u200b\u8ba1\u7b97\u200b\u5206\u5305\u200b\uff0c\u200b\u5982\u679c\u200b\u6570\u636e\u200b\u957f\u5ea6\u200b len \u200b\u5927\u4e8e\u200b mss\uff0c\u200b\u9700\u8981\u200b\u5206\u6210\u200b\u591a\u4e2a\u200b\u5305\u200b\u53d1\u9001\u200b\uff0c\u200b\u5bf9\u7aef\u200b\u63a5\u53d7\u200b\u5230\u200b\u4e4b\u540e\u200b\u518d\u200b\u62fc\u200b\u8d77\u6765\u200b\n    if (len &lt;= (int)kcp-&gt;mss) count = 1;\n    else count = (len + kcp-&gt;mss - 1) / kcp-&gt;mss;\n\n    if (count &gt;= (int)IKCP_WND_RCV) return -2;\n\n    if (count == 0) count = 1;\n\n    // \u200b\u5206\u5305\u200b\n    for (i = 0; i &lt; count; i++) {\n        // \u200b\u8ba1\u7b97\u200b\u5305\u200b\u7684\u200b\u6570\u636e\u200b\u957f\u5ea6\u200b\uff0c\u200b\u5e76\u200b\u5206\u914d\u200b\u5bf9\u5e94\u200b\u7684\u200b seg \u200b\u7ed3\u6784\u200b\n        int size = len &gt; (int)kcp-&gt;mss ? (int)kcp-&gt;mss : len;\n        seg = ikcp_segment_new(kcp, size);\n        assert(seg);\n        if (seg == NULL) {\n            return -2;\n        }\n\n        // \u200b\u8bbe\u7f6e\u200b seg \u200b\u7684\u200b \u200b\u6570\u636e\u200b\u4fe1\u606f\u200b\uff0cfrg \u200b\u8868\u793a\u200b\u5206\u5305\u200b\u7f16\u53f7\u200b\n        if (buffer &amp;&amp; len &gt; 0) {\n            memcpy(seg-&gt;data, buffer, size);\n        }\n        seg-&gt;len = size;\n        seg-&gt;frg = (kcp-&gt;stream == 0)? (count - i - 1) : 0;\n\n        // \u200b\u52a0\u200b\u5230\u200b snd_queue \u200b\u7684\u200b\u672b\u5c3e\u200b\uff0cnsnd_qua \u200b\u52a0\u4e00\u200b\n        iqueue_init(&amp;seg-&gt;node);\n        iqueue_add_tail(&amp;seg-&gt;node, &amp;kcp-&gt;snd_queue);\n        kcp-&gt;nsnd_que++;\n        if (buffer) {\n            buffer += size;\n        }\n        len -= size;\n    }\n\n    return 0;\n}\n</code></pre> <p><code>ikcp_send</code> \u200b\u662f\u200b\u7531\u200b KCP \u200b\u7684\u200b\u4e0a\u5c42\u200b\u6765\u200b\u8c03\u7528\u200b\u7684\u200b\u53d1\u9001\u6570\u636e\u200b\u63a5\u53e3\u200b\uff0c\u200b\u6240\u6709\u200b\u8ba9\u200b KCP \u200b\u53d1\u9001\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u90fd\u200b\u5e94\u8be5\u200b\u901a\u8fc7\u200b\u8fd9\u4e2a\u200b\u63a5\u53e3\u200b\u3002 <code>ikcp_send</code> \u200b\u505a\u200b\u7684\u200b\u4e8b\u60c5\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u4e3b\u8981\u200b\u5c31\u662f\u200b\u628a\u200b\u6570\u636e\u200b\uff0c\u200b\u6839\u636e\u200b <code>kcp-&gt;mss</code> \uff08\u200b\u4e00\u4e2a\u5305\u200b\u6700\u5927\u200b\u6570\u636e\u200b\u957f\u5ea6\u200b\uff09\u200b\u6765\u200b\u5206\u6210\u200b\u591a\u4e2a\u200b\u5305\u200b\uff0c\u200b\u5e76\u200b\u8bbe\u7f6e\u200b\u5206\u5305\u200b\u7f16\u53f7\u200b\uff0c\u200b\u6700\u540e\u200b\u653e\u5230\u200b\u53d1\u9001\u200b\u94fe\u8868\u200b <code>snd_queue</code> \u200b\u7684\u200b\u672b\u5c3e\u200b\u3002\u200b\u6d41\u200b\u6a21\u5f0f\u200b\u5c31\u662f\u200b\u628a\u200b\u591a\u6b21\u200b\u8c03\u7528\u200b <code>ikcp_send</code> \u200b\u7684\u200b\u6570\u636e\u200b\u90fd\u200b\u770b\u6210\u200b\u4e00\u4e2a\u200b\u6d41\u200b\uff0c\u200b\u4f1a\u5148\u200b\u81ea\u52a8\u200b\u586b\u5145\u200b\u672a\u6ee1\u200b\u7684\u200b <code>SEGMENT</code> \u200b\u518d\u200b\u5206\u914d\u200b\u65b0\u200b\u7684\u200b\uff0c\u200b\u8be6\u7ec6\u200b\u5b9e\u73b0\u200b\u672c\u6587\u200b\u4e0d\u200b\u8ba8\u8bba\u200b\uff0c\u200b\u611f\u5174\u8da3\u200b\u7684\u200b\uff0c\u200b\u76f8\u4fe1\u200b\u770b\u200b\u5b8c\u200b\u672c\u6587\u200b\uff0c\u200b\u518d\u200b\u5bf9\u5e94\u200b\u770b\u770b\u200b\u4ee3\u7801\u200b\u5c31\u200b\u80fd\u200b\u7406\u89e3\u200b\u3002</p> <p><code>ikcp_send</code> \u200b\u8c03\u7528\u200b\u5b8c\u6210\u200b\u4e4b\u540e\u200b\uff0c\u200b\u6570\u636e\u200b\u653e\u5728\u200b\u7684\u200b KCP \u200b\u7684\u200b <code>snd_queue</code> \u200b\u4e2d\u200b\uff0c\u200b\u90a3\u4e48\u200b\u540e\u9762\u200b KCP \u200b\u9700\u8981\u200b\u627e\u4e2a\u200b\u65f6\u673a\u200b\uff0c\u200b\u628a\u200b\u5f85\u200b\u53d1\u9001\u200b\u7684\u200b\u6570\u636e\u200b\u53d1\u9001\u200b\u51fa\u53bb\u200b\uff0c\u200b\u8fd9\u5757\u200b\u4ee3\u7801\u200b\u90fd\u200b\u653e\u5728\u200b <code>ikcp_update</code> \u200b\u548c\u200b <code>ikcp_flush</code> \u200b\u91cc\u9762\u200b\uff1a</p>  ikcp_update\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>//---------------------------------------------------------------------\n// ikcp_update \u200b\u662f\u200b\u7ed9\u200b\u4e0a\u5c42\u200b\u5b9a\u671f\u200b\u8c03\u7528\u200b\u7684\u200b\u63a5\u53e3\u200b\uff0c\u200b\u7528\u6765\u200b\u66f4\u65b0\u200b kcp \u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u53d1\u9001\u6570\u636e\u200b\n// update state (call it repeatedly, every 10ms-100ms), or you can ask \n// ikcp_check when to call it again (without ikcp_input/_send calling).\n// 'current' - current timestamp in millisec. \n//---------------------------------------------------------------------\nvoid ikcp_update(ikcpcb *kcp, IUINT32 current)\n{\n    IINT32 slap;\n\n    kcp-&gt;current = current;\n\n    // ikcp_flush \u200b\u4f1a\u200b\u68c0\u67e5\u200b\u8fd9\u4e2a\u200b\uff0c\u200b\u4e0a\u5c42\u200b\u5fc5\u987b\u200b\u8c03\u7528\u200b\u8fc7\u200b ikcp_update \u200b\u624d\u80fd\u200b\u8c03\u7528\u200b ikcp_flush\uff0c\u200b\u5efa\u8bae\u200b\u53ea\u200b\u4f7f\u7528\u200b ikcp_update\n    if (kcp-&gt;updated == 0) {\n        kcp-&gt;updated = 1;\n        kcp-&gt;ts_flush = kcp-&gt;current;\n    }\n\n    slap = _itimediff(kcp-&gt;current, kcp-&gt;ts_flush);\n\n    if (slap &gt;= 10000 || slap &lt; -10000) {\n        kcp-&gt;ts_flush = kcp-&gt;current;\n        slap = 0;\n    }\n\n    if (slap &gt;= 0) {\n        // \u200b\u4e0b\u6b21\u200b flush \u200b\u7684\u200b\u65f6\u95f4\u200b\n        kcp-&gt;ts_flush += kcp-&gt;interval;\n        if (_itimediff(kcp-&gt;current, kcp-&gt;ts_flush) &gt;= 0) {\n            kcp-&gt;ts_flush = kcp-&gt;current + kcp-&gt;interval;\n        }\n        ikcp_flush(kcp);\n    }\n}\n</code></pre> <p><code>ikcp_update</code> \u200b\u505a\u200b\u7684\u200b\u4e8b\u60c5\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u5224\u65ad\u200b\u4e00\u4e0b\u200b <code>ts_flush</code> \u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\u200b\u7b26\u5408\u6761\u4ef6\u200b\u5219\u200b\u8c03\u7528\u200b <code>ikcp_flush</code>\uff0c\u200b\u4e3b\u8981\u200b\u7684\u200b\u5904\u7406\u200b\u903b\u8f91\u200b\u90fd\u200b\u5728\u200b <code>ikcp_flush</code> \u200b\u91cc\u9762\u200b\u4e86\u200b\uff0c\u200b\u56e0\u4e3a\u200b <code>ikcp_flush</code> \u200b\u5185\u5bb9\u200b\u590d\u6742\u200b\u4e00\u70b9\u200b\uff0c\u200b\u6211\u4eec\u200b\u76ee\u524d\u200b\u53ea\u200b\u5173\u6ce8\u200b\u8ddf\u200b ARQ \u200b\u53d1\u9001\u200b\u76f8\u5173\u200b\u7684\u200b\u90e8\u5206\u200b\uff1a</p>  \u200b\u53d1\u9001\u6570\u636e\u200b\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>//---------------------------------------------------------------------\n// ikcp_flush\n//---------------------------------------------------------------------\nvoid ikcp_flush(ikcpcb *kcp)\n{\n    IUINT32 current = kcp-&gt;current;\n\n    // buffer \u200b\u662f\u200b\u8981\u200b\u4f20\u7ed9\u200b ikcp_output \u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b 3 \u200b\u500d\u200b\u6570\u636e\u5305\u200b\u5927\u5c0f\u200b\n    char *buffer = kcp-&gt;buffer;\n    char *ptr = buffer;\n    int count, size, i;\n    IUINT32 resent, cwnd;\n    IUINT32 rtomin;\n    struct IQUEUEHEAD *p;\n    int change = 0;\n    int lost = 0;\n    IKCPSEG seg;\n\n    // 'ikcp_update' haven't been called.\n    if (kcp-&gt;updated == 0) return;\n\n    seg.conv = kcp-&gt;conv;\n    seg.cmd = IKCP_CMD_ACK;\n    seg.frg = 0;\n\n    // seg.wnd \u200b\u662f\u200b\u8868\u793a\u200b\u5f53\u524d\u200b\u53ef\u200b\u63a5\u6536\u200b\u7a97\u53e3\u200b\u5927\u5c0f\u200b\n    seg.wnd = ikcp_wnd_unused(kcp);\n    seg.una = kcp-&gt;rcv_nxt;\n    seg.len = 0;\n    seg.sn = 0;\n    seg.ts = 0;\n\n    // \u200b\u53d1\u9001\u200b ack\n    // \u200b\u8ba1\u7b97\u200b \u200b\u53d1\u9001\u7a97\u53e3\u200b\n    //...\n\n    // \u200b\u628a\u200b\u6570\u636e\u5305\u200b\u4ece\u200b snd_queue \u200b\u79fb\u52a8\u200b\u5230\u200b snd_buf\n    // \u200b\u79fb\u52a8\u200b\u662f\u200b\u9700\u8981\u200b\u6ee1\u8db3\u200b \u200b\u53d1\u9001\u7a97\u53e3\u200b \u200b\u5927\u5c0f\u200b\uff0c\u200b\u53d1\u9001\u7a97\u53e3\u200b\u6ee1\u200b\u4e86\u200b\uff0c\u200b\u5c31\u200b\u505c\u6b62\u200b\u79fb\u52a8\u200b\n    // \u200b\u653e\u5728\u200b snd_buf \u200b\u7684\u200b\u91cc\u9762\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u5c31\u662f\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8c03\u7528\u200b ikcp_output \u200b\u7ed9\u200b\u5bf9\u200b\u7aef\u200b\u53d1\u9001\u200b\u7684\u200b\u6570\u636e\u200b\n    while (_itimediff(kcp-&gt;snd_nxt, kcp-&gt;snd_una + cwnd) &lt; 0) {\n        IKCPSEG *newseg;\n        if (iqueue_is_empty(&amp;kcp-&gt;snd_queue)) break;\n\n        newseg = iqueue_entry(kcp-&gt;snd_queue.next, IKCPSEG, node);\n\n        iqueue_del(&amp;newseg-&gt;node);\n        iqueue_add_tail(&amp;newseg-&gt;node, &amp;kcp-&gt;snd_buf);\n        kcp-&gt;nsnd_que--;\n        kcp-&gt;nsnd_buf++;\n\n        newseg-&gt;conv = kcp-&gt;conv;\n        newseg-&gt;cmd = IKCP_CMD_PUSH;\n        newseg-&gt;wnd = seg.wnd;\n        newseg-&gt;ts = current;\n\n        // seg \u200b\u552f\u4e00\u200b\u5e8f\u53f7\u200b\uff0c\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u4e00\u4e2a\u200b\u9012\u589e\u200b\u7684\u200b kcp-&gt;snd_nxt\n        newseg-&gt;sn = kcp-&gt;snd_nxt++;\n\n        // una \u200b\u5728\u200b\u8fd9\u91cc\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u901a\u77e5\u200b\u5bf9\u7aef\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u7b49\u5f85\u200b\u63a5\u6536\u200b\u7684\u200b\u5305\u200b\u5e8f\u53f7\u200b\n        newseg-&gt;una = kcp-&gt;rcv_nxt;\n        newseg-&gt;resendts = current;\n        newseg-&gt;rto = kcp-&gt;rx_rto;\n        newseg-&gt;fastack = 0;\n        newseg-&gt;xmit = 0;\n    }\n\n    // \u200b\u8ba1\u7b97\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u6807\u5fd7\u200b\uff0c\u200b\u8d85\u65f6\u200b\u7b49\u5f85\u65f6\u95f4\u200b\n    // ...\n\n    // \u200b\u53d1\u9001\u200b snd_buf\n    for (p = kcp-&gt;snd_buf.next; p != &amp;kcp-&gt;snd_buf; p = p-&gt;next) {\n        IKCPSEG *segment = iqueue_entry(p, IKCPSEG, node);\n        int needsend = 0;\n        if (segment-&gt;xmit == 0) {\n            // \u200b\u9996\u6b21\u200b\u53d1\u9001\u200b\n            // set-&gt;xmit \u200b\u8868\u793a\u200b\u53d1\u9001\u200b\u6b21\u6570\u200b\n            // resendts \u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u7684\u200b\u7b49\u5f85\u65f6\u95f4\u200b\n            needsend = 1;\n            segment-&gt;xmit++;\n            segment-&gt;rto = kcp-&gt;rx_rto;\n            segment-&gt;resendts = current + segment-&gt;rto + rtomin;\n        }\n        else if (_itimediff(current, segment-&gt;resendts) &gt;= 0) {\n            // \u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\n            // ...\n        }\n        else if (segment-&gt;fastack &gt;= resent) {\n            // \u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\n            // ...\n        }\n\n        if (needsend) {\n            int need;\n            segment-&gt;ts = current;\n            segment-&gt;wnd = seg.wnd;\n            segment-&gt;una = kcp-&gt;rcv_nxt;\n\n            size = (int)(ptr - buffer);\n            need = IKCP_OVERHEAD + segment-&gt;len;\n\n            // \u200b\u6bcf\u5f53\u200b buffer \u200b\u4e2d\u200b\u7684\u200b\u6570\u636e\u200b\u8d85\u8fc7\u200b mtu \uff0c\u200b\u90a3\u200b\u5c31\u200b\u5148\u200b\u53d1\u51fa\u200b\u53bb\u200b\uff0c\u200b\u5c3d\u91cf\u907f\u514d\u200b\u5e95\u5c42\u200b\u518d\u200b\u5206\u5305\u200b\n            if (size + need &gt; (int)kcp-&gt;mtu) {\n                ikcp_output(kcp, buffer, size);\n                ptr = buffer;\n            }\n\n            // \u200b\u628a\u200b seg \u200b\u63a7\u5236\u6570\u636e\u200b\u590d\u5236\u5230\u200b buffer \u200b\u4e0a\u200b\uff0ckcp \u200b\u81ea\u5df1\u200b\u6765\u200b\u5904\u7406\u200b\u5927\u5c0f\u200b\u7aef\u200b\u95ee\u9898\u200b\n            ptr = ikcp_encode_seg(ptr, segment);\n\n            // \u200b\u518d\u200b\u590d\u5236\u200b\u6570\u636e\u200b\n            if (segment-&gt;len &gt; 0) {\n                memcpy(ptr, segment-&gt;data, segment-&gt;len);\n                ptr += segment-&gt;len;\n            }\n\n\n            if (segment-&gt;xmit &gt;= kcp-&gt;dead_link) {\n                kcp-&gt;state = (IUINT32)-1;\n            }\n        }\n    }\n\n    // flash remain segments\n    size = (int)(ptr - buffer);\n    if (size &gt; 0) {\n        ikcp_output(kcp, buffer, size);\n    }\n\n    // \u200b\u8ba1\u7b97\u200b ssthresh\uff0c\u200b\u66f4\u65b0\u200b\u6162\u200b\u542f\u52a8\u200b\u7a97\u53e3\u200b\n    // ...\n}\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u76ee\u524d\u200b\u53ea\u200b\u5173\u6ce8\u200b <code>ikcp_flush</code> \u200b\u91cc\u9762\u200b\u6709\u5173\u200b\u53d1\u9001\u6570\u636e\u200b\u7684\u200b\u903b\u8f91\u200b\uff1a</p> <ul> <li>\u200b\u9996\u5148\u200b KCP \u200b\u4f1a\u200b\u6839\u636e\u200b\u5bf9\u200b\u7aef\u7684\u200b\u63a5\u6536\u200b\u7a97\u53e3\u200b\u5927\u5c0f\u200b\uff0c\u200b\u628a\u200b <code>snd_queue</code> \u200b\u4e0a\u200b\u7684\u200b\u6570\u636e\u200b\u79fb\u52a8\u200b\u5230\u200b <code>snd_buf</code> \u200b\u4e0a\u9762\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u79fb\u52a8\u200b\u6570\u91cf\u200b\u7684\u200b\u516c\u5f0f\u200b\u662f\u200b <code>num = snd_nxt - (snd_una + cwnd)</code>\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\uff1a\u200b\u5df2\u200b\u53d1\u9001\u200b\u6210\u529f\u200b\u7684\u200b\u6700\u5927\u200b\u5305\u200b\u5e8f\u53f7\u200b <code>snd_una</code> \u200b\u52a0\u4e0a\u200b \u200b\u6ed1\u52a8\u200b\u7a97\u53e3\u200b\u5927\u5c0f\u200b <code>cwnd</code> \u200b\u5927\u4e8e\u200b \u200b\u4e0b\u4e2a\u200b\u5f85\u200b\u53d1\u9001\u200b\u7684\u200b\u5305\u200b\u5e8f\u53f7\u200b<code>snd_nxt</code>\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u7ee7\u7eed\u200b\u518d\u200b\u53d1\u9001\u200b\u65b0\u200b\u7684\u200b\u6570\u636e\u5305\u200b\u3002\u200b\u79fb\u52a8\u200b <code>SEG</code> \u200b\u7684\u200b\u540c\u65f6\u200b\uff0c\u200b\u8bbe\u7f6e\u200b\u63a7\u5236\u200b\u5b57\u200b\u6bb5\u200b\u3002</li> </ul> <ul> <li>\u200b\u904d\u5386\u200b <code>snd_buf</code>\uff0c\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u53d1\u9001\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u5219\u200b\u628a\u200b\u6570\u636e\u200b\u590d\u5236\u5230\u200b <code>buffer</code> \u200b\u4e0a\u200b\uff0c\u200b\u590d\u5236\u200b\u7684\u200b\u540c\u65f6\u200b\u7528\u200b <code>ikcp_encode_seg</code> \u200b\u5904\u7406\u200b\u63a7\u5236\u200b\u5b57\u200b\u6bb5\u200b\u6570\u636e\u200b\u7684\u200b\u5927\u5c0f\u200b\u7aef\u200b\u95ee\u9898\u200b\u3002</li> </ul> <ul> <li>\u200b\u6700\u540e\u200b\u8c03\u7528\u200b <code>ikcp_output</code> \u200b\u628a\u200b <code>buffer</code> \u200b\u4e0a\u200b\u7684\u200b\u6570\u636e\u200b\u53d1\u9001\u200b\u51fa\u53bb\u200b</li> </ul> <p>\u200b\u81f3\u6b64\u200b\uff0c KCP \u200b\u5b8c\u6210\u200b\u6570\u636e\u200b\u7684\u200b\u53d1\u9001\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#_2","title":"\u63a5\u6536","text":"<p>\u200b\u63a5\u6536\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u662f\u200b\u8ddf\u200b\u53d1\u9001\u200b\u76f8\u53cd\u200b\u7684\u200b\uff1a<code>ikcp_input</code> -&gt; <code>ikcp_update</code> -&gt; <code>ikcp_recv</code>\uff0c\u200b\u7528\u6237\u200b\u63a5\u6536\u200b\u5230\u200b\u7f51\u7edc\u200b\u4e0a\u200b\u7684\u200b\u6570\u636e\u200b\u4e4b\u540e\u200b\uff0c\u200b\u9700\u8981\u200b\u8c03\u7528\u200b <code>ikcp_input</code> \u200b\u4f20\u7ed9\u200b KCP \u200b\u89e3\u6790\u200b\uff0c\u200b\u8c03\u7528\u200b <code>ikcp_update</code> \u200b\u7684\u200b\u65f6\u5019\u200b\u4f1a\u200b\u7ed9\u200b\u53d1\u9001\u200b\u7aef\u200b\u56de\u590d\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u4e0a\u5c42\u200b\u901a\u8fc7\u200b\u8c03\u7528\u200b <code>ikcp_recv</code> \u200b\u6765\u200b\u63a5\u6536\u200b KCP \u200b\u89e3\u6790\u200b\u4e4b\u540e\u200b\u7684\u200b\u6570\u636e\u200b\u3002</p>  \u200b\u63a5\u6536\u6570\u636e\u200b\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>//---------------------------------------------------------------------\n// input data\n//---------------------------------------------------------------------\nint ikcp_input(ikcpcb *kcp, const char *data, long size)\n{\n    IUINT32 prev_una = kcp-&gt;snd_una;\n    IUINT32 maxack = 0, latest_ts = 0;\n    int flag = 0;\n\n    // \u200b\u5408\u6cd5\u6027\u68c0\u67e5\u200b\n    if (data == NULL || (int)size &lt; (int)IKCP_OVERHEAD) return -1;\n\n    // data \u200b\u53ef\u80fd\u200b\u662f\u200b\u591a\u4e2a\u200b KCP \u200b\u5305\u200b\uff0c\u200b\u5faa\u73af\u200b\u5904\u7406\u200b\n    while (1) {\n        IUINT32 ts, sn, len, una, conv;\n        IUINT16 wnd;\n        IUINT8 cmd, frg;\n        IKCPSEG *seg;\n\n        // \u200b\u4e0d\u591f\u200b\u4e00\u4e2a\u200b KCP \u200b\u5305\u200b\uff0c\u200b\u9000\u51fa\u200b\n        if (size &lt; (int)IKCP_OVERHEAD) break;\n\n        // \u200b\u5148\u200b\u628a\u200b\u63a7\u5236\u200b\u5b57\u200b\u6bb5\u200b\u89e3\u6790\u200b\u51fa\u6765\u200b\n        data = ikcp_decode32u(data, &amp;conv);\n        if (conv != kcp-&gt;conv) return -1;\n\n        data = ikcp_decode8u(data, &amp;cmd);\n        data = ikcp_decode8u(data, &amp;frg);\n        data = ikcp_decode16u(data, &amp;wnd);\n        data = ikcp_decode32u(data, &amp;ts);\n        data = ikcp_decode32u(data, &amp;sn);\n        data = ikcp_decode32u(data, &amp;una);\n        data = ikcp_decode32u(data, &amp;len);\n\n        size -= IKCP_OVERHEAD;\n\n        if ((long)size &lt; (long)len || (int)len &lt; 0) return -2;\n\n        // \u200b\u6570\u636e\u5305\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\n        if (cmd != IKCP_CMD_PUSH &amp;&amp; cmd != IKCP_CMD_ACK &amp;&amp;\n            cmd != IKCP_CMD_WASK &amp;&amp; cmd != IKCP_CMD_WINS) \n            return -3;\n\n        kcp-&gt;rmt_wnd = wnd;\n\n        // \u200b\u8fd9\u91cc\u200b\u7684\u200b una \u200b\u662f\u200b\u53d1\u9001\u200b\u65b9\u200b\u7684\u200b kcp-&gt;rcv_nxt\uff0c\u200b\u6839\u636e\u200b\u8fd9\u4e2a\u200b\u6570\u636e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53bb\u6389\u200b\u5df2\u200b\u786e\u8ba4\u200b\u63a5\u6536\u200b\u7684\u200b\u6570\u636e\u5305\u200b\n        ikcp_parse_una(kcp, una);\n        // \u200b\u53bb\u6389\u200b\u5df2\u200b\u786e\u8ba4\u200b\u63a5\u6536\u200b\u7684\u200b\u5305\u540e\u200b\uff0c\u200b\u66f4\u65b0\u200b snd_una \u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8981\u200b\u53d1\u9001\u200b\u7684\u200b\u5e8f\u53f7\u200b\n        ikcp_shrink_buf(kcp);\n\n        if (cmd == IKCP_CMD_ACK) {\n            // ack \u200b\u5305\u200b\n            // ...\n        }\n        else if (cmd == IKCP_CMD_PUSH) {\n            // \u200b\u6570\u636e\u5305\u200b\n            // \u200b\u5982\u679c\u200b\u63a5\u6536\u200b\u5230\u200b\u7684\u200b\u6570\u636e\u5305\u200b\u5e8f\u53f7\u200b sn\uff0c\u200b\u5728\u200b\u63a5\u6536\u200b\u7a97\u53e3\u200b\u5185\u200b\uff0c\u200b\u5219\u200b\u6b63\u5e38\u200b\u5904\u7406\u200b\uff0c\u200b\u5426\u5219\u200b\u76f4\u63a5\u200b\u4e22\u5f03\u200b\uff0c\u200b\u7b49\u200b\u91cd\u4f20\u200b\n            if (_itimediff(sn, kcp-&gt;rcv_nxt + kcp-&gt;rcv_wnd) &lt; 0) {\n\n                // \u200b\u63a5\u6536\u200b\u5230\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u90fd\u200b\u8981\u200b\u56de\u200b\u4e00\u4e2a\u200b ack \u200b\u5305\u200b\uff0c\u200b\u8bb0\u5f55\u4e0b\u6765\u200b\n                ikcp_ack_push(kcp, sn, ts);\n\n                // \u200b\u63a5\u6536\u200b\u7684\u200b\u6570\u636e\u200b\u8c03\u7528\u200b ikcp_parse_data \u200b\u5904\u7406\u200b\n                if (_itimediff(sn, kcp-&gt;rcv_nxt) &gt;= 0) {\n                    seg = ikcp_segment_new(kcp, len);\n                    seg-&gt;conv = conv;\n                    seg-&gt;cmd = cmd;\n                    seg-&gt;frg = frg;\n                    seg-&gt;wnd = wnd;\n                    seg-&gt;ts = ts;\n                    seg-&gt;sn = sn;\n                    seg-&gt;una = una;\n                    seg-&gt;len = len;\n\n                    if (len &gt; 0) {\n                        memcpy(seg-&gt;data, data, len);\n                    }\n\n                    ikcp_parse_data(kcp, seg);\n                }\n            }\n        }\n        else if (cmd == IKCP_CMD_WASK) {\n            // \u200b\u67e5\u8be2\u200b\u7a97\u53e3\u200b\u5305\u200b\n            // ...\n        }\n        else if (cmd == IKCP_CMD_WINS) {\n            // \u200b\u67e5\u8be2\u200b\u7a97\u53e3\u200b\u7684\u200b\u56de\u590d\u200b\u5305\u200b\n            // ...\n        }\n        else {\n            return -3;\n        }\n\n        data += len;\n        size -= len;\n    }\n\n    // \u200b\u5904\u7406\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u903b\u8f91\u200b\n    // ...\n\n    // \u200b\u66f4\u65b0\u200b\u53d1\u9001\u7a97\u53e3\u200b\n    // ...\n\n    return 0;\n}\n</code></pre> <p><code>ikcp_input</code> \u200b\u5faa\u73af\u200b\u5904\u7406\u200b\u6bcf\u200b\u4e00\u4e2a\u200b <code>SEG</code> \u200b\u5305\u200b\uff0c\u200b\u5148\u200b\u68c0\u67e5\u200b\u6570\u636e\u5305\u200b\u7684\u200b\u5408\u6cd5\u6027\u200b\u548c\u200b\u7c7b\u578b\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6bcf\u4e2a\u200b\u6570\u636e\u5305\u200b\u90fd\u200b\u4f1a\u200b\u5e26\u4e0a\u200b <code>una</code>\uff0c\u200b\u5b58\u653e\u200b\u7684\u200b\u662f\u200b\u53d1\u9001\u200b\u7aef\u200b\u7b49\u5f85\u200b\u63a5\u6536\u200b\u7684\u200b\u5305\u200b\u5e8f\u53f7\u200b\uff0c\u200b\u9700\u8981\u200b\u5c0f\u4e8e\u200b <code>una</code> \u200b\u7684\u200b\u5305\u5bf9\u200b\u7aef\u200b\u90fd\u200b\u5df2\u7ecf\u200b\u63a5\u53d7\u200b\u6210\u529f\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u628a\u200b <code>snd_buff</code> \u200b\u4e2d\u200b\u9700\u8981\u200b\u5c0f\u4e8e\u200b <code>una</code> \u200b\u7684\u200b\u90fd\u200b\u5220\u6389\u200b\uff0c\u200b\u5e76\u200b\u66f4\u65b0\u200b <code>snd_nxt</code>\uff0c\u200b\u8fd9\u200b\u4e00\u90e8\u5206\u200b\u7531\u200b <code>ikcp_parse_una</code> \u200b\u548c\u200b <code>ikcp_shrink_buf</code> \u200b\u6765\u200b\u5904\u7406\u200b\u3002\u200b\u63a5\u6536\u200b\u5230\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u90fd\u200b\u9700\u8981\u200b\u56de\u590d\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u7531\u200b <code>ikcp_ack_push</code> \u200b\u8bb0\u5f55\u4e0b\u6765\u200b\uff0c\u200b\u6700\u540e\u200b\u8c03\u7528\u200b <code>ikcp_parse_data</code> \u200b\u5904\u7406\u200b\u6570\u636e\u200b\u3002</p>  \u200b\u89e3\u6790\u200b\u6570\u636e\u200b\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>void ikcp_parse_data(ikcpcb *kcp, IKCPSEG *newseg)\n{\n    struct IQUEUEHEAD *p, *prev;\n    IUINT32 sn = newseg-&gt;sn;\n    int repeat = 0;\n\n    // \u200b\u5e8f\u53f7\u200b\u68c0\u67e5\u200b\n    if (_itimediff(sn, kcp-&gt;rcv_nxt + kcp-&gt;rcv_wnd) &gt;= 0 ||\n        _itimediff(sn, kcp-&gt;rcv_nxt) &lt; 0) {\n        ikcp_segment_delete(kcp, newseg);\n        return;\n    }\n\n    // \u200b\u627e\u51fa\u200b newseg \u200b\u5e94\u8be5\u200b\u653e\u7f6e\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u63a5\u6536\u200b\u5230\u200b\u7684\u200b seg \u200b\u53ef\u80fd\u200b\u662f\u200b\u4e71\u5e8f\u200b\u7684\u200b\n    for (p = kcp-&gt;rcv_buf.prev; p != &amp;kcp-&gt;rcv_buf; p = prev) {\n        IKCPSEG *seg = iqueue_entry(p, IKCPSEG, node);\n        prev = p-&gt;prev;\n        if (seg-&gt;sn == sn) {\n            // \u200b\u91cd\u590d\u200b\u6536\u5230\u200b\n            repeat = 1;\n            break;\n        }\n        if (_itimediff(sn, seg-&gt;sn) &gt; 0) {\n            break;\n        }\n    }\n\n    // \u200b\u628a\u200b newseg \u200b\u653e\u5230\u200b rcv_buf \u200b\u6b63\u786e\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\n    if (repeat == 0) {\n        iqueue_init(&amp;newseg-&gt;node);\n        iqueue_add(&amp;newseg-&gt;node, p);\n        kcp-&gt;nrcv_buf++;\n    }    else {\n        ikcp_segment_delete(kcp, newseg);\n    }\n\n    // \u200b\u628a\u200b\u6570\u636e\u200b\u4ece\u200b rcv_buf \u200b\u79fb\u52a8\u200b\u5230\u200b rcv_queue\n    while (! iqueue_is_empty(&amp;kcp-&gt;rcv_buf)) {\n        IKCPSEG *seg = iqueue_entry(kcp-&gt;rcv_buf.next, IKCPSEG, node);\n        // \u200b\u5982\u679c\u200b seg \u200b\u5e8f\u53f7\u200b\u662f\u200b\u7b49\u5f85\u200b\u63a5\u6536\u200b\u7684\u200b\u5e8f\u53f7\u200b\uff0c\u200b\u79fb\u52a8\u200b\u5230\u200b rcv_queue\n        if (seg-&gt;sn == kcp-&gt;rcv_nxt &amp;&amp; kcp-&gt;nrcv_que &lt; kcp-&gt;rcv_wnd) {\n            iqueue_del(&amp;seg-&gt;node);\n            kcp-&gt;nrcv_buf--;\n            iqueue_add_tail(&amp;seg-&gt;node, &amp;kcp-&gt;rcv_queue);\n            kcp-&gt;nrcv_que++;\n            kcp-&gt;rcv_nxt++;\n        }    else {\n            break;\n        }\n    }\n}\n</code></pre> <p><code>ikcp_parse_data</code> \u200b\u4e3b\u8981\u200b\u7684\u200b\u5de5\u4f5c\u200b\u5c31\u662f\u200b\u628a\u200b <code>newseg</code> \u200b\u653e\u7f6e\u200b\u5230\u200b <code>kcp-&gt;rcv_buf</code> \u200b\u5408\u9002\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\uff0c\u200b\u5e76\u200b\u628a\u200b\u6570\u636e\u200b\u4ece\u200b <code>rcv_buf</code> \u200b\u79fb\u52a8\u200b\u5230\u200b <code>rcv_queue</code>\u3002<code>rcv_buf</code> \u200b\u5408\u9002\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u610f\u601d\u200b\u662f\u200b\uff0c<code>rcv_buf</code> \u200b\u662f\u200b\u6309\u7167\u200b <code>sn</code> \u200b\u7684\u200b\u9012\u589e\u200b\u987a\u5e8f\u6392\u5217\u200b\u7684\u200b\uff0c<code>newseg</code> \u200b\u9700\u8981\u200b\u6839\u636e\u200b\u81ea\u5df1\u200b\u7684\u200b <code>sn</code> \u200b\u5927\u5c0f\u200b\u67e5\u627e\u200b\u5408\u9002\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002<code>rcv_buf</code> \u200b\u4e0a\u200b\u7684\u200b\u6570\u636e\u200b\u8981\u200b\u79fb\u52a8\u200b\u5230\u200b <code>rcv_queue</code>\uff0c\u200b\u6761\u4ef6\u200b\u662f\u200b <code>rcv_buf</code> \u200b\u4e0a\u200b\u7684\u200b\u6570\u636e\u5305\u200b\u5e8f\u53f7\u200b\uff0c\u200b\u7b49\u4e8e\u200b KCP \u200b\u5728\u200b\u7b49\u5f85\u200b\u63a5\u6536\u200b\u7684\u200b\u5305\u200b\u5e8f\u53f7\u200b <code>kcp-&gt;rcv_nxt</code> \uff0c\u200b\u79fb\u52a8\u200b\u4e00\u4e2a\u200b\u6570\u636e\u5305\u200b\u4e4b\u540e\u200b\uff0c\u200b\u9700\u8981\u200b\u66f4\u65b0\u200b <code>kcp-&gt;rvc_nxt</code>\uff0c\u200b\u518d\u200b\u5904\u7406\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u6570\u636e\u5305\u200b\u3002</p> <p><code>ikcp_input</code> \u200b\u4e4b\u540e\u200b\uff0c\u200b\u4e0a\u5c42\u200b\u8c03\u7528\u200b <code>ikcp_update</code> \u200b\u65f6\u5019\u200b\u4f1a\u200b\u53d1\u9001\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u8c03\u7528\u200b <code>ikcp_recv</code> \u200b\u4f1a\u200b\u7ed9\u200b\u4e0a\u5c42\u200b\u8fd4\u56de\u200b\u6709\u6548\u200b\u6570\u636e\u200b\u3002<code>ikcp_update</code> \u200b\u548c\u200b <code>ikcp_recv</code> \u200b\u4e92\u76f8\u200b\u72ec\u7acb\u200b\uff0c\u200b\u6ca1\u6709\u200b\u8c03\u7528\u200b\u987a\u5e8f\u200b\u8981\u6c42\u200b\uff0c\u200b\u89c6\u200b\u4e0a\u5c42\u200b\u7684\u200b\u8c03\u7528\u200b\u65f6\u673a\u200b\u800c\u5b9a\u200b\u3002\u200b\u6211\u4eec\u200b\u5148\u200b\u6765\u770b\u200b <code>ikcp_update</code> \u200b\u91cc\u9762\u200b\u6709\u5173\u200b ACK \u200b\u53d1\u9001\u200b\u7684\u200b\u90e8\u5206\u200b\uff1a</p>  \u200b\u56de\u590d\u200b ACK\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>// \u200b\u524d\u9762\u200b\u8bf4\u200b\u8fc7\u200b\uff0cikcp_update \u200b\u6700\u7ec8\u200b\u662f\u200b\u8c03\u7528\u200b ikcp_flush\nvoid ikcp_flush(ikcpcb *kcp, IUINT32 current)\n{\n    // ...\n\n    // \u200b\u56de\u590d\u200b ACK \u200b\u5305\u200b\n    count = kcp-&gt;ackcount;\n    for (i = 0; i &lt; count; i++) {\n        size = (int)(ptr - buffer);\n        if (size + (int)IKCP_OVERHEAD &gt; (int)kcp-&gt;mtu) {\n            ikcp_output(kcp, buffer, size);\n            ptr = buffer;\n        }\n        ikcp_ack_get(kcp, i, &amp;seg.sn, &amp;seg.ts);\n        ptr = ikcp_encode_seg(ptr, &amp;seg);\n    }\n\n    kcp-&gt;ackcount = 0;\n\n    // ...\n}\n</code></pre> <p>ACK \u200b\u5305\u200b\u7684\u200b\u4e4b\u524d\u200b\u5df2\u7ecf\u200b\u7531\u200b <code>ikcp_ack_push</code> \u200b\u4fdd\u5b58\u8d77\u6765\u200b\u4e86\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd9\u91cc\u200b\u53ea\u200b\u9700\u8981\u200b <code>ikcp_ack_get</code> \u200b\u83b7\u53d6\u200b\u6bcf\u4e2a\u200b ACK \u200b\u5305\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u53d1\u9001\u7ed9\u200b\u5bf9\u65b9\u200b\u3002\u200b\u4e0a\u5c42\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>ikcp_recv</code> \u200b\u4ece\u200b KCP \u200b\u83b7\u53d6\u6570\u636e\u200b\uff1a</p>  ikcp_recv\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>//---------------------------------------------------------------------\n// user/upper level recv: returns size, returns below zero for EAGAIN\n//---------------------------------------------------------------------\nint ikcp_recv(ikcpcb *kcp, char *buffer, int len)\n{\n    struct IQUEUEHEAD *p;\n    int ispeek = (len &lt; 0)? 1 : 0;\n    int peeksize;\n    int recover = 0;\n    IKCPSEG *seg;\n    assert(kcp);\n\n    // \u200b\u4e00\u4e9b\u200b\u6709\u6548\u6027\u200b\u68c0\u67e5\u200b\n    if (iqueue_is_empty(&amp;kcp-&gt;rcv_queue))\n        return -1;\n    if (len &lt; 0) len = -len;\n\n    // \u200b\u8ba1\u7b97\u200b\u80fd\u200b\u8fd4\u56de\u200b\u7684\u200b\u6570\u636e\u200b\u957f\u5ea6\u200b\n    peeksize = ikcp_peeksize(kcp);\n\n    if (peeksize &lt; 0)\n        return -2;\n    if (peeksize &gt; len)\n        return -3;\n\n    // \u200b\u5224\u65ad\u200b\u4e0b\u200b\u63a5\u6536\u200b\u7a97\u53e3\u200b\n    if (kcp-&gt;nrcv_que &gt;= kcp-&gt;rcv_wnd)\n        recover = 1;\n\n    // \u200b\u904d\u5386\u200b rcv_queue\uff0c\u200b\u628a\u200b\u6570\u636e\u200b\u590d\u5236\u5230\u200b buffer \u200b\u4e0a\u200b\n    for (len = 0, p = kcp-&gt;rcv_queue.next; p != &amp;kcp-&gt;rcv_queue; ) {\n        int fragment;\n        seg = iqueue_entry(p, IKCPSEG, node);\n        p = p-&gt;next;\n\n        if (buffer) {\n            memcpy(buffer, seg-&gt;data, seg-&gt;len);\n            buffer += seg-&gt;len;\n        }\n\n        len += seg-&gt;len;\n\n        // \u200b\u5224\u65ad\u200b\u5206\u5305\u200b\n        fragment = seg-&gt;frg;\n\n        // \u200b\u79fb\u9664\u200b\u6570\u636e\u5305\u200b\n        if (ispeek == 0) {\n            iqueue_del(&amp;seg-&gt;node);\n            ikcp_segment_delete(kcp, seg);\n            kcp-&gt;nrcv_que--;\n        }\n\n        // \u200b\u6240\u6709\u200b\u5206\u5305\u200b\u90fd\u200b\u590d\u5236\u200b\u5b8c\u200b\uff0c\u200b\u9000\u51fa\u200b\u5faa\u73af\u200b\n        if (fragment == 0)\n            break;\n    }\n\n    assert(len == peeksize);\n\n    // rcv_queue \u200b\u53c8\u200b\u7a7a\u200b\u4e86\u200b\u4e00\u4e9b\u200b\uff0c\u200b\u5c1d\u8bd5\u200b\u7ee7\u7eed\u200b\u4ece\u200b rcv_buf \u200b\u79fb\u52a8\u200b\u5230\u200b rcv_queue\n    while (! iqueue_is_empty(&amp;kcp-&gt;rcv_buf)) {\n        seg = iqueue_entry(kcp-&gt;rcv_buf.next, IKCPSEG, node);\n        if (seg-&gt;sn == kcp-&gt;rcv_nxt &amp;&amp; kcp-&gt;nrcv_que &lt; kcp-&gt;rcv_wnd) {\n            iqueue_del(&amp;seg-&gt;node);\n            kcp-&gt;nrcv_buf--;\n            iqueue_add_tail(&amp;seg-&gt;node, &amp;kcp-&gt;rcv_queue);\n            kcp-&gt;nrcv_que++;\n            kcp-&gt;rcv_nxt++;\n        }    else {\n            break;\n        }\n    }\n\n    return len;\n}\n</code></pre> <p><code>ikcp_recv</code> \u200b\u4e00\u6b21\u200b\u8c03\u7528\u200b\u53ea\u4f1a\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5b8c\u6574\u200b\u7684\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u4e0a\u5c42\u200b\u53ef\u4ee5\u200b\u5faa\u73af\u200b\u8c03\u7528\u200b\u76f4\u5230\u200b\u6ca1\u6709\u200b\u6570\u636e\u200b\u8fd4\u56de\u200b\u4e3a\u6b62\u200b\uff0c\u200b\u51fd\u6570\u200b\u7684\u200b\u903b\u8f91\u200b\u6bd4\u8f83\u7b80\u5355\u200b\uff0c\u200b\u5c31\u200b\u662f\u4ece\u200b <code>rcv_queue</code> \u200b\u4e2d\u200b\u590d\u5236\u200b\u6570\u636e\u200b\u5230\u200b\u4e0a\u5c42\u200b\u4f20\u200b\u8fdb\u6765\u200b\u7684\u200b <code>buffer</code> \u200b\u91cc\u9762\u200b\uff0c\u200b\u81f3\u6b64\u200b\u63a5\u6536\u200b\u65b9\u200b\u5bf9\u4e8e\u200b\u63a5\u6536\u200b\u5230\u200b\u7684\u200b\u6570\u636e\u5305\u200b\u5df2\u7ecf\u200b\u5904\u7406\u5b8c\u6bd5\u200b\u3002</p> <p>\u200b\u63a5\u6536\u200b\u65b9\u200b\u5904\u7406\u200b\u6570\u636e\u5305\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u7ed9\u200b\u53d1\u9001\u200b\u65b9\u200b\u53d1\u9001\u200b\u4e86\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u6211\u4eec\u200b\u518d\u200b\u6765\u200b\u770b\u770b\u200b\u53d1\u9001\u200b\u65b9\u200b\u63a5\u53d7\u200b ACK \u200b\u5305\u200b\u7684\u200b\u5904\u7406\u200b\uff1a</p>  \u200b\u5904\u7406\u200b ACK \u200b\u5305\u200b\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>int ikcp_input(ikcpcb *kcp, const char *data, long size)\n{\n    // ...\n    IUINT32 maxack = 0, latest_ts = 0;\n    // ...\n    while (1) {\n        // ...\n        // ts \u200b\u662f\u200b\u5bf9\u200b\u7aef\u7684\u200b kcp-&gt; current\n        data = ikcp_decode32u(data, &amp;ts);\n        data = ikcp_decode32u(data, &amp;sn);\n\n        if (cmd == IKCP_CMD_ACK) {\n            // \u200b\u66f4\u65b0\u200b rot\n            if (_itimediff(kcp-&gt;current, ts) &gt;= 0) {\n                ikcp_update_ack(kcp, _itimediff(kcp-&gt;current, ts));\n            }\n            // \u200b\u66f4\u65b0\u200b snd_buf\n            ikcp_parse_ack(kcp, sn);\n            ikcp_shrink_buf(kcp);\n\n            // maxack = \u200b\u8fd9\u6b21\u200b input \u200b\u7684\u200b\u6240\u6709\u200b ACK \u200b\u5305\u4e2d\u200b\u6700\u5927\u200b\u7684\u200b sn\n            if (flag == 0) {\n                flag = 1;\n                maxack = sn;\n                latest_ts = ts;\n            }    else {\n                if (_itimediff(sn, maxack) &gt; 0) {\n                #ifndef IKCP_FASTACK_CONSERVE\n                    maxack = sn;\n                    latest_ts = ts;\n                #else\n                    if (_itimediff(ts, latest_ts) &gt; 0) {\n                        maxack = sn;\n                        latest_ts = ts;\n                    }\n                #endif\n                }\n            }\n        }\n        // ...\n    }\n\n    // \u200b\u5982\u679c\u200b\u6709\u200b\u6536\u5230\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u7528\u6765\u200b\u505a\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\n    if (flag != 0) {\n        ikcp_parse_fastack(kcp, maxack, latest_ts);\n    }\n}\n</code></pre> <p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u63a5\u6536\u200b\u5230\u200b ACK \u200b\u5305\u540e\u200b\u540c\u6837\u200b\u4f1a\u200b\u9700\u8981\u200b <code>ikcp_parse_ack</code> \u200b\u548c\u200b <code>ikcp_shrink_buf</code> \u200b\u6765\u200b\u66f4\u65b0\u200b <code>snd_buf</code>\uff0c\u200b\u53e6\u5916\u200b\u8fd8\u200b\u9700\u8981\u200b\u8c03\u7528\u200b <code>ikcp_update_ack</code> \u200b\u6765\u200b\u8ba1\u7b97\u200b\u66f4\u65b0\u200b rto \uff08retransmission timeout\uff0c\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u65f6\u95f4\u200b\uff09\u3002<code>ikcp_input</code> \u200b\u8ba1\u7b97\u200b\u6536\u5230\u200b\u7684\u200b ACK \u200b\u5305\u4e2d\u200b\u6700\u5927\u200b\u5e8f\u53f7\u200b\uff0c\u200b\u6765\u200b\u8bb0\u5f55\u200b\u505a\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u7528\u200b\u3002\u200b\u5c31\u200b\u8fd9\u6837\u200b\uff0c\u200b\u53d1\u9001\u200b\u65b9\u200b\u6536\u5230\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u628a\u200b\u53d1\u9001\u6570\u636e\u200b\u4ece\u200b <code>snd_buf</code> \u200b\u4e2d\u200b\u79fb\u9664\u200b\uff0c\u200b\u8be5\u200b\u6570\u636e\u5305\u200b\u53ef\u9760\u200b\u5730\u9001\u200b\u8fbe\u5230\u200b\u4e86\u200b\u63a5\u6536\u200b\u65b9\u200b\uff0c\u200b\u4e00\u6b21\u200b\u5b8c\u6574\u200b\u7684\u200b ARQ \u200b\u786e\u8ba4\u200b\u63a5\u6536\u200b\u8fc7\u7a0b\u200b\u7ed3\u675f\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#_3","title":"\u8d85\u65f6\u200b\u91cd\u4f20","text":"<p>\u200b\u524d\u9762\u200b\u4ecb\u7ecd\u200b\u7684\u200b\u662f\u200b KCP \u200b\u5b9e\u73b0\u200b\u7684\u200b ARQ \u200b\u4e2d\u200b\u7684\u200b \u200b\u786e\u8ba4\u200b\u63a5\u6536\u200b\u673a\u5236\u200b\uff0cARQ \u200b\u8fd8\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200b\u8d85\u65f6\u200b\u91cd\u200b\u4f20\u6765\u200b\u4fdd\u8bc1\u200b\u53ef\u9760\u6027\u200b\uff0c\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u6765\u200b\u770b\u770b\u200b KCP \u200b\u662f\u200b\u600e\u4e48\u200b\u505a\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u7684\u200b\u3002</p> <p>\u200b\u8ba9\u200b\u6211\u4eec\u200b\u56de\u5230\u200b <code>ikcp_flush</code> \u200b\u51fd\u6570\u200b\uff1a</p>  \u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>void ikcp_flush(ikcpcb *kcp)\n{\n    // ...\n    // \u200b\u53d1\u9001\u200b snd_buf\n    for (p = kcp-&gt;snd_buf.next; p != &amp;kcp-&gt;snd_buf; p = p-&gt;next) {\n        IKCPSEG *segment = iqueue_entry(p, IKCPSEG, node);\n        int needsend = 0;\n        if (segment-&gt;xmit == 0) {\n            // \u200b\u9996\u6b21\u200b\u53d1\u9001\u200b\n            needsend = 1;\n            segment-&gt;xmit++;\n            // \u200b\u8bbe\u7f6e\u200b segment-&gt;rto\n            // \u200b\u901a\u8fc7\u200b segment-&gt;rto \u200b\u8ba1\u7b97\u200b segment-&gt;resendts \u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u65f6\u95f4\u200b\n            segment-&gt;rto = kcp-&gt;rx_rto;\n            segment-&gt;resendts = current + segment-&gt;rto + rtomin;\n        }\n        else if (_itimediff(current, segment-&gt;resendts) &gt;= 0) {\n            // \u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\n            needsend = 1;\n            segment-&gt;xmit++;\n            kcp-&gt;xmit++;\n            // nodelay \u200b\u63a7\u5236\u200b\u4e0b\u200b\u4e00\u6b21\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u65f6\u95f4\u200b\u7684\u200b\u8ba1\u7b97\u200b\n            if (kcp-&gt;nodelay == 0) {\n                segment-&gt;rto += kcp-&gt;rx_rto;\n            }    else {\n                segment-&gt;rto += kcp-&gt;rx_rto / 2;\n            }\n            segment-&gt;resendts = current + segment-&gt;rto;\n            lost = 1;\n        }\n        else if (segment-&gt;fastack &gt;= resent) {\n            // \u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\n            // ...\n        }\n        if (needsend) {\n            // \u200b\u53d1\u9001\u6570\u636e\u200b\n            // ...\n        }\n    // ...\n}\n</code></pre> <p>\u200b\u4e00\u65e6\u200b\u5f53\u524d\u200b\u65f6\u95f4\u200b <code>current</code> \u200b\u5927\u4e8e\u200b <code>segment-&gt;resendts</code> \u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u65f6\u95f4\u200b\uff0c\u200b\u8bf4\u660e\u200b\u5728\u200b\u8fd9\u200b\u6bb5\u65f6\u95f4\u200b\u5185\u200b\uff0c\u200b\u90fd\u200b\u6ca1\u6709\u200b\u6536\u5230\u200b\u63a5\u6536\u200b\u65b9\u200b\u7684\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u89e6\u53d1\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u673a\u5236\u200b\uff0c<code>needsend = 1</code>\uff0c\u200b\u91cd\u65b0\u200b\u53d1\u9001\u6570\u636e\u200b\u3002</p> <p>\u200b\u6709\u200b\u4e86\u200b\u786e\u8ba4\u200b\u63a5\u6536\u200b\u548c\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u673a\u5236\u200b\uff0cKCP \u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4fdd\u8bc1\u200b\u57fa\u7840\u200b\u7684\u200b\u53ef\u9760\u200b\u6570\u636e\u4f20\u8f93\u200b\u4e86\u200b\u3002\u200b\u4f46\u662f\u200b\u4e3a\u4e86\u200b\u80fd\u591f\u200b\u4fdd\u6301\u200b\u66f4\u200b\u7a33\u5b9a\u200b\u7684\u200b\u6570\u636e\u200b\u6d41\u901f\u200b\uff0cKCP \u200b\u8fd8\u200b\u505a\u200b\u4e86\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u4e8b\u60c5\u200b\uff0c\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u4e00\u8d77\u200b\u770b\u770b\u200b KCP \u200b\u8fd8\u200b\u505a\u200b\u4e86\u200b\u90a3\u4e9b\u200b\u4f18\u5316\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#kcp_2","title":"KCP \u200b\u63d0\u5347\u200b\u6d41\u901f\u200b\u7684\u200b\u7b56\u7565","text":"","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#_4","title":"\u5feb\u901f\u200b\u91cd\u4f20","text":"<p>\u200b\u53d1\u9001\u200b\u65b9\u200b\u53d1\u9001\u200b\u4e86\u200b\u5e8f\u53f7\u200b\u4e3a\u200b <code>sn</code> \u200b\u548c\u200b <code>sn + 1</code> \u200b\u4e24\u4e2a\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u5982\u679c\u200b\u53ea\u200b\u6536\u5230\u200b\u4e86\u200b <code>sn + 1</code> \u200b\u7684\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u90a3\u200b\u53ef\u80fd\u200b\u662f\u56e0\u4e3a\u200b <code>sn</code> \u200b\u7684\u200b ACK \u200b\u5305\u200b\u5728\u200b\u7f51\u8def\u200b\u4e2d\u200b\u8fd8\u200b\u6ca1\u200b\u5230\u8fbe\u200b\uff0c\u200b\u53c8\u200b\u6216\u8005\u200b ACK \u200b\u5305\u200b\u4e22\u200b\u4e86\u200b\uff0c\u200b\u53c8\u200b\u6216\u8005\u200b <code>sn</code> \u200b\u6570\u636e\u5305\u200b\u4e22\u200b\u4e86\u200b\uff0c\u200b\u5982\u679c\u200b\u6b64\u65f6\u200b\u8fd8\u200b\u6ca1\u5230\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u7684\u200b\u65f6\u95f4\u200b\uff0c\u200b\u7f51\u7edc\u200b\u4e5f\u200b\u8fd8\u200b\u4e0d\u200b\u592a\u200b\u62e5\u5835\u200b\uff0c\u200b\u53ea\u662f\u200b\u56e0\u4e3a\u200b\u67d0\u79cd\u539f\u56e0\u200b\u800c\u200b\u7a81\u53d1\u200b\u4e22\u5305\u200b\uff0c\u200b\u90a3\u4e48\u200b\u53d1\u9001\u200b\u65b9\u200b\u4e3b\u52a8\u200b\u63d0\u524d\u200b\u53d1\u9001\u200b <code>sn</code> \u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u63a5\u6536\u200b\u65b9\u66f4\u5feb\u200b\u5730\u200b\u63a5\u6536\u6570\u636e\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u6d41\u901f\u200b\u3002</p> <p>KCP \u200b\u91cc\u9762\u200b\u4e5f\u200b\u76f8\u5e94\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u673a\u5236\u200b\uff0c\u200b\u4e5f\u200b\u5728\u200b <code>ikcp_flush</code> \u200b\u91cc\u9762\u200b\uff1a</p>  \u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>void ikcp_flush(ikcpcb *kcp)\n{\n    // ...\n    resent = (kcp-&gt;fastresend &gt; 0)? (IUINT32)kcp-&gt;fastresend : 0xffffffff;\n\n    // \u200b\u53d1\u9001\u200b snd_buf\n    for (p = kcp-&gt;snd_buf.next; p != &amp;kcp-&gt;snd_buf; p = p-&gt;next) {\n        IKCPSEG *segment = iqueue_entry(p, IKCPSEG, node);\n        int needsend = 0;\n        if (segment-&gt;xmit == 0) {\n            // ...\n        }\n        else if (_itimediff(current, segment-&gt;resendts) &gt;= 0) {\n            // ...\n        }\n        else if (segment-&gt;fastack &gt;= resent) {\n            // \u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\n            if ((int)segment-&gt;xmit &lt;= kcp-&gt;fastlimit ||\n                kcp-&gt;fastlimit &lt;= 0) {\n                needsend = 1;\n                segment-&gt;xmit++;\n                segment-&gt;fastack = 0;\n                segment-&gt;resendts = current + segment-&gt;rto;\n                change++;\n            }\n        }\n        if (needsend) {\n            // \u200b\u53d1\u9001\u6570\u636e\u200b\n            // ...\n        }\n    // ...\n}\n</code></pre> <p>\u200b\u8981\u200b\u51fa\u53d1\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\uff0c\u200b\u6709\u200b\u4e24\u4e2a\u200b\u6761\u4ef6\u200b\uff1a * <code>segment-&gt;fastack &gt;= resent</code>\uff0cresent \u200b\u662f\u200b\u53ef\u200b\u914d\u7f6e\u200b\u7684\u200b\u53c2\u6570\u200b <code>kcp-&gt;fastresend</code>\uff0c\u200b\u914d\u7f6e\u200b\u4e3a\u200b 0 \u200b\u4f1a\u200b\u5173\u95ed\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u3002<code>segment-&gt;fastack</code> \u200b\u662f\u200b\u5728\u200b\u51fd\u6570\u200b <code>ikcp_parse_fastack</code> \u200b\u91cc\u9762\u200b\u8bbe\u7f6e\u200b\u7684\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u662f\u200b\u5728\u200b <code>ikcp_input</code> \u200b\u91cc\u9762\u200b\u8c03\u7528\u200b\uff0c\u200b\u4f1a\u200b\u6839\u636e\u200b <code>ikcp_input</code> \u200b\u7b97\u51fa\u200b\u7684\u200b <code>maxack</code> \u200b\u6765\u200b\u7ed9\u200b\u6240\u6709\u200b <code>sn</code> \u200b\u5c0f\u4e8e\u200b <code>maxack</code> \u200b\u7684\u200b <code>segment-&gt;fastack</code> \u200b\u52a0\u4e00\u200b\uff0c\u200b\u6240\u4ee5\u200b <code>segment-&gt;fastack</code> \u200b\u5c31\u662f\u200b\u8868\u793a\u200b\u6536\u5230\u200b\u6bd4\u200b <code>sn</code> \u200b\u5927\u200b\u7684\u200b\u5305\u200b\u7684\u200b\u6b21\u6570\u200b\u3002 * <code>segment-&gt;xmit &lt;= kcp-&gt;fastlimit || kcp-&gt;fastlimit &lt;= 0</code>\uff0c<code>setgment-&gt;xmit</code> \u200b\u662f\u200b\u53d1\u9001\u200b\u6b21\u6570\u200b\uff0c<code>kcp-&gt;fastlimit</code> \u200b\u662f\u200b\u53ef\u200b\u914d\u7f6e\u200b\u7684\u200b\u6700\u5927\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u6b21\u6570\u200b\uff0c\u200b\u53d1\u9001\u200b\u6b21\u6570\u200b\u9700\u8981\u200b\u5c0f\u4e8e\u200b\u6700\u5927\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u6b21\u6570\u200b</p> <p>\u200b\u4e00\u65e6\u200b\u6ee1\u8db3\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u7684\u200b\u4ee5\u4e0a\u200b\u6761\u4ef6\u200b\uff0cKCP \u200b\u5c31\u200b\u4f1a\u200b\u6267\u884c\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\uff0c\u200b\u8981\u200b\u6ce8\u610f\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u5e76\u200b\u4e0d\u4f1a\u200b\u91cd\u7f6e\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u65f6\u95f4\u200b\uff0c\u200b\u539f\u6765\u200b\u7684\u200b\u8d85\u65f6\u200b\u65f6\u95f4\u200b\u4f9d\u7136\u200b\u4f1a\u200b\u751f\u6548\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#_5","title":"\u7f29\u77ed\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u65f6\u95f4","text":"<p>\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u662f\u200b\u4e2a\u200b\u5f88\u200b\u597d\u200b\u7684\u200b\u673a\u5236\u200b\uff0c\u200b\u4f46\u200b\u5c31\u662f\u200b\u592a\u82b1\u200b\u65f6\u95f4\u200b\u4e86\u200b\uff0c\u200b\u6309\u7167\u200b TCP \u200b\u7684\u200b\u7b56\u7565\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u65f6\u95f4\u200b\u7ffb\u500d\u200b\uff0c\u200b\u7b49\u5f85\u65f6\u95f4\u200b\u81a8\u80c0\u200b\u5f97\u200b\u5f88\u5feb\u200b\uff0c\u200b\u5728\u200b\u7b49\u5f85\u65f6\u95f4\u200b\u5185\u200b\uff0c\u200b\u5f88\u200b\u53ef\u80fd\u200b\u7531\u4e8e\u200b\u63a5\u6536\u7aef\u200b\u7684\u200b\u63a5\u6536\u200b\u7a97\u53e3\u200b\u5df2\u200b\u8017\u5c3d\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u63a5\u6536\u200b\u65b0\u200b\u6570\u636e\u200b\uff0c\u200b\u800c\u200b\u7b49\u5f85\u200b\u91cd\u4f20\u200b\u7684\u200b\u5305\u200b\u5e8f\u53f7\u200b\u662f\u200b\u5728\u200b\u6700\u200b\u524d\u9762\u200b\uff0c\u200b\u63a5\u6536\u200b\u65b9\u8981\u200b\u63a5\u6536\u200b\u5230\u200b\u91cd\u4f20\u200b\u7684\u200b\u5305\u200b\u624d\u80fd\u200b\u628a\u200b\u6240\u6709\u200b\u6570\u636e\u200b\u8fd4\u56de\u200b\u7ed9\u200b\u4e0a\u5c42\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6574\u4e2a\u200b\u7f51\u8def\u200b\u7684\u200b\u6d41\u901f\u200b\u51e0\u4e4e\u200b\u4e3a\u200b 0\u3002KCP \u200b\u589e\u52a0\u200b\u4e86\u200b\u914d\u7f6e\u200b\u53ef\u4ee5\u200b\u51cf\u7f13\u200b\u7b49\u5f85\u200b\u7684\u200b\u65f6\u95f4\u200b\u589e\u957f\u200b\uff0c\u200b\u800c\u4e14\u200b\u4e5f\u200b\u4e0d\u4f1a\u200b\u662f\u200b\u7ffb\u500d\u200b\uff0c\u200b\u901a\u8fc7\u200b\u914d\u7f6e\u200b <code>kcp-&gt;nodelay</code> \u200b\u63a7\u5236\u200b\u6bcf\u6b21\u200b\u7b49\u5f85\u65f6\u95f4\u200b\u53ea\u4f1a\u200b\u589e\u957f\u200b 1 \u200b\u500d\u200b\u7684\u200b RTO \u200b\u6216\u8005\u200b 0.5 \u200b\u500d\u200b\u7684\u200b RTO\uff0c\u200b\u6709\u6548\u200b\u51cf\u7f13\u200b\u7b49\u5f85\u65f6\u95f4\u200b\u7684\u200b\u589e\u957f\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u7f51\u8def\u200b\u5c3d\u5feb\u6062\u590d\u200b\u6d41\u901f\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#_6","title":"\u66f4\u65b0\u200b\u53d1\u9001\u7a97\u53e3","text":"<p>\u200b\u53d1\u9001\u7a97\u53e3\u200b\u8868\u793a\u200b\u7684\u200b\u662f\u200b\u540c\u65f6\u200b\u4f20\u8f93\u200b\u7684\u200b\u6570\u636e\u5305\u200b\u6570\u91cf\u200b\uff0c\u200b\u7a97\u53e3\u200b\u8d8a\u5927\u200b\uff0c\u200b\u540c\u65f6\u200b\u4f20\u8f93\u200b\u7684\u200b\u6570\u636e\u200b\u8d8a\u200b\u591a\u200b\uff0c\u200b\u6d41\u901f\u200b\u8d8a\u5927\u200b\uff0c\u200b\u4f46\u200b\u7a97\u53e3\u200b\u8fc7\u5927\u200b\uff0c\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u7f51\u7edc\u200b\u62e5\u585e\u200b\uff0c\u200b\u4e22\u200b\u5305\u7387\u200b\u4e0a\u5347\u200b\uff0c\u200b\u6570\u636e\u200b\u91cd\u4f20\u200b\u589e\u591a\u200b\uff0c\u200b\u6d41\u901f\u200b\u4e0b\u964d\u200b\u3002\u200b\u6240\u4ee5\u200b\u53d1\u9001\u7a97\u53e3\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u7f51\u7edc\u200b\u60c5\u51b5\u200b\u4e0d\u65ad\u66f4\u65b0\u200b\uff0c\u200b\u6162\u6162\u200b\u8d8b\u8fd1\u200b\u6700\u4f18\u200b\u3002 KCP \u200b\u4e2d\u200b\u5173\u4e8e\u200b\u53d1\u9001\u7a97\u53e3\u200b\u7684\u200b\u4ee3\u7801\u200b\uff1a</p>  \u200b\u53d1\u9001\u7a97\u53e3\u200b\uff08\u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u4ee3\u7801\u200b\uff09  <pre><code>ikcpcb* ikcp_create(IUINT32 conv, void *user)\n{\n    // ...\n    // snd_wnd\uff0crcv_wnd \u200b\u53d1\u9001\u200b\u548c\u200b\u63a5\u53d7\u200b\u7684\u200b\u7f13\u51b2\u533a\u200b\u5927\u5c0f\u200b\n    kcp-&gt;snd_wnd = IKCP_WND_SND;    // 32\n    kcp-&gt;rcv_wnd = IKCP_WND_RCV;    // 128\n    // \u200b\u5bf9\u7aef\u200b\u63a5\u6536\u200b\u7a97\u53e3\u200b\u5927\u5c0f\u200b              // 128\n    kcp-&gt;rmt_wnd = IKCP_WND_RCV\n    // \u200b\u53d1\u9001\u7a97\u53e3\u200b cwnd \u200b\u521d\u59cb\u5316\u200b 0\n    kcp-&gt;cwnd = 0;\n    // \u200b\u53d1\u9001\u7a97\u53e3\u200b\u5b57\u8282\u6570\u200b\u5927\u5c0f\u200b\uff0c\u200b\u53c2\u4e0e\u200b\u8ba1\u7b97\u200b cwnd\n    kcp-&gt;incr = 0\n    // \u200b\u6162\u200b\u542f\u52a8\u200b\u9608\u503c\u200b\uff0cslow start threshold\n    kcp-&gt;ssthresh = IKCP_THRESH_INIT;\n    // nocwnd \u200b\u662f\u200b\u53ef\u200b\u914d\u7f6e\u200b\u53c2\u6570\u200b\uff0c1 \u200b\u4e0d\u200b\u8003\u8651\u200b cwnd\n    kcp-&gt;nocwnd = 0;\n    // ...\n}\n\nvoid ikcp_flush(ikcpcb *kcp)\n{\n    // ...\n    // \u200b\u53d1\u9001\u6570\u636e\u200b\u65f6\u5148\u200b\u8ba1\u7b97\u200b \u200b\u53d1\u9001\u7a97\u53e3\u200b\u5927\u5c0f\u200b\uff0c\u200b\u662f\u200b\u53d1\u9001\u7f13\u51b2\u533a\u200b\u5927\u5c0f\u200b\u548c\u200b\u5bf9\u65b9\u200b\u63a5\u6536\u200b\u7a97\u53e3\u200b\u5927\u5c0f\u200b\u7684\u200b\u5c0f\u503c\u200b\n    cwnd = _imin_(kcp-&gt;snd_wnd, kcp-&gt;rmt_wnd);\n    // \u200b\u9ed8\u8ba4\u200b\u8fd8\u200b\u9700\u8981\u200b\u8003\u8651\u200b kcp-&gt;cwnd\uff0c\u200b\u5373\u200b\u662f\u200b\u4e0d\u65ad\u66f4\u65b0\u200b\u7684\u200b\u53d1\u9001\u7a97\u53e3\u200b\n    if (kcp-&gt;nocwnd == 0) cwnd = _imin_(kcp-&gt;cwnd, cwnd);\n\n    // \u200b\u6839\u636e\u200b cwnd \u200b\u5927\u5c0f\u200b\uff0csnd_queue \u200b\u79fb\u52a8\u200b\u5230\u200b snd_buf\n    while (_itimediff(kcp-&gt;snd_nxt, kcp-&gt;snd_una + cwnd) &lt; 0) {\n    }\n    // \u200b\u53d1\u9001\u6570\u636e\u200b\n    resent = (kcp-&gt;fastresend &gt; 0)? (IUINT32)kcp-&gt;fastresend : 0xffffffff;\n    // \u200b\u89e6\u53d1\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b lost = 1\n    // \u200b\u89e6\u53d1\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b change++\n\n    // \u200b\u66f4\u65b0\u200b\u6162\u200b\u542f\u52a8\u200b\u9608\u503c\u200b\u548c\u200b\u53d1\u9001\u7a97\u53e3\u200b\n    if (change) {\n        // \u200b\u5982\u679c\u200b\u6709\u200b\u89e6\u53d1\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\uff0cssthresh \u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u7f51\u7edc\u200b\u4e0a\u200b\u6b63\u5728\u200b\u4f20\u8f93\u200b\u7684\u200b\u6570\u636e\u5305\u200b\u6570\u91cf\u200b\u7684\u200b\u4e00\u534a\u200b\n        IUINT32 inflight = kcp-&gt;snd_nxt - kcp-&gt;snd_una;\n        kcp-&gt;ssthresh = inflight / 2;\n        if (kcp-&gt;ssthresh &lt; IKCP_THRESH_MIN)\n            kcp-&gt;ssthresh = IKCP_THRESH_MIN;\n\n        // \u200b\u53d1\u9001\u7a97\u53e3\u200b\u4e3a\u200b\u9608\u503c\u200b\u518d\u200b\u52a0\u4e0a\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u76f8\u5173\u200b\u7684\u200b resent\n        kcp-&gt;cwnd = kcp-&gt;ssthresh + resent;\n        kcp-&gt;incr = kcp-&gt;cwnd * kcp-&gt;mss;\n    }\n\n    if (lost) {\n        // \u200b\u5982\u679c\u200b\u6709\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\uff0c\u200b\u89e6\u53d1\u200b\u6162\u200b\u542f\u52a8\u200b, ssthresh \u200b\u9608\u503c\u200b\u4e3a\u200b\u53d1\u9001\u7a97\u53e3\u200b\u7684\u200b\u4e00\u534a\u200b\n        kcp-&gt;ssthresh = cwnd / 2;\n        if (kcp-&gt;ssthresh &lt; IKCP_THRESH_MIN)\n            kcp-&gt;ssthresh = IKCP_THRESH_MIN;\n        // \u200b\u53d1\u9001\u7a97\u53e3\u200b\u56de\u5230\u200b 1\uff0c\u200b\u91cd\u65b0\u200b\u6162\u200b\u542f\u52a8\u200b\u589e\u957f\u200b\n        kcp-&gt;cwnd = 1;\n        kcp-&gt;incr = kcp-&gt;mss;\n    }\n\n    if (kcp-&gt;cwnd &lt; 1) {\n        // \u200b\u56e0\u4e3a\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b 0\uff0c\u200b\u6765\u5230\u200b\u8fd9\u91cc\u200b\u4f1a\u200b\u518d\u200b\u8bbe\u7f6e\u200b\u6210\u200b 1\n        kcp-&gt;cwnd = 1;\n        kcp-&gt;incr = kcp-&gt;mss;\n    }\n}\n\nint ikcp_input(ikcpcb *kcp, const char *data, long size)\n{\n    IUINT32 prev_una = kcp-&gt;snd_una;\n    // \u200b\u5904\u7406\u200b\u63a5\u6536\u200b\u7684\u200b\u6570\u636e\u200b\n\n    while (1) {\n        // ...\n        data = ikcp_decode16u(data, &amp;wnd)\n        // rmt_wnd \u200b\u662f\u200b\u5bf9\u65b9\u200b\u7684\u200b\u63a5\u6536\u200b\u7a97\u53e3\u200b\u5927\u5c0f\u200b\n        kcp-&gt;rmt_wnd = wnd\n        // ...\n        // \u200b\u5904\u7406\u200b\u6570\u636e\u200b\n    }\n\n    // \u200b\u6700\u540e\u200b\u66f4\u65b0\u200b\u53d1\u9001\u7a97\u53e3\u200b\n    // kcp-&gt;snd_una - prev_una &gt; 0\uff0c\u200b\u8868\u793a\u200b\u672c\u6b21\u200b input \u200b\u6709\u200b\u63a5\u53d7\u200b\u5230\u200b ACK \u200b\u5e76\u4e14\u200b\u53d1\u9001\u200b\u7f13\u51b2\u200b snd_buf \u200b\u6709\u200b\u53d8\u5316\u200b\n    if (_itimediff(kcp-&gt;snd_una, prev_una) &gt; 0) {\n        // \u200b\u518d\u200b\u5224\u65ad\u200b\u5bf9\u65b9\u200b\u7684\u200b\u63a5\u6536\u200b\u7a97\u53e3\u200b\n        if (kcp-&gt;cwnd &lt; kcp-&gt;rmt_wnd) {\n            IUINT32 mss = kcp-&gt;mss;\n\n            if (kcp-&gt;cwnd &lt; kcp-&gt;ssthresh) {\n                // \u200b\u5c0f\u4e8e\u200b\u6162\u200b\u542f\u52a8\u200b\u9608\u503c\u200b\uff0c\u200b\u53cc\u500d\u200b\u589e\u957f\u200b\n                kcp-&gt;cwnd++;\n                kcp-&gt;incr += mss;\n\n            }    else {\n                // \u200b\u5927\u4e8e\u200b\u6162\u200b\u542f\u52a8\u200b\u9608\u503c\u200b\u4e4b\u540e\u200b\uff0c\u200b\u901a\u8fc7\u200b\u516c\u5f0f\u200b\u66f4\u65b0\u200b incr \uff0c\u200b\u8fdb\u800c\u200b\u8ba1\u7b97\u200b cwnd\n                if (kcp-&gt;incr &lt; mss) kcp-&gt;incr = mss;\n                kcp-&gt;incr += (mss * mss) / kcp-&gt;incr + (mss / 16);\n                if ((kcp-&gt;cwnd + 1) * mss &lt;= kcp-&gt;incr) {\n                    kcp-&gt;cwnd++;\n                }\n            }\n            // \u200b\u66f4\u65b0\u200b\u51fa\u6765\u200b\u7684\u200b\u503c\u200b\u8fd8\u8981\u200b\u518d\u200b\u6bd4\u8f83\u200b\u4e0b\u200b rmt_wnd\n            if (kcp-&gt;cwnd &gt; kcp-&gt;rmt_wnd) {\n                kcp-&gt;cwnd = kcp-&gt;rmt_wnd;\n                kcp-&gt;incr = kcp-&gt;rmt_wnd * mss;\n            }\n        }\n    }\n}\n</code></pre> <p>\u200b\u8ba1\u7b97\u200b\u53d1\u9001\u7a97\u53e3\u200b <code>kcp-&gt;cwnd</code> \u200b\u7684\u200b\u5927\u5c0f\u200b\u6d89\u53ca\u200b\u7684\u200b\u4ee3\u7801\u200b\u7247\u6bb5\u200b\u4f1a\u200b\u7a0d\u5fae\u200b\u591a\u4e00\u4e9b\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5728\u200b\u53d1\u9001\u200b\u548c\u200b\u63a5\u6536\u6570\u636e\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u90fd\u200b\u4f1a\u200b\u9700\u8981\u200b\u66f4\u65b0\u200b\u3002<code>kcp-&gt;cwnd</code> \u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b 0\uff0c \u200b\u4e4b\u540e\u200b\u4f1a\u200b\u5728\u200b\u7b2c\u4e00\u6b21\u200b\u8c03\u7528\u200b <code>ikcp_flush</code> \u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5224\u65ad\u200b\u5c0f\u4e8e\u200b 1 \uff0c\u200b\u4fbf\u200b\u4fee\u6539\u200b\u6210\u200b 1\u3002\u200b\u4e4b\u540e\u200b\u53d1\u9001\u200b\u65b9\u200b\u6839\u636e\u200b\u53d1\u9001\u7a97\u53e3\u200b\u5927\u5c0f\u200b\uff0c\u200b\u53d1\u9001\u200b\u51fa\u200b\u76f8\u5e94\u200b\u6570\u91cf\u200b\u7684\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u7b49\u5f85\u200b ACK \u200b\u56de\u590d\u200b\u5305\u200b\u3002ACK \u200b\u5305\u200b\u5728\u200b <code>kcp-&gt;input</code> \u200b\u4e2d\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\uff0c<code>kcp-&gt;input</code> \u200b\u4e2d\u200b\u5982\u679c\u200b\u5224\u65ad\u200b\u6709\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u5e76\u200b\u6709\u200b\u6e05\u9664\u200b\u53d1\u9001\u200b\u7f13\u51b2\u200b\u4e2d\u200b\u7684\u200b\u53d1\u9001\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u8bf4\u660e\u200b\u6709\u200b\u6570\u636e\u5305\u200b\u5df2\u7ecf\u200b\u5b8c\u6210\u200b\u9001\u8fbe\u200b\uff0c<code>kcp-&gt;cwnd++</code>\u3002\u200b\u5b9e\u9645\u4e0a\u200b\u5f88\u200b\u53ef\u80fd\u200b\u662f\u200b\u4e00\u6b21\u200b <code>kcp-&gt;input</code> \u200b\u53ea\u200b\u5904\u7406\u200b\u5230\u200b\u4e00\u4e2a\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\uff0c\u200b\u6bcf\u200b\u6536\u5230\u200b\u4e00\u4e2a\u200b ACK \u200b\u5305\u90fd\u4f1a\u200b\u6709\u200b <code>kcp-&gt;cwnd++</code>\uff0c\u200b\u8fd9\u53e5\u200b\u81ea\u589e\u200b\u5b9e\u73b0\u200b\u7684\u200b\u662f\u200b\u7ffb\u500d\u200b\u7684\u200b\u6548\u679c\u200b\uff0c\u200b\u8b6c\u5982\u200b\u5f53\u524d\u200b <code>kcp-&gt;cwnd = 2</code>\uff0c\u200b\u53d1\u9001\u200b\u4e24\u4e2a\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u6536\u5230\u200b\u4e24\u4e2a\u200b ACK \u200b\u5305\u200b\uff0c\u200b\u89e6\u53d1\u200b\u4e86\u200b\u4e24\u6b21\u200b\u81ea\u589e\u200b\uff0c\u200b\u6700\u540e\u200b\u5c31\u662f\u200b <code>kcp-&gt;cwnd = 4</code> \u200b\u7ffb\u500d\u200b\u3002</p> <p><code>cwnd</code> \u200b\u53ef\u4ee5\u200b\u4e00\u76f4\u200b\u6307\u6570\u200b\u589e\u957f\u200b\uff0c\u200b\u76f4\u5230\u200b\u8d85\u8fc7\u200b\u6162\u200b\u542f\u52a8\u200b\u9608\u503c\u200b\uff0c\u200b\u6216\u8005\u200b\u53d1\u751f\u200b\u62e5\u5835\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\uff0c\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u53d1\u751f\u200b\u4e86\u200b\u8d85\u65f6\u200b\u91cd\u4f20\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u6162\u200b\u542f\u52a8\u200b\uff0c\u200b\u6162\u200b\u542f\u52a8\u200b\u9608\u503c\u200b <code>ssthresh = kcp-&gt;cwnd / 2</code>\uff0c\u200b\u53d1\u9001\u7a97\u53e3\u200b <code>kcp-&gt;cwnd = 1</code>\uff0c\u200b\u56de\u5230\u200b\u6700\u521d\u200b\u91cd\u65b0\u200b\u6307\u6570\u200b\u589e\u957f\u200b\u3002\u200b\u5982\u679c\u200b\u53d1\u751f\u200b\u4e86\u200b\u5feb\u901f\u200b\u91cd\u4f20\u200b\uff0cKCP \u200b\u5148\u200b\u63d0\u524d\u200b\u51cf\u5c11\u200b <code>ssthresh</code>\uff0c\u200b\u4e5f\u200b\u5373\u200b\u662f\u200b\u51cf\u5c11\u200b\u4e86\u200b <code>cwnd</code> \u200b\u6307\u6570\u200b\u589e\u957f\u200b\u7684\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u964d\u4f4e\u200b\u589e\u957f\u901f\u5ea6\u200b\uff0c\u200b\u63d0\u524d\u200b\u51cf\u7f13\u200b\u62e5\u5835\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</p> <p>KCP \u200b\u8fd8\u200b\u589e\u52a0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u914d\u7f6e\u200b <code>nocwnd</code>\uff0c\u200b\u5f53\u200b <code>nocwnd = 1</code>\uff0c\u200b\u53d1\u9001\u6570\u636e\u200b\u662f\u200b\u4e0d\u518d\u200b\u8003\u8651\u200b\u53d1\u9001\u7a97\u53e3\u200b\u5927\u5c0f\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8ba9\u200b\u6700\u5927\u200b\u80fd\u200b\u53d1\u9001\u200b\u7684\u200b\u6570\u91cf\u200b\u53d1\u9001\u200b\u6570\u636e\u5305\u200b\uff0c\u200b\u6ee1\u8db3\u200b\u9ad8\u901f\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\u7684\u200b\u8981\u6c42\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#_7","title":"\u5c0f\u7ed3","text":"<p>\u200b\u672c\u6587\u200b\u7b80\u5355\u200b\u5730\u200b\u5206\u6790\u200b\u4e86\u200b KCP \u200b\u7684\u200b\u6e90\u7801\u200b\uff0c\u200b\u5e76\u200b\u8ba8\u8bba\u200b\u4e86\u200b KCP \u200b\u4e0a\u200b ARQ \u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u548c\u200b\u4e00\u4e9b\u200b KCP \u200b\u63d0\u5347\u200b\u6d41\u901f\u200b\u7684\u200b\u7b56\u7565\u200b\u3002\u200b\u8fd8\u6709\u200b\u5f88\u591a\u200b\u7ec6\u8282\u200b\u6ca1\u6709\u200b\u63d0\u5230\u200b\uff0c\u200b\u611f\u5174\u8da3\u200b\u7684\u200b\u53ef\u4ee5\u200b\u81ea\u5df1\u200b\u7ffb\u200b KCP \u200b\u7684\u200b\u6e90\u7801\u200b\u5bf9\u7167\u200b\u7740\u200b\u770b\u200b\uff0c\u200b\u76f8\u4fe1\u200b\u4e5f\u200b\u80fd\u200b\u6709\u200b\u4e0d\u5c11\u200b\u7684\u200b\u6536\u83b7\u200b\u3002</p> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev"]},{"location":"cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/","title":"\u7f16\u5199\u200b Windows \u200b\u4e0b\u200b\u7684\u200b Memory Leak Detector","text":"","tags":["dev"]},{"location":"cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#_1","title":"\u524d\u8a00","text":"<p>\u200b\u8fd9\u4e00\u9635\u5b50\u200b\u8bfb\u5b8c\u200b\u4e86\u200b\u300a\u200b\u7a0b\u5e8f\u5458\u200b\u7684\u200b\u81ea\u6211\u200b\u4fee\u517b\u200b\uff1a\u200b\u94fe\u63a5\u200b\u3001\u200b\u88c5\u8f7d\u200b\u4e0e\u200b\u5e93\u200b\u300b\uff08\u200b\u540e\u9762\u200b\u7b80\u79f0\u200b\u300a\u200b\u94fe\u63a5\u200b\u300b\uff09\uff0c\u200b\u6536\u83b7\u200b\u826f\u591a\u200b\uff0c\u200b\u5bfb\u601d\u200b\u7740\u200b\u80fd\u200b\u4e0d\u80fd\u200b\u505a\u4e9b\u200b\u76f8\u5173\u200b\u7684\u200b\u5c0f\u200b\u4ee3\u7801\u200b\u51fa\u6765\u200b\u3002\u200b\u521a\u597d\u200b\u77e5\u9053\u200b Windows \u200b\u4e0b\u6709\u200b\u4e2a\u200b\u5185\u5b58\u200b\u6cc4\u9732\u200b\u68c0\u6d4b\u5de5\u5177\u200b Visual Leak Detector\uff0c\u200b\u8fd9\u4e2a\u200b\u5de5\u5177\u200b\u662f\u200b\u901a\u8fc7\u200b\u66ff\u6362\u200b Windows \u200b\u4e0b\u200b\u8d1f\u8d23\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u7684\u200b dll \u200b\u63a5\u53e3\u200b\u6765\u200b\u5b9e\u73b0\u200b\u8ddf\u8e2a\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u91ca\u653e\u200b\u3002\u200b\u6240\u4ee5\u200b\u51b3\u5b9a\u200b\u53c2\u8003\u200b Visual Leak Detector \uff08\u200b\u540e\u9762\u200b\u7b80\u79f0\u200b VLD\uff09\u200b\u6765\u200b\u505a\u200b\u4e2a\u200b\u7b80\u6613\u200b\u7684\u200b\u5185\u5b58\u200b\u6cc4\u9732\u200b\u68c0\u6d4b\u5de5\u5177\u200b\uff0c\u200b\u7406\u89e3\u200b dll \u200b\u94fe\u63a5\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#_2","title":"\u9884\u5907\u200b\u77e5\u8bc6","text":"<p>\u300a\u200b\u94fe\u63a5\u200b\u300b\u200b\u4e00\u4e66\u200b\u8be6\u7ec6\u200b\u89e3\u91ca\u200b\u4e86\u200b\u5728\u200b Linux \u200b\u548c\u200b Windows \u200b\u4e0b\u200b\u53ef\u6267\u884c\u6587\u4ef6\u200b\u7684\u200b\u94fe\u63a5\u200b\u539f\u7406\u200b\uff0c\u200b\u5176\u4e2d\u200b Windows \u200b\u4e0b\u200b\u7684\u200b\u53ef\u6267\u884c\u6587\u4ef6\u200b\u683c\u5f0f\u200b\u53eb\u505a\u200b PE\uff08Portable Executable\uff09\u200b\u6587\u4ef6\u200b\u3002\u200b\u800c\u200b DLL \u200b\u6587\u4ef6\u200b\u7684\u200b\u89e3\u91ca\u200b\u662f\u200b\u8fd9\u6837\u200b\u7684\u200b\uff1a</p> <p>DLL \u200b\u5373\u200b\u52a8\u6001\u94fe\u63a5\u5e93\u200b\uff08Dynamic-Link Library\uff09\u200b\u7684\u200b\u7f29\u5199\u200b\uff0c\u200b\u5b83\u200b\u76f8\u5f53\u4e8e\u200b Linux \u200b\u4e0b\u200b\u7684\u200b\u5171\u4eab\u200b\u5bf9\u8c61\u200b\u3002Windows \u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u5927\u91cf\u200b\u91c7\u7528\u200b\u4e86\u200b\u8fd9\u79cd\u200b DLL \u200b\u673a\u5236\u200b\uff0c\u200b\u751a\u81f3\u200b\u5305\u62ec\u200b Windows \u200b\u7684\u200b\u5185\u6838\u200b\u7684\u200b\u7ed3\u6784\u200b\u90fd\u200b\u5f88\u5927\u200b\u7a0b\u5ea6\u200b\u4f9d\u8d56\u4e8e\u200b DLL \u200b\u673a\u5236\u200b\u3002Windows \u200b\u4e0b\u200b\u7684\u200b DLL \u200b\u6587\u4ef6\u200b\u548c\u200b EXE \u200b\u6587\u4ef6\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6982\u5ff5\u200b\uff0c\u200b\u5b83\u4eec\u200b\u90fd\u200b\u662f\u200b\u6709\u200b PE \u200b\u683c\u5f0f\u200b\u7684\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\uff0c\u200b\u7a0d\u5fae\u200b\u6709\u4e9b\u200b\u4e0d\u540c\u200b\u7684\u200b\u662f\u200b PE \u200b\u6587\u4ef6\u200b\u5934\u90e8\u200b\u4e2d\u6709\u200b\u4e2a\u200b\u7b26\u53f7\u200b\u4f4d\u200b\u8868\u793a\u200b\u8be5\u200b\u6587\u4ef6\u200b\u662f\u200b EXE \u200b\u6216\u662f\u200b DLL\uff0c\u200b\u800c\u200b DLL \u200b\u6587\u4ef6\u200b\u7684\u200b\u6269\u5c55\u540d\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b .dll\uff0c\u200b\u4e5f\u200b\u6709\u200b\u53ef\u80fd\u200b\u662f\u200b\u522b\u7684\u200b\u6bd4\u5982\u200b .ocx\uff08OCX\u200b\u63a7\u4ef6\u200b\uff09\u200b\u6216\u662f\u200b .CPL\uff08\u200b\u63a7\u5236\u9762\u677f\u200b\u7a0b\u5e8f\u200b\uff09\u3002</p> <p>\u200b\u8fd8\u6709\u200b\u6bd4\u5982\u200b Python \u200b\u7684\u200b\u6269\u5c55\u200b\u6587\u4ef6\u200b .pyd\u3002\u200b\u800c\u200b DLL \u200b\u4e2d\u200b\u6709\u5173\u200b\u6211\u4eec\u200b\u8fd9\u91cc\u200b\u5185\u5b58\u200b\u6cc4\u9732\u200b\u68c0\u6d4b\u200b\u7684\u200b\u6982\u5ff5\u200b\u662f\u200b\u7b26\u53f7\u200b\u5bfc\u51fa\u200b\u5bfc\u5165\u200b\u8868\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#_3","title":"\u7b26\u53f7\u200b\u5bfc\u51fa\u200b\u8868","text":"<p>\u200b\u5f53\u200b\u4e00\u4e2a\u200b PE \u200b\u9700\u8981\u200b\u5c06\u200b\u4e00\u4e9b\u200b\u51fd\u6570\u200b\u6216\u200b\u53d8\u91cf\u200b\u63d0\u4f9b\u200b\u7ed9\u200b\u5176\u4ed6\u200b PE \u200b\u6587\u4ef6\u200b\u4f7f\u7528\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u628a\u200b\u8fd9\u79cd\u200b\u884c\u4e3a\u200b\u53eb\u505a\u200b\u7b26\u53f7\u200b\u5bfc\u51fa\u200b\uff08Symbol Exporting\uff09</p> <p>\u200b\u7b80\u5355\u200b\u5730\u200b\u7406\u89e3\u200b\uff0c\u200b\u5728\u200b Windows PE \u200b\u4e2d\u200b\uff0c\u200b\u6240\u6709\u200b\u5bfc\u51fa\u200b\u7684\u200b\u7b26\u53f7\u200b\u88ab\u200b\u96c6\u4e2d\u200b\u5b58\u653e\u200b\u5728\u200b\u88ab\u79f0\u4f5c\u200b\u5bfc\u51fa\u200b\u8868\u200b\uff08Export Table\uff09\u200b\u7684\u200b\u7ed3\u6784\u200b\u4e2d\u200b\uff0c\u200b\u5b83\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u7b26\u53f7\u200b\u540d\u200b\u4e0e\u200b\u7b26\u53f7\u200b\u5730\u5740\u200b\u7684\u200b\u6620\u5c04\u200b\u5173\u7cfb\u200b\u3002\u200b\u9700\u8981\u200b\u5bfc\u51fa\u200b\u7684\u200b\u7b26\u53f7\u200b\u9700\u8981\u200b\u52a0\u4e0a\u200b\u4fee\u9970\u7b26\u200b<code>__declspec(dllexport)</code>\u3002</p>","tags":["dev"]},{"location":"cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#_4","title":"\u7b26\u53f7\u200b\u5bfc\u5165\u200b\u8868","text":"<p>\u200b\u7b26\u53f7\u200b\u5bfc\u5165\u200b\u8868\u200b\u5c31\u662f\u200b\u6211\u4eec\u200b\u8fd9\u91cc\u200b\u7684\u200b\u5173\u952e\u200b\u6982\u5ff5\u200b\uff0c\u200b\u5b83\u200b\u8ddf\u200b\u7b26\u53f7\u200b\u5bfc\u51fa\u200b\u8868\u200b\u76f8\u5bf9\u200b\u5e94\u200b\uff0c\u200b\u5148\u200b\u6765\u770b\u200b\u6982\u5ff5\u200b\u89e3\u91ca\u200b\uff1a</p> <p>\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u5728\u200b\u67d0\u4e2a\u200b\u7a0b\u5e8f\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u5230\u200b\u4e86\u200b\u6765\u81ea\u200b DLL \u200b\u7684\u200b\u51fd\u6570\u200b\u6216\u8005\u200b\u53d8\u91cf\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u5c31\u200b\u628a\u200b\u8fd9\u79cd\u200b\u884c\u4e3a\u200b\u53eb\u505a\u200b\u7b26\u53f7\u200b\u5bfc\u5165\u200b\uff08Symbol Importing\uff09\u3002</p> <p>Windows PE \u200b\u4e2d\u200b\u4fdd\u5b58\u200b\u6a21\u5757\u200b\u9700\u8981\u200b\u5bfc\u5165\u200b\u7684\u200b\u53d8\u91cf\u200b\u548c\u200b\u51fd\u6570\u200b\u7684\u200b\u7b26\u53f7\u200b\u4ee5\u53ca\u200b\u6240\u5728\u200b\u7684\u200b\u6a21\u5757\u200b\u7b49\u200b\u4fe1\u606f\u200b\u7684\u200b\u7ed3\u6784\u200b\u53eb\u505a\u200b\u5bfc\u5165\u200b\u8868\u200b\uff08Import Table\uff09\u3002Windows \u200b\u52a0\u8f7d\u200b PE \u200b\u6587\u4ef6\u200b\u65f6\u200b\uff0c\u200b\u5176\u4e2d\u200b\u4e00\u4e2a\u200b\u8981\u200b\u505a\u200b\u7684\u200b\u4e8b\u60c5\u200b\u5c31\u662f\u200b\u5c06\u200b\u6240\u6709\u200b\u9700\u8981\u200b\u5bfc\u5165\u200b\u7684\u200b\u51fd\u6570\u200b\u5730\u5740\u200b\u786e\u5b9a\u200b\u5e76\u200b\u5c06\u200b\u5bfc\u5165\u200b\u8868\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u8c03\u6574\u200b\u5230\u200b\u6b63\u786e\u200b\u7684\u200b\u5730\u5740\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u8fd0\u884c\u200b\u65f6\u5019\u200b\uff0c\u200b\u7a0b\u5e8f\u200b\u901a\u8fc7\u200b\u67e5\u8be2\u200b\u5bfc\u5165\u200b\u8868\u6765\u200b\u5b9a\u4f4d\u200b\u5b9e\u9645\u200b\u51fd\u6570\u200b\u7684\u200b\u5730\u5740\u200b\uff0c\u200b\u5e76\u200b\u8fdb\u884c\u200b\u8c03\u7528\u200b\u3002\u200b\u5bfc\u5165\u200b\u8868\u4e2d\u200b\u6700\u200b\u91cd\u8981\u200b\u7684\u200b\u7ed3\u6784\u200b\u662f\u200b\u5bfc\u5165\u200b\u5730\u5740\u200b\u6570\u7ec4\u200b\uff08Import Address Table\uff0cIAT\uff09\uff0c\u200b\u91cc\u9762\u200b\u5b58\u653e\u200b\u7684\u200b\u5c31\u662f\u200b\u5bfc\u5165\u200b\u7684\u200b\u51fd\u6570\u200b\u5b9e\u9645\u200b\u5730\u5740\u200b\u3002</p> <p>\u200b\u770b\u5230\u200b\u8fd9\u91cc\u200b\u662f\u4e0d\u662f\u200b\u5df2\u7ecf\u200b\u731c\u200b\u5230\u200b\u6211\u4eec\u200b\u8981\u200b\u5b9e\u73b0\u200b\u7684\u200b\u5185\u5b58\u200b\u6cc4\u9732\u200b\u68c0\u6d4b\u200b\u662f\u200b\u600e\u4e48\u200b\u505a\u200b :)\u3002\u200b\u6ca1\u9519\u200b\u5c31\u662f\u200b hack \u200b\u5bfc\u5165\u200b\u8868\u200b\uff0c\u200b\u5177\u4f53\u5730\u8bf4\u200b\u5c31\u662f\u200b\u628a\u200b\u9700\u8981\u200b\u68c0\u6d4b\u200b\u7684\u200b\u6a21\u5757\u200b\u7684\u200b\u5bfc\u5165\u200b\u8868\u4e2d\u200b\uff0c\u200b\u5173\u4e8e\u200b\u5185\u5b58\u200b\u7533\u8bf7\u200b\u548c\u200b\u91ca\u653e\u200b\u7684\u200b\u51fd\u6570\u200b\u7684\u200b\u5730\u5740\u200b\u6539\u6210\u200b\u6211\u4eec\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u77e5\u9053\u200b\u6a21\u5757\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u7684\u200b\u5185\u5b58\u200b\u7533\u8bf7\u200b\u548c\u200b\u91ca\u653e\u200b\u60c5\u51b5\u200b\u4e86\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c3d\u60c5\u200b\u505a\u200b\u6211\u4eec\u200b\u60f3\u200b\u505a\u200b\u7684\u200b\u68c0\u6d4b\u200b\u3002</p> <p>\u200b\u6709\u5173\u200b DLL \u200b\u94fe\u63a5\u200b\u7684\u200b\u66f4\u200b\u8be6\u7ec6\u200b\u77e5\u8bc6\u200b\u53ef\u4ee5\u200b\u81ea\u884c\u200b\u67e5\u9605\u200b\u300a\u200b\u94fe\u63a5\u200b\u300b\u200b\u6216\u8005\u200b\u5176\u4ed6\u200b\u8d44\u6599\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#memory-leak-detector","title":"Memory Leak Detector","text":"<p>\u200b\u77e5\u9053\u200b\u4e86\u200b\u539f\u7406\u200b\uff0c\u200b\u4e0b\u9762\u200b\u5c31\u662f\u200b\u6839\u636e\u200b\u539f\u7406\u200b\u6765\u200b\u5b9e\u73b0\u200b\u5185\u5b58\u200b\u6cc4\u9732\u200b\u68c0\u6d4b\u200b\u3002\u200b\u4e0b\u9762\u200b\u7684\u200b\u8bb2\u89e3\u200b\u5c06\u200b\u57fa\u4e8e\u200b\u6211\u200b\u81ea\u5df1\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u6211\u200b\u653e\u5728\u200b\u4e86\u200b\u6211\u200b\u7684\u200b Github \u200b\u4e0a\u200b\uff1aLeakDetector\u3002</p>","tags":["dev"]},{"location":"cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#_5","title":"\u66ff\u6362\u200b\u51fd\u6570","text":"<p>\u200b\u5148\u200b\u6765\u770b\u200b\u5173\u952e\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f4d\u4e8e\u200bRealDetector.cpp\uff1a</p> <pre><code>/* \u200b\u628a\u200b importModule \u200b\u4e2d\u200b\u7684\u200b IAT (Import Address Table) \u200b\u7684\u200b\u67d0\u4e2a\u200b\u51fd\u6570\u200b\u66ff\u6362\u6210\u200b\u522b\u7684\u200b\u51fd\u6570\u200b\uff0c\n * importModule \u200b\u4f1a\u200b\u8c03\u7528\u200b\u5230\u200b\u522b\u7684\u200b module \u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u5c31\u662f\u200b\u9700\u8981\u200b patch \u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\n * \u200b\u6211\u4eec\u200b\u8981\u200b\u505a\u200b\u7684\u200b\u5c31\u662f\u200b\u8ba9\u200b import module \u200b\u6539\u6210\u200b\u8c03\u7528\u200b\u6211\u4eec\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\n *\n * - importModule (IN): \u200b\u8981\u200b\u5904\u7406\u200b\u7684\u200b module\uff0c\u200b\u8fd9\u4e2a\u200b module \u200b\u8c03\u7528\u200b\u5230\u200b\u522b\u7684\u200b module \u200b\u7684\u200b\u9700\u8981\u200b patch \u200b\u7684\u200b\u51fd\u6570\u200b\n *\n * - exportModuleName (IN): \u200b\u9700\u8981\u200b patch \u200b\u7684\u200b\u51fd\u6570\u200b\u6765\u81ea\u200b\u7684\u200b module \u200b\u540d\u5b57\u200b\n *\n * - exportModulePath (IN): export module \u200b\u6240\u5728\u200b\u7684\u200b\u8def\u5f84\u200b\uff0c\u200b\u9996\u5148\u200b\u5c1d\u8bd5\u200b\u7528\u200b path \u200b\u6765\u200b\u52a0\u8f7d\u200b export module\uff0c\n *          \u200b\u5982\u679c\u200b\u5931\u8d25\u200b\uff0c\u200b\u5219\u200b\u7528\u200b name \u200b\u6765\u200b\u52a0\u8f7d\u200b\n * - importName (IN): \u200b\u51fd\u6570\u200b\u540d\u200b\n *\n * - replacement (IN): \u200b\u66ff\u4ee3\u200b\u7684\u200b\u51fd\u6570\u6307\u9488\u200b\n *\n * Return Valur: \u200b\u6210\u529f\u200b true\uff0c\u200b\u5426\u5219\u200b false\n*/\nbool RealDetector::patchImport(\n    HMODULE importModule,\n    LPCSTR exportModuleName,\n    LPCSTR exportModulePath,\n    LPCSTR importName,\n    LPCVOID replacement)\n{\n    HMODULE                  exportmodule;\n    IMAGE_THUNK_DATA        *iate;\n    IMAGE_IMPORT_DESCRIPTOR *idte;\n    FARPROC                  import;\n    DWORD                    protect;\n    IMAGE_SECTION_HEADER    *section;\n    ULONG                    size;\n\n    assert(exportModuleName != NULL);\n\n    idte = (IMAGE_IMPORT_DESCRIPTOR*)ImageDirectoryEntryToDataEx((PVOID)importModule, \n        TRUE, IMAGE_DIRECTORY_ENTRY_IMPORT, &amp;size, &amp;section);\n    if (idte == NULL) \n    {\n        logMessage(\"patchImport failed: idte == NULL\\n\");\n        return false;\n    }\n    while (idte-&gt;FirstThunk != 0x0) \n    {\n        if (strcmp((PCHAR)R2VA(importModule, idte-&gt;Name), exportModuleName) == 0) \n        {\n            break;\n        }\n        idte++;\n    }\n    if (idte-&gt;FirstThunk == 0x0) \n    {\n        logMessage(\"patchImport failed: idte-&gt;FirstThunk == 0x0\\n\");\n        return false;\n    }\n\n    if (exportModulePath != NULL) \n    {\n        exportmodule = GetModuleHandleA(exportModulePath);\n    }\n    else \n    {\n        exportmodule = GetModuleHandleA(exportModuleName);\n    }\n    assert(exportmodule != NULL);\n    import = GetProcAddress(exportmodule, importName);\n    assert(import != NULL);\n\n    iate = (IMAGE_THUNK_DATA*)R2VA(importModule, idte-&gt;FirstThunk);\n    while (iate-&gt;u1.Function != 0x0) \n    {\n        if (iate-&gt;u1.Function == (DWORD_PTR)import) \n        {\n            VirtualProtect(&amp;iate-&gt;u1.Function, sizeof(iate-&gt;u1.Function), \n                PAGE_READWRITE, &amp;protect);\n            iate-&gt;u1.Function = (DWORD_PTR)replacement;\n            VirtualProtect(&amp;iate-&gt;u1.Function, sizeof(iate-&gt;u1.Function), \n                protect, &amp;protect);\n            return true;\n        }\n        iate++;\n    }\n\n    return false;\n}\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u6765\u200b\u5206\u6790\u200b\u4e00\u4e0b\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u6ce8\u91ca\u200b\u6240\u8bf4\u200b\u7684\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u5b9e\u73b0\u200b\u7684\u200b\u529f\u80fd\u200b\u5c31\u662f\u200b\u628a\u200b IAT \u200b\u91cc\u9762\u200b\u7684\u200b\u67d0\u200b\u51fd\u6570\u200b\u7684\u200b\u5730\u5740\u200b\u6539\u6210\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u5730\u5740\u200b\u3002\u200b\u5148\u200b\u6765\u770b\u200b\u7b2c\u200b 34-35 \u200b\u884c\u200b\uff1a</p> <pre><code>idte = (IMAGE_IMPORT_DESCRIPTOR*)ImageDirectoryEntryToDataEx((PVOID)importModule, \n    TRUE, IMAGE_DIRECTORY_ENTRY_IMPORT, &amp;size, &amp;section);\n</code></pre> <p><code>ImageDirectoryEntryToDataEx</code> \u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u8fd4\u56de\u200b\u6a21\u5757\u200b\u7684\u200b\u6587\u4ef6\u200b\u5934\u200b\u7684\u200b\u67d0\u200b\u7ed3\u6784\u200b\u7684\u200b\u5730\u5740\u200b\uff0c<code>IMAGE_DIRECTORY_ENTRY_IMPORT</code> \u200b\u6307\u5b9a\u200b\u8981\u200b\u5bfc\u5165\u200b\u8868\u200b\u7ed3\u6784\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd4\u56de\u200b\u7684\u200b <code>idte</code> \u200b\u5c31\u200b\u6307\u5411\u200b\u4e86\u200b\u6a21\u5757\u200b\u5bfc\u5165\u200b\u8868\u4e86\u200b\u3002</p> <p>36-40 \u200b\u884c\u200b\u5c31\u662f\u200b\u68c0\u67e5\u200b <code>idte</code> \u200b\u6709\u6548\u200b\u300241 \u200b\u884c\u200b <code>idte-&gt;FirstThunk</code> \u200b\u6307\u5411\u200b\u7684\u200b\u5c31\u662f\u200b\u5b9e\u9645\u200b\u7684\u200b IAT \u200b\u4e86\u200b\u3002\u200b\u6240\u4ee5\u200b 41-48 \u200b\u884c\u200b\u5c31\u662f\u200b\u5728\u200b\u6839\u636e\u200b\u6a21\u5757\u200b\u540d\u5b57\u200b\u67e5\u627e\u200b\u9700\u8981\u200b\u66ff\u6362\u200b\u7684\u200b\u51fd\u6570\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u5982\u679c\u200b\u627e\u200b\u4e0d\u5230\u200b\uff0c\u200b\u8bf4\u660e\u200b\u6ca1\u6709\u200b\u8c03\u7528\u200b\u5230\u200b\u8be5\u200b\u6a21\u5757\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u53ea\u80fd\u200b\u63d0\u793a\u200b\u9519\u8bef\u200b\u5e76\u200b\u8fd4\u56de\u200b\u3002</p> <p>\u200b\u627e\u5230\u200b\u6a21\u5757\u200b\u540e\u200b\uff0c\u200b\u81ea\u7136\u200b\u5730\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u627e\u5230\u200b\u66ff\u6362\u200b\u7684\u200b\u90a3\u4e2a\u200b\u51fd\u6570\u200b\uff0c55-62 \u200b\u884c\u200b\u6253\u5f00\u200b\u51fd\u6570\u200b\u6240\u5c5e\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c64 \u200b\u884c\u200b\u627e\u5230\u200b\u51fd\u6570\u200b\u5730\u5740\u200b\u3002\u200b\u56e0\u4e3a\u200b IAT \u200b\u6ca1\u6709\u200b\u4fdd\u5b58\u200b\u540d\u5b57\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u5148\u200b\u6839\u636e\u200b\u539f\u6765\u200b\u7684\u200b\u51fd\u6570\u200b\u5730\u5740\u200b\uff0c\u200b\u5b9a\u4f4d\u200b\u5230\u200b\u51fd\u6570\u200b\uff0c\u200b\u518d\u200b\u4fee\u6539\u200b\u8be5\u200b\u51fd\u6570\u200b\u5730\u5740\u200b\uff0c68-80 \u200b\u884c\u200b\u5c31\u662f\u200b\u5728\u200b\u505a\u200b\u8fd9\u4e2a\u200b\u4e8b\u60c5\u200b\u3002\u200b\u6210\u529f\u200b\u627e\u5230\u200b\u51fd\u6570\u200b\u4e4b\u540e\u200b\uff0c\u200b\u5c31\u200b\u7b80\u5355\u200b\u5730\u200b\u628a\u200b\u5730\u5740\u200b\u4fee\u6539\u200b\u6210\u200b <code>replacement</code> \u200b\u7684\u200b\u5730\u5740\u200b\u3002</p> <p>\u200b\u81f3\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c31\u200b\u6210\u529f\u200b\u5730\u200b\u66ff\u6362\u200b\u4e86\u200b IAT \u200b\u4e2d\u200b\u7684\u200b\u51fd\u6570\u200b\u4e86\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#_6","title":"\u6a21\u5757\u200b\u548c\u200b\u51fd\u6570\u200b\u540d\u5b57","text":"<p>\u200b\u867d\u7136\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u66ff\u6362\u200b IAT \u200b\u51fd\u6570\u200b <code>patchImport</code>\uff0c\u200b\u4f46\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b\u6a21\u5757\u200b\u540d\u5b57\u200b\u548c\u200b\u51fd\u6570\u200b\u540d\u5b57\u200b\u5440\u200b\uff0c\u200b\u90a3\u200b\u6211\u4eec\u200b\u600e\u4e48\u200b\u77e5\u9053\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u548c\u200b\u91ca\u653e\u200b\u7528\u200b\u4e86\u200b\u4ec0\u4e48\u200b\u6a21\u5757\u200b\u548c\u200b\u51fd\u6570\u200b\u5462\u200b\uff1f\u200b\u4e3a\u4e86\u200b\u641e\u6e05\u695a\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u501f\u52a9\u200b Windows \u200b\u4e0b\u200b\u7684\u200b\u5de5\u5177\u200b Dependency Walker\u3002Visual Studio \u200b\u4e0b\u200b\u65b0\u5efa\u200b\u4e00\u4e2a\u200b\u5de5\u7a0b\u200b\uff0c\u200b\u5728\u200b <code>main</code> \u200b\u51fd\u6570\u200b\u91cc\u9762\u200b\u4f7f\u7528\u200b <code>new</code> \u200b\u6765\u200b\u7533\u8bf7\u200b\u5185\u5b58\u200b\uff0c\u200b\u7f16\u8bd1\u200b Debug \u200b\u7248\u200b\uff0c\u200b\u4e4b\u540e\u200b\u4f7f\u7528\u200b <code>depends.exe</code> \u200b\u6765\u200b\u6253\u5f00\u200b\u7f16\u8bd1\u200b\u51fa\u6765\u200b\u7684\u200b exe \u200b\u6587\u4ef6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u4e00\u4e0b\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u754c\u9762\u200b\uff08\u200b\u4ee5\u200b\u6211\u200b\u7684\u200b\u5de5\u7a0b\u200b LeakDetectorTest \u200b\u4e3a\u4f8b\u200b\uff09\uff1a</p> <p></p> <p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b LeakDetectorTest.exe \u200b\u4f7f\u7528\u200b\u4e86\u200b uscrtbased.dll \u200b\u91cc\u9762\u200b\u7684\u200b <code>malloc</code> \u200b\u548c\u200b <code>_free_dbg</code> \uff08\u200b\u6ca1\u6709\u200b\u5728\u200b\u56fe\u200b\u4e2d\u200b\u663e\u793a\u200b\u51fa\u6765\u200b\uff09\uff0c\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u51fd\u6570\u200b\u5c31\u662f\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u66ff\u6362\u200b\u7684\u200b\u51fd\u6570\u200b\u4e86\u200b\u3002\u200b\u8981\u200b\u6ce8\u610f\u200b\u5b9e\u9645\u200b\u7684\u200b\u6a21\u5757\u200b\u51fd\u6570\u200b\u540d\u5b57\u200b\u53ef\u80fd\u200b\u8ddf\u200b\u4f60\u200b\u7684\u200b Windows \u200b\u548c\u200b Visual Studio \u200b\u7248\u672c\u200b\u6709\u5173\u200b\uff0c\u200b\u6211\u200b\u7684\u200b\u662f\u200b Windows 10 \u200b\u548c\u200b Visual Studio 2015\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u505a\u200b\u7684\u200b\u5c31\u662f\u200b\u7528\u200b depends.exe \u200b\u770b\u770b\u200b\u5b9e\u9645\u200b\u8c03\u7528\u200b\u7684\u200b\u662f\u200b\u4ec0\u4e48\u200b\u51fd\u6570\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#_7","title":"\u5206\u6790\u200b\u8c03\u7528\u200b\u6808","text":"<p>\u200b\u8bb0\u5f55\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u9700\u8981\u200b\u8bb0\u5f55\u200b\u5f53\u65f6\u200b\u7684\u200b\u8c03\u7528\u200b\u6808\u200b\u4fe1\u606f\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u6211\u200b\u4e0d\u200b\u6253\u7b97\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b Windows \u200b\u4e0b\u200b\u5982\u4f55\u200b\u62ff\u5230\u200b\u5f53\u524d\u200b\u7684\u200b\u8c03\u7528\u200b\u6808\u200b\u4fe1\u606f\u200b\uff0c\u200b\u76f8\u5173\u200b\u7684\u200b\u51fd\u6570\u200b\u662f\u200b <code>RtlCaptureStackBackTrace</code>\uff0c\u200b\u7f51\u4e0a\u200b\u6709\u200b\u8bb8\u591a\u200b\u76f8\u5173\u200b\u7684\u200b\u8d44\u6599\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u770b\u770b\u200b\u6211\u200b\u7684\u200b\u4ee3\u7801\u200b\u91cc\u9762\u200b\u7684\u200b\u51fd\u6570\u200b <code>printTrace</code> \u3002</p>","tags":["dev"]},{"location":"cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#_8","title":"\u68c0\u6d4b\u200b\u5185\u5b58\u200b\u6cc4\u9732","text":"<p>\u200b\u81f3\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u628a\u200b\u9f99\u73e0\u200b\u90fd\u200b\u6536\u96c6\u200b\u5168\u4e86\u200b\uff0c\u200b\u4e0b\u9762\u200b\u6b63\u5f0f\u200b\u53ec\u5524\u200b\u795e\u9f99\u200b\u3002</p> <p>\u200b\u6211\u200b\u60f3\u200b\u505a\u6210\u200b\u53ef\u4ee5\u200b\u5c40\u90e8\u200b\u68c0\u6d4b\u200b\u5185\u5b58\u200b\u6cc4\u9732\u200b\uff08\u200b\u8fd9\u200b\u662f\u200b\u8ddf\u200b VLD \u200b\u4e0d\u540c\u200b\u7684\u200b\u5730\u65b9\u200b\uff0cVLD \u200b\u505a\u200b\u7684\u200b\u662f\u200b\u5168\u5c40\u200b\u7684\u200b\u68c0\u6d4b\u200b\uff0c\u200b\u5e76\u200b\u652f\u6301\u200b\u591a\u7ebf\u7a0b\u200b\uff09\u3002\u200b\u6240\u4ee5\u200b\u6211\u200b\u5728\u200b\u5b9e\u9645\u200b\u66ff\u6362\u200b\u51fd\u6570\u200b\u7684\u200b\u7c7b\u200b<code>RealDetector</code>\u200b\u4e0a\u200b\u53c8\u200b\u5c01\u88c5\u200b\u4e86\u200b\u4e00\u5c42\u200b<code>LeakDetector</code>\uff0c\u200b\u5e76\u200b\u628a\u200b<code>LeakDetector</code>\u200b\u7684\u200b\u63a5\u53e3\u200b\u66b4\u9732\u200b\u7ed9\u200b\u4f7f\u7528\u8005\u200b\u3002\u200b\u4f7f\u7528\u200b\u65f6\u200b\u53ea\u200b\u9700\u200b\u6784\u9020\u200b<code>LeakDetector</code>\uff0c\u200b\u5373\u200b\u5b8c\u6210\u200b\u51fd\u6570\u200b\u7684\u200b\u66ff\u6362\u200b\u5e76\u200b\u5f00\u59cb\u200b\u68c0\u6d4b\u200b\u5185\u5b58\u200b\u6cc4\u9732\u200b\uff0c<code>LeakDetector</code>\u200b\u6790\u6784\u200b\u65f6\u4f1a\u200b\u6062\u590d\u200b\u539f\u6765\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u4e2d\u6b62\u200b\u5185\u5b58\u200b\u6cc4\u9732\u200b\u68c0\u6d4b\u200b\uff0c\u200b\u5e76\u6253\u5370\u200b\u5185\u5b58\u200b\u6cc4\u9732\u200b\u68c0\u6d4b\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u7528\u200b\u4e0b\u9762\u200b\u4ee3\u7801\u200b\u6d4b\u8bd5\u200b\u4e00\u4e0b\u200b\uff1a</p> <pre><code>#include \"LeakDetector.h\"\n#include &lt;iostream&gt;\nusing namespace std;\n\nvoid new_some_mem()\n{\n    char* c = new char[12];\n    int* i = new int[4];\n}\n\nint main()\n{\n    auto ld = LDTools::LeakDetector(\"LeakDetectorTest.exe\");\n    new_some_mem();\n    return 0;\n}\n</code></pre> <p>\u200b\u4ee3\u7801\u200b\u76f4\u63a5\u200b <code>new</code> \u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5185\u5b58\u200b\u51fa\u6765\u200b\uff0c\u200b\u6ca1\u6709\u200b\u91ca\u653e\u200b\u6389\u200b\u5c31\u200b\u76f4\u63a5\u200b\u9000\u51fa\u200b\uff0c\u200b\u7a0b\u5e8f\u200b\u6253\u5370\u200b\u7684\u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>============== LeakDetector::start ===============\nLeakDetector init success.\n============== LeakDetector::stop ================\nMemory Leak Detected: total 2\n\nNum 1:\n    e:\\program\\github\\leakdetector\\leakdetector\\realdetector.cpp (109): LeakDetector.dll!LDTools::RealDetector::_malloc() + 0x1c bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\heap\\new_scalar.cpp (19): LeakDetectorTest.exe!operator new() + 0x9 bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\heap\\new_array.cpp (15): LeakDetectorTest.exe!operator new[]() + 0x9 bytes\n    e:\\program\\github\\leakdetector\\leakdetectortest\\leakdetectortest.cpp (12): LeakDetectorTest.exe!new_some_mem() + 0x7 bytes\n    e:\\program\\github\\leakdetector\\leakdetectortest\\leakdetectortest.cpp (19): LeakDetectorTest.exe!main()\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (74): LeakDetectorTest.exe!invoke_main() + 0x1b bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (264): LeakDetectorTest.exe!__scrt_common_main_seh() + 0x5 bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (309): LeakDetectorTest.exe!__scrt_common_main()\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_main.cpp (17): LeakDetectorTest.exe!mainCRTStartup()\n    KERNEL32.DLL!BaseThreadInitThunk() + 0x24 bytes\n    ntdll.dll!RtlUnicodeStringToInteger() + 0x253 bytes\n    ntdll.dll!RtlUnicodeStringToInteger() + 0x21e bytes\n\nNum 2:\n    e:\\program\\github\\leakdetector\\leakdetector\\realdetector.cpp (109): LeakDetector.dll!LDTools::RealDetector::_malloc() + 0x1c bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\heap\\new_scalar.cpp (19): LeakDetectorTest.exe!operator new() + 0x9 bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\heap\\new_array.cpp (15): LeakDetectorTest.exe!operator new[]() + 0x9 bytes\n    e:\\program\\github\\leakdetector\\leakdetectortest\\leakdetectortest.cpp (11): LeakDetectorTest.exe!new_some_mem() + 0x7 bytes\n    e:\\program\\github\\leakdetector\\leakdetectortest\\leakdetectortest.cpp (19): LeakDetectorTest.exe!main()\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (74): LeakDetectorTest.exe!invoke_main() + 0x1b bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (264): LeakDetectorTest.exe!__scrt_common_main_seh() + 0x5 bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (309): LeakDetectorTest.exe!__scrt_common_main()\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_main.cpp (17): LeakDetectorTest.exe!mainCRTStartup()\n    KERNEL32.DLL!BaseThreadInitThunk() + 0x24 bytes\n    ntdll.dll!RtlUnicodeStringToInteger() + 0x253 bytes\n    ntdll.dll!RtlUnicodeStringToInteger() + 0x21e bytes\n</code></pre> <p>\u200b\u7a0b\u5e8f\u200b\u6b63\u786e\u200b\u5730\u200b\u627e\u51fa\u200b\u6709\u200b\u4e24\u4e2a\u200b\u5730\u65b9\u200b\u7533\u8bf7\u200b\u7684\u200b\u5185\u5b58\u200b\u6ca1\u6709\u200b\u91ca\u653e\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6253\u5370\u200b\u51fa\u200b\u4e86\u200b\u5b8c\u6574\u200b\u7684\u200b\u8c03\u7528\u200b\u6808\u200b\u4fe1\u606f\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u7684\u200b\u529f\u80fd\u200b\u81f3\u6b64\u200b\u5df2\u7ecf\u200b\u5b8c\u6210\u200b\u4e86\u200b\u3002</p>","tags":["dev"]},{"location":"cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#_9","title":"\u7ed3\u8bed","text":"<p>\u200b\u5f53\u200b\u4f60\u200b\u8fd8\u200b\u4e0d\u200b\u4e86\u89e3\u200b\u7a0b\u5e8f\u200b\u94fe\u63a5\u200b\u3001\u200b\u88c5\u8f7d\u200b\u4e0e\u200b\u5e93\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4f60\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bf9\u200b\u5982\u4f55\u200b\u627e\u5230\u200b\u5171\u4eab\u200b\u94fe\u63a5\u5e93\u200b\u7684\u200b\u51fd\u6570\u200b\u4e00\u5934\u96fe\u6c34\u200b\uff0c\u200b\u66f4\u200b\u4e0d\u8981\u200b\u8bf4\u200b\u8981\u200b\u628a\u200b\u94fe\u63a5\u5e93\u200b\u7684\u200b\u51fd\u6570\u200b\u66ff\u6362\u6210\u200b\u6211\u4eec\u200b\u81ea\u5df1\u200b\u7684\u200b\u51fd\u6570\u200b\u4e86\u200b\u3002\u200b\u8fd9\u91cc\u200b\u5c31\u200b\u4ee5\u200b\u68c0\u6d4b\u200b\u5185\u5b58\u200b\u6cc4\u9732\u200b\u4e3a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u63a2\u8ba8\u200b\u4e0b\u200b\u4e86\u200b\u5982\u4f55\u200b\u66ff\u6362\u200b Windows DLL \u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u66f4\u200b\u8be6\u7ec6\u200b\u7684\u200b\u5b9e\u73b0\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b VLD \u200b\u7684\u200b\u6e90\u7801\u200b\u3002</p> <p>\u200b\u53e6\u5916\u200b\u60f3\u200b\u8bf4\u200b\u7684\u200b\u662f\u200b\uff0c\u300a\u200b\u7a0b\u5e8f\u5458\u200b\u7684\u200b\u81ea\u6211\u200b\u4fee\u517b\u200b\uff1a\u200b\u94fe\u63a5\u200b\u3001\u200b\u88c5\u8f7d\u200b\u4e0e\u200b\u5e93\u200b\u300b\u200b\u771f\u662f\u200b\u672c\u200b\u4e0d\u9519\u200b\u7684\u200b\u4e66\u200b\u5462\u200b\uff0c\u200b\u7eaf\u200b\u611f\u6168\u200b\u975e\u8f6f\u5e7f\u200b\u3002</p> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev"]},{"location":"game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/","title":"\u6e38\u620f\u200b AOI \u200b\u7b97\u6cd5\u200b\u89e3\u6790\u200b\u548c\u200b\u6027\u80fd\u200b\u5b9e\u6d4b","text":"","tags":["dev","game"]},{"location":"game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#_1","title":"\u5f15\u5b50","text":"<p><code>AOI</code> (Area Of Interest) \u200b\u5728\u200b\u591a\u200b\u4eba\u200b\u5728\u7ebf\u200b\u6e38\u620f\u200b\u4e2d\u662f\u200b\u5f88\u200b\u57fa\u672c\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c\u200b\u73a9\u5bb6\u200b\u9700\u8981\u200b\u63a5\u6536\u200b\u8fdb\u5165\u200b\u89c6\u91ce\u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u5176\u4ed6\u200b\u73a9\u5bb6\u200b\u6216\u8005\u200b\u5b9e\u4f53\u200b (Entity) \u200b\u7684\u200b\u4fe1\u606f\u200b\u3002\u200b\u8ba1\u7b97\u200b\u73a9\u5bb6\u200b\u89c6\u91ce\u200b\u8303\u56f4\u200b\u5185\u200b\u5b58\u5728\u200b\u54ea\u4e9b\u200b\u5b9e\u4f53\u200b\uff0c\u200b\u6709\u200b\u54ea\u4e9b\u200b\u5b9e\u4f53\u200b\u8fdb\u5165\u200b\u6216\u200b\u79bb\u5f00\u200b\u89c6\u91ce\u200b\u7684\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e00\u822c\u200b\u79f0\u4e4b\u4e3a\u200b <code>AOI</code> \u200b\u7b97\u6cd5\u200b\u3002</p> <p>\u200b\u672c\u6587\u200b\u8ba8\u8bba\u200b\u4e5d\u5bab\u683c\u200b\u548c\u200b\u5341\u5b57\u200b\u94fe\u200b\u4e24\u79cd\u200b <code>AOI</code> \u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5e76\u200b\u7ed9\u51fa\u200b\u4e24\u79cd\u200b\u7b97\u6cd5\u200b\u7684\u200b\u5b9e\u6d4b\u200b\u6027\u80fd\u200b\u5206\u6790\u200b\uff0c\u200b\u8ba9\u200b\u4f60\u200b\u7528\u200b\u8d77\u6765\u200b\u5fc3\u4e2d\u6709\u6570\u200b\uff0c\u200b\u9047\u4e8b\u200b\u4e0d\u200b\u614c\u200b\u3002</p> <p>\u200b\u6587\u4e2d\u200b\u4f1a\u200b\u63d0\u5230\u200b\u73a9\u5bb6\u200b\u548c\u200b\u5b9e\u4f53\u200b\u4e24\u79cd\u200b\u8bcd\u200b\uff0c\u200b\u5b9e\u4f53\u200b\u662f\u200b\u6e38\u620f\u200b\u4e2d\u200b\u7269\u4f53\u200b\u7684\u200b\u6982\u5ff5\u200b\uff0c\u200b\u73a9\u5bb6\u200b\u662f\u200b\u62e5\u6709\u200b AOI \u200b\u7684\u200b\u5b9e\u4f53\u200b\u3002</p> <p>\u200b\u6587\u4e2d\u200b\u4ee3\u7801\u200b\u53ef\u200b\u5728\u200b\u8fd9\u91cc\u200b\u627e\u5230\u200b\uff1aAoiTesting\u3002</p>","tags":["dev","game"]},{"location":"game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#_2","title":"\u4e5d\u5bab\u683c","text":"<p>\u200b\u6240\u8c13\u200b\u4e5d\u5bab\u683c\u200b\uff0c\u200b\u662f\u200b\u628a\u200b\u573a\u666f\u200b\u5185\u200b\u6240\u6709\u200b\u5b9e\u4f53\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u6309\u7167\u200b\u683c\u5b50\u200b\u5212\u5206\u200b\uff0c\u200b\u8b6c\u5982\u200b\u5212\u5206\u200b\u6210\u200b\u8fb9\u957f\u200b 200 \u200b\u7684\u200b\u6b63\u65b9\u5f62\u200b\uff0c\u200b\u8981\u200b\u627e\u51fa\u200b\u4e2d\u5fc3\u200b\u73a9\u5bb6\u200b AOI \u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u5176\u4ed6\u200b\u5b9e\u4f53\u200b\uff0c\u200b\u5c31\u200b\u628a\u200b\u8fd9\u4e2a\u200b\u8303\u56f4\u200b\u5185\u200b\u6d89\u53ca\u200b\u5230\u200b\u7684\u200b\u683c\u5b50\u200b\u5185\u200b\u7684\u200b\u73a9\u5bb6\u200b\u90fd\u200b\u505a\u200b\u4e00\u904d\u200b\u6bd4\u8f83\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\u573a\u666f\u200b\u6bcf\u200b 100 \u200b\u6beb\u79d2\u200b\u4f1a\u200b Tick \u200b\u4e00\u6b21\u200b\uff0c\u200b\u5728\u200b Tick \u200b\u4e2d\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8fd9\u6837\u200b\u66f4\u65b0\u200b\u73a9\u5bb6\u200b\u7684\u200b AOI\uff1a</p> <ul> <li>\u200b\u4ee5\u200b\u73a9\u5bb6\u200b\u4f4d\u7f6e\u200b\u4e3a\u200b\u4e2d\u5fc3\u200b\uff0cAOI \u200b\u534a\u5f84\u200b\u8ba1\u7b97\u200b\u6d89\u53ca\u200b\u5230\u200b\u7684\u200b\u683c\u5b50\u200b\u96c6\u5408\u200b</li> <li>\u200b\u5bf9\u200b\u683c\u5b50\u200b\u96c6\u5408\u200b\u4e2d\u200b\u7684\u200b\u5b9e\u4f53\u200b\u9010\u4e2a\u200b\u8ba1\u7b97\u200b\u8ddf\u200b\u73a9\u5bb6\u200b\u7684\u200b\u8ddd\u79bb\u200b</li> <li>\u200b\u8ddd\u79bb\u200b\u5c0f\u4e8e\u200b AOI \u200b\u534a\u5f84\u200b\u7684\u200b\u5b9e\u4f53\u200b\u96c6\u5408\u200b\u5219\u200b\u662f\u200b\u73a9\u5bb6\u200b\u7684\u200b\u65b0\u200b\u7684\u200b AOI</li> </ul> <p>\u200b\u4e5d\u5bab\u683c\u200b\u7b97\u6cd5\u200b\u505a\u200b\u8d77\u6765\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u7b97\u6cd5\u200b\u7528\u200b\u51e0\u53e5\u8bdd\u200b\u5c31\u200b\u80fd\u200b\u63cf\u8ff0\u200b\u6e05\u695a\u200b\u4e86\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\u6027\u80fd\u200b\u5206\u6790\u200b\u6211\u4eec\u200b\u7559\u200b\u5230\u200b\u540e\u9762\u200b\uff0c\u200b\u5148\u200b\u6765\u200b\u770b\u770b\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u7b97\u6cd5\u200b\u3002</p>","tags":["dev","game"]},{"location":"game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#_3","title":"\u5341\u5b57\u200b\u94fe\u8868","text":"<p>\u200b\u5bf9\u4e8e\u200b 3D \u200b\u6e38\u620f\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e00\u822c\u200b\u4f1a\u200b\u7ed9\u200b X \u200b\u8f74\u200b\u548c\u200b Z \u200b\u8f74\u200b\u5750\u6807\u200b\u5206\u522b\u200b\u6784\u5efa\u200b\u6709\u5e8f\u200b\u7684\u200b\u94fe\u8868\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5b9e\u4f53\u200b\u5728\u200b\u94fe\u8868\u200b\u4e0a\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u5b58\u653e\u200b\u7684\u200b\u662f\u200b\u8be5\u200b\u5750\u6807\u8f74\u200b\u503c\u200b\uff0c\u200b\u6309\u7167\u200b\u503c\u200b\u9012\u589e\u200b\u7684\u200b\u987a\u5e8f\u200b\u6765\u200b\u5b58\u653e\u200b\u3002\u200b\u4f46\u200b\u5982\u679c\u200b\u53ea\u662f\u200b\u5b58\u653e\u200b\u5b9e\u4f53\u200b\u672c\u8eab\u200b\u7684\u200b\u5750\u6807\u200b\u70b9\u200b\uff0c\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u94fe\u8868\u200b\u505a\u200b\u67e5\u8be2\u200b\u7684\u200b\u6548\u7387\u200b\u4f9d\u7136\u200b\u5f88\u200b\u4f4e\u200b\u3002</p> <p>\u200b\u771f\u6b63\u200b\u5173\u952e\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u94fe\u8868\u200b\u4e0a\u200b\u8fd8\u200b\u4f1a\u200b\u7ed9\u200b\u62e5\u6709\u200b AOI \u200b\u7684\u200b\u6bcf\u4e2a\u200b\u73a9\u5bb6\u200b\u589e\u52a0\u200b\u5de6\u53f3\u4e24\u4e2a\u200b\u54e8\u5175\u200b\u8282\u70b9\u200b\u3002\u200b\u4e24\u4e2a\u200b\u54e8\u5175\u200b\u7684\u200b\u5750\u6807\u503c\u200b\u8ddf\u200b\u73a9\u5bb6\u200b\u672c\u8eab\u200b\u5750\u6807\u200b\u6b63\u597d\u200b\u76f8\u5dee\u200b\u4e86\u200b AOI \u200b\u534a\u5f84\u200b\uff0c\u200b\u8b6c\u5982\u200b\u73a9\u5bb6\u200b <code>P</code> \u200b\u5750\u6807\u200b\u4e3a\u200b <code>(a, b, c)</code>\uff0cAOI \u200b\u534a\u5f84\u200b\u4e3a\u200b <code>r</code> \uff0c\u200b\u90a3\u4e48\u200b\u5728\u200b X \u200b\u8f74\u4e0a\u200b\u4f1a\u200b\u6709\u200b\u4e24\u4e2a\u200b\u54e8\u5175\u200b <code>left_x, right_x</code>\uff0c\u200b\u5750\u6807\u503c\u200b\u5206\u522b\u200b\u4e3a\u200b <code>a - r</code> \u200b\u548c\u200b <code>a + r</code>\u3002\u200b\u7531\u4e8e\u200b\u6709\u200b\u54e8\u5175\u200b\u7684\u200b\u5b58\u5728\u200b\uff0c\u200b\u6211\u4eec\u200b\u901a\u8fc7\u200b\u8ddf\u8e2a\u200b\u54e8\u5175\u200b\u8ddf\u200b\u5176\u4ed6\u200b\u5b9e\u4f53\u200b\u8282\u70b9\u200b\u7684\u200b\u79fb\u52a8\u200b\u6765\u200b\u66f4\u65b0\u200b AOI\u3002\u200b\u7ee7\u7eed\u200b\u524d\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5b9e\u4f53\u200b <code>E</code> \u200b\u79fb\u52a8\u200b\u5bfc\u81f4\u200b\u5728\u200b X \u200b\u8f74\u4e0a\u200b\u7684\u200b\u8282\u70b9\u200b\u4ece\u200b <code>left_x</code> \u200b\u7684\u200b\u53f3\u8fb9\u200b\u60f3\u200b\u5de6\u200b\u8de8\u8fc7\u200b <code>left_x</code> \u200b\u6765\u5230\u200b <code>left_x</code> \u200b\u7684\u200b\u5de6\u8fb9\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8bf4\u660e\u200b <code>E</code> \u200b\u80af\u5b9a\u200b\u662f\u200b\u79bb\u5f00\u200b\u4e86\u200b <code>P</code> \u200b\u7684\u200b AOI\uff1b\u200b\u540c\u7406\u200b\u5982\u679c\u200b\u5411\u200b\u53f3\u200b\u8de8\u8fc7\u200b\u4e86\u200b <code>right_x</code> \u200b\u4e5f\u200b\u662f\u200b\u79bb\u5f00\u200b\u4e86\u200b AOI\u3002\u200b\u76f8\u53cd\u200b\uff0c\u200b\u5982\u679c\u200b\u662f\u200b\u5411\u200b\u53f3\u200b\u8de8\u8fc7\u200b <code>left_x</code>\uff0c\u200b\u6216\u8005\u200b\u5411\u200b\u5de6\u200b\u8de8\u8fc7\u200b <code>right_x</code>\uff0c\u200b\u8bf4\u660e\u200b\u6709\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u8fdb\u5165\u200b\u5230\u200b <code>P</code> \u200b\u7684\u200b AOI \u200b\u4e2d\u200b\u3002</p> <p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\uff0c\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u7b97\u6cd5\u200b\u8981\u200b\u6bd4\u200b\u4e5d\u5bab\u683c\u200b\u590d\u6742\u200b\u5f97\u200b\u591a\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u7ef4\u62a4\u200b\u4e24\u6761\u200b\u6709\u5e8f\u200b\u7684\u200b\u94fe\u8868\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u5b9e\u4f53\u200b\u5750\u6807\u200b\u66f4\u65b0\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u540c\u6b65\u200b\u79fb\u52a8\u200b\u94fe\u8868\u200b\u4e0a\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b\u79fb\u52a8\u200b\u8de8\u8fc7\u200b\u5176\u4ed6\u200b\u8282\u70b9\u200b\u65f6\u200b\u66f4\u65b0\u200b AOI\u3002</p>","tags":["dev","game"]},{"location":"game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#_4","title":"\u4e5d\u5bab\u683c\u200b\u7684\u200b\u5b9e\u73b0","text":"<p>\u200b\u56e0\u4e3a\u200b\u6d89\u53ca\u200b\u5230\u200b\u5b9e\u6d4b\u200b\u7684\u200b\u6027\u80fd\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u5148\u200b\u6765\u200b\u7a0d\u5fae\u200b\u6df1\u5165\u200b\u4e00\u70b9\u200b\u4e5d\u5bab\u683c\u200b\u7b97\u6cd5\u200b\u7684\u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\uff1a</p> <pre><code>struct Sensor {\n  // ...\n  Nuid sensor_id;\n  float radius;\n  float radius_square;\n  PlayerPtrList aoi_players[2];\n};\n\nstruct PlayerAoi {\n  // ...    \n  Nuid nuid;\n  SquareId square_id;\n  int square_index;\n  Pos pos;\n  Pos last_pos;\n  Uint32 flags;\n  std::vector&lt;Sensor&gt; sensors;\n};\n</code></pre> <p><code>PlayerAoi</code> \u200b\u5b58\u653e\u200b\u73a9\u5bb6\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u5176\u4e2d\u200b\u6709\u200b\u4e00\u4e2a\u200b <code>sensors</code> \u200b\u6570\u7ec4\u200b\uff0c<code>sensors</code> \u200b\u5c31\u662f\u200b\u7528\u6765\u200b\u8ba1\u7b97\u200b\u4e00\u5b9a\u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u5b9e\u4f53\u200b\uff0c\u200b\u6bcf\u6b21\u200b <code>Tick</code> \u200b\u4e4b\u540e\u200b\u628a\u200b\u8ba1\u7b97\u51fa\u6765\u200b\u7684\u200b\u5b9e\u4f53\u200b\u8ba1\u5212\u200b\u653e\u5728\u200b <code>aoi_players</code>\u3002<code>aoi_players</code> \u200b\u662f\u200b\u5b58\u653e\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u7528\u4e8e\u200b\u4e0a\u200b\u4e00\u6b21\u200b <code>Tick</code> \u200b\u7ed3\u679c\u200b\u505a\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u6c42\u200b\u51fa\u200b\u8fdb\u5165\u200b\u548c\u200b\u79bb\u5f00\u200b\u73a9\u5bb6\u200b\u3002 <code>Tick</code> \u200b\u7684\u200b\u5927\u81f4\u200b\u6d41\u7a0b\u200b\u662f\u200b\u8fd9\u6837\u200b\uff1a</p> <pre><code>AoiUpdateInfos SquareAoi::Tick() {\n  AoiUpdateInfos update_infos;\n  PlayerPtrList remove_list;\n\n  for (auto&amp; elem : player_map_) {\n    auto&amp; player = *elem.second;\n    // ...\n    // \u200b\u5bf9\u200b\u6709\u200b sensors \u200b\u7684\u200b\u73a9\u5bb6\u200b\u8ba1\u7b97\u200b Aoi\n    if (!player.sensors.empty()) {\n      auto update_info = _UpdatePlayerAoi(cur_aoi_map_idx_, &amp;player);\n      if (!update_info.sensor_update_list.empty()) {\n        update_infos.emplace(update_info.nuid, std::move(update_info));\n      }\n    }\n    // ...\n  }\n\n  // ...\n  // \u200b\u8bb0\u5f55\u200b\u73a9\u5bb6\u200b\u4e0a\u6b21\u200b\u7684\u200b\u4f4d\u7f6e\u200b\n  for (auto&amp; elem : player_map_) {\n    auto&amp; player = *elem.second;\n    player.last_pos = player.pos;\n  }\n  cur_aoi_map_idx_ = 1 - cur_aoi_map_idx_;\n  return update_infos;\n}\n</code></pre> <p><code>Tick</code> \u200b\u505a\u200b\u7684\u200b\u4e8b\u60c5\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u904d\u5386\u200b\u6709\u200b <code>sensors</code> \u200b\u7684\u200b\u73a9\u5bb6\u200b\uff0c\u200b\u9010\u4e2a\u200b\u8ba1\u7b97\u200b <code>sensor</code> \u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u5b9e\u4f53\u200b\uff0c\u200b\u5373\u200b\u4e3a\u200b AOI\u3002<code>last_pos</code> \u200b\u662f\u200b\u7528\u6765\u200b\u53c2\u4e0e\u200b\u5224\u65ad\u200b\u5b9e\u4f53\u200b\u662f\u5426\u200b\u6709\u200b\u8fdb\u5165\u200b\u6216\u8005\u200b\u79bb\u5f00\u200b AOI\uff0c<code>_UpdatePlayerAoi</code> \u200b\u7684\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>AoiUpdateInfo SquareAoi::_UpdatePlayerAoi(Uint32 cur_aoi_map_idx, PlayerAoi* pptr) {\n  AoiUpdateInfo aoi_update_info;\n  aoi_update_info.nuid = pptr-&gt;nuid;\n  Uint32 new_aoi_map_idx = 1 - cur_aoi_map_idx;\n\n  for (auto&amp; sensor : pptr-&gt;sensors) {\n    auto&amp; old_aoi = sensor.aoi_players[cur_aoi_map_idx];\n    auto&amp; new_aoi = sensor.aoi_players[new_aoi_map_idx];\n    (this-&gt;*calc_aoi_players_func_)(*pptr, sensor, &amp;new_aoi);\n\n    SensorUpdateInfo update_info;\n\n    auto&amp; enters = update_info.enters;\n    auto&amp; leaves = update_info.leaves;\n    float radius_square = sensor.radius_square;\n\n    _CheckLeave(pptr, radius_square, old_aoi, &amp;leaves);\n    _CheckEnter(pptr, radius_square, new_aoi, &amp;enters);\n\n    if (enters.empty() &amp;&amp; leaves.empty()) {\n      continue;\n    }\n\n    update_info.sensor_id = sensor.sensor_id;\n    aoi_update_info.sensor_update_list.push_back(std::move(update_info));\n  }\n\n  return aoi_update_info;\n}\n</code></pre> <p><code>old_aoi</code> \u200b\u662f\u200b\u4e0a\u200b\u4e00\u4e2a\u200b <code>Tick</code> \u200b\u8ba1\u7b97\u51fa\u6765\u200b\u7684\u200b AOI\uff0c<code>new_aoi</code> \u200b\u662f\u200b\u672c\u6b21\u200b <code>Tick</code> \u200b\u9700\u8981\u200b\u8ba1\u7b97\u200b\u7684\u200b AOI\u3002<code>new_aoi</code> \u200b\u901a\u8fc7\u200b\u904d\u5386\u200b AOI \u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u6240\u6709\u200b\u683c\u5b50\u200b\u7684\u200b\u5b9e\u4f53\u200b\uff0c\u200b\u9009\u51fa\u200b\u8ddf\u200b\u73a9\u5bb6\u200b\u8ddd\u79bb\u200b\u5c0f\u4e8e\u200b AOI \u200b\u534a\u5f84\u200b\u6765\u200b\u83b7\u5f97\u200b\u3002\u200b\u4e4b\u540e\u200b\u7528\u200b <code>_CheckLeave</code> \u200b\u548c\u200b <code>_CheckEnter</code> \u200b\u4e24\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u672c\u6b21\u200b <code>Tick</code> \u200b\u79bb\u5f00\u200b\u548c\u200b\u8fdb\u5165\u200b AOI \u200b\u7684\u200b\u5b9e\u4f53\u200b\uff0c\u200b\u8b6c\u5982\u200b\u5982\u679c\u200b <code>new_aoi</code> \u200b\u4e2d\u200b\u7684\u200b\u5b9e\u4f53\u200b <code>last_pos</code> \u200b\u4e0d\u200b\u5728\u200b AOI\u200b\u8303\u56f4\u200b\u5185\u200b\uff0c\u200b\u8bf4\u660e\u200b\u8be5\u200b\u5b9e\u4f53\u200b\u662f\u200b\u5728\u200b\u672c\u6b21\u200b <code>Tick</code> \u200b\u8fdb\u5165\u200b\u5230\u200b\u4e86\u200b AOI \u200b\u8303\u56f4\u200b\u3002\u200b\u5177\u4f53\u200b\u7684\u200b\u4ee3\u7801\u200b\u53ef\u4ee5\u200b\u770b\u200b\u6e90\u6587\u4ef6\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4e0d\u518d\u200b\u8d58\u8ff0\u200b\u3002</p>","tags":["dev","game"]},{"location":"game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#_5","title":"\u5341\u5b57\u200b\u94fe\u8868\u200b\u7684\u200b\u5b9e\u73b0","text":"<p>\u200b\u76f8\u6bd4\u200b\u8d77\u200b\u4e5d\u5bab\u683c\u200b\uff0c\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u5b9e\u73b0\u200b\u8d77\u6765\u200b\u66f4\u200b\u590d\u6742\u200b\uff0c\u200b\u5148\u200b\u6765\u770b\u200b\u57fa\u672c\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff1a</p> <pre><code>struct CoordNode {\n  // ...\n  Uint8 type;\n  float value;\n  CoordNode *prev = nullptr;\n  CoordNode *next = nullptr;\n  PlayerAoi *pplayer;\n  Sensor *psensor;\n\n};\n\nKHASH_MAP_INIT_INT64(SensorHashMap, PlayerAoi*);\n\nstruct Sensor {\n  // ...\n  Nuid sensor_id;\n  float radius;\n  float radius_square;\n  PlayerAoi *pplayer;\n  CoordNode left_x;\n  CoordNode right_x;\n  CoordNode left_z;\n  CoordNode right_z;\n  PlayerPtrList aoi_players[2];\n\n  std::shared_ptr&lt;khash_t(SensorHashMap)&gt; aoi_player_candidates;\n};\n\nstruct PlayerAoi {\n  // ...\n  Nuid nuid;\n  Pos pos;\n  Pos last_pos;\n  Uint32 flags;\n  CoordNode node_x;\n  CoordNode node_z;\n  std::vector&lt;Sensor&gt; sensors;\n  std::shared_ptr&lt;boost::unordered_map&lt;Nuid, std::vector&lt;Nuid&gt;&gt;&gt; detected_by;\n};\n</code></pre> <p><code>Sensor</code> \u200b\u548c\u200b <code>PlayerAoi</code> \u200b\u8ddf\u200b\u4e5d\u5bab\u683c\u200b\u6709\u200b\u90e8\u5206\u200b\u76f8\u4f3c\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u591a\u200b\u4e86\u200b\u94fe\u8868\u200b\u76f8\u5173\u200b\u7684\u200b\u8282\u70b9\u200b\u7ed3\u6784\u200b <code>CoordNode</code>\u3002<code>CoordNode</code> \u200b\u5c31\u662f\u200b\u94fe\u8868\u200b\u4e0a\u200b\u7684\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u4e86\u200b\u672c\u8eab\u200b\u8282\u70b9\u200b\u7684\u200b\u7c7b\u578b\u200b\u548c\u200b\u6570\u503c\u200b\uff0c\u200b\u7c7b\u578b\u200b\u6709\u200b\u4e09\u79cd\u200b\uff1a\u200b\u73a9\u5bb6\u200b\u8282\u70b9\u200b\uff0c<code>Sensor</code> \u200b\u5de6\u200b\u8282\u70b9\u200b\uff0c<code>Sensor</code> \u200b\u53f3\u200b\u8282\u70b9\u200b\u3002</p> <p>\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u7684\u200b\u5927\u90e8\u5206\u200b\u5de5\u4f5c\u200b\u90fd\u200b\u662f\u200b\u5728\u200b\u7ef4\u6301\u200b\u94fe\u8868\u200b\u7684\u200b\u6709\u5e8f\u200b\uff1a</p> <ul> <li>\u200b\u73a9\u5bb6\u200b\u52a0\u5165\u200b\u65f6\u200b\u9700\u8981\u200b\u628a\u200b\u73a9\u5bb6\u200b\u8282\u70b9\u200b\u79fb\u52a8\u200b\u5230\u200b\u6709\u5e8f\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b\u79fb\u52a8\u200b\u73a9\u5bb6\u200b\u8282\u70b9\u200b\u7684\u200b\u540c\u65f6\u200b\uff0c\u200b\u5904\u7406\u200b\u8fdb\u5165\u200b\u6216\u8005\u200b\u79bb\u5f00\u200b\u5176\u4ed6\u200b\u73a9\u5bb6\u200b AOI \u200b\u4e8b\u4ef6\u200b\u3002</li> <li>\u200b\u73a9\u5bb6\u200b\u79fb\u52a8\u200b\u5230\u200b\u6b63\u786e\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u540e\u200b\uff0c<code>Sensor</code> \u200b\u5de6\u53f3\u200b\u8282\u70b9\u200b\u4ece\u200b\u73a9\u5bb6\u200b\u524d\u540e\u200b\u4f4d\u7f6e\u200b\u51fa\u53d1\u200b\uff0c\u200b\u79fb\u52a8\u200b\u5230\u200b\u6b63\u786e\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u5e76\u200b\u5904\u7406\u200b\u8de8\u8fc7\u200b\u5176\u4ed6\u200b\u73a9\u5bb6\u200b\u8282\u70b9\u200b\u65f6\u200b\u89e6\u53d1\u200b\u7684\u200b\u8fdb\u5165\u200b\u548c\u200b\u79bb\u5f00\u200b\u4e8b\u4ef6\u200b\u3002</li> <li>\u200b\u73a9\u5bb6\u200b\u79fb\u52a8\u200b\u65f6\u200b\uff0c\u200b\u66f4\u65b0\u200b\u73a9\u5bb6\u200b\u7684\u200b\u5750\u6807\u200b\uff0c\u200b\u5e76\u200b\u79fb\u52a8\u200b\u73a9\u5bb6\u200b\u8282\u70b9\u200b\u548c\u200b <code>Sensor</code> \u200b\u5de6\u53f3\u200b\u8282\u70b9\u200b\uff0c\u200b\u5904\u7406\u200b AOI \u200b\u8fdb\u5165\u200b\u79bb\u5f00\u200b\u3002</li> </ul> <p>\u200b\u79fb\u52a8\u200b\u8282\u70b9\u200b\u7684\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff0c\u200b\u6bcf\u200b\u8de8\u8fc7\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u90fd\u200b\u4f1a\u200b\u8c03\u7528\u200b\u4e00\u6b21\u200b <code>MoveCross</code> \u200b\u51fd\u6570\u200b\uff0c\u200b\u7531\u200b <code>MoveCross</code> \u200b\u51fd\u6570\u200b\u6839\u636e\u200b\u79fb\u52a8\u200b\u65b9\u5411\u200b\uff0c\u200b\u79fb\u52a8\u200b\u8282\u70b9\u200b\u548c\u200b\u8de8\u8fc7\u200b\u8282\u70b9\u200b\u7684\u200b\u7c7b\u578b\u200b\u6765\u200b\u51b3\u5b9a\u200b\u662f\u200b\u8fdb\u5165\u200b\u8fd8\u662f\u200b\u79bb\u5f00\u200b AOI\u3002</p> <pre><code>void ListUpdateNode(CoordNode **list, CoordNode *pnode) {\n  float value = pnode-&gt;value;\n\n  if (pnode-&gt;next &amp;&amp; pnode-&gt;next-&gt;value &lt; value) {\n    // move right\n    auto cur_node = pnode-&gt;next;\n    while (1) {\n      MoveCross(MOVE_DIRECTION_RIGHT, pnode, cur_node);\n      if (!cur_node-&gt;next || cur_node-&gt;next-&gt;value &gt;= value) break;\n      cur_node = cur_node-&gt;next;\n    }\n\n    ListRemove(list, pnode);\n    ListInsertAfter(list, cur_node, pnode);\n\n  } else if (pnode-&gt;prev &amp;&amp; pnode-&gt;prev-&gt;value &gt; value) {\n    // move left\n    auto cur_node = pnode-&gt;prev;\n    while (1) {\n      MoveCross(MOVE_DIRECTION_LEFT, pnode, cur_node);\n      if (!cur_node-&gt;prev || cur_node-&gt;prev-&gt;value &lt;= value) break;\n      cur_node = cur_node-&gt;prev;\n    }\n\n    ListRemove(list, pnode);\n    ListInsertBefore(list, cur_node, pnode);\n  }\n}\n</code></pre> <p>\u200b\u94fe\u8868\u200b\u7684\u200b\u79fb\u52a8\u200b\u5f88\u200b\u6162\u200b\uff0c\u200b\u662f\u200b <code>O(n)</code> \u200b\u7684\u200b\u590d\u6742\u5ea6\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u73a9\u5bb6\u200b\u65b0\u200b\u52a0\u5165\u200b\u573a\u666f\u200b\u65f6\u200b\uff0c\u200b\u73a9\u5bb6\u200b\u9700\u8981\u200b\u4ece\u200b\u65e0\u7a77\u8fdc\u200b\u7684\u200b\u5730\u65b9\u200b\uff0c\u200b\u9010\u6b65\u200b\u79fb\u52a8\u200b\u5230\u200b\u6b63\u786e\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\uff0c\u200b\u4e3a\u6b64\u200b\u9700\u8981\u200b\u5927\u91cf\u200b\u904d\u5386\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u6d88\u8017\u200b\u5f88\u5927\u200b\u3002\u200b\u4e3a\u4e86\u200b\u4f18\u5316\u200b\u6027\u80fd\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u573a\u666f\u200b\u4e2d\u200b\u56fa\u5b9a\u200b\u4f4d\u7f6e\u200b\u653e\u7f6e\u200b\u706f\u5854\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u706f\u5854\u200b\u5904\u7406\u200b\u4e0a\u200b\u8ddf\u200b\u73a9\u5bb6\u200b\u5927\u81f4\u76f8\u540c\u200b\uff0c\u200b\u53ea\u662f\u200b\u6bd4\u200b\u73a9\u5bb6\u200b\u591a\u200b\u8bb0\u5f55\u200b\u4e86\u200b\u4e00\u4efd\u200b <code>detected_by</code> \u200b\u6570\u636e\u200b\uff0c<code>detected_by</code> \u200b\u662f\u200b\u7528\u6765\u200b\u8bb0\u5f55\u200b\u8be5\u200b\u54e8\u5175\u200b\u5b9e\u4f53\u200b\u5904\u5728\u200b\u54ea\u4e9b\u200b <code>Sensor</code> \u200b\u8303\u56f4\u200b\u5185\u200b\u3002\u200b\u73a9\u5bb6\u200b\u9996\u6b21\u200b\u8fdb\u5165\u200b\u573a\u666f\u200b\u65f6\u200b\uff0c\u200b\u4e0d\u518d\u200b\u4ece\u200b\u6700\u200b\u8fdc\u5904\u200b\u5f00\u59cb\u200b\u79fb\u52a8\u200b\uff0c\u200b\u800c\u662f\u200b\u627e\u5230\u200b\u4e00\u4e2a\u200b\u6700\u8fd1\u200b\u7684\u200b\u706f\u5854\u200b\uff0c\u200b\u628a\u200b\u8282\u70b9\u200b\u63d2\u5165\u200b\u5230\u200b\u706f\u5854\u200b\u65c1\u8fb9\u200b\uff0c\u200b\u5e76\u200b\u901a\u8fc7\u200b\u706f\u5854\u200b\u8eab\u4e0a\u200b\u7684\u200b <code>detected_by</code> \u200b\u6570\u636e\u200b\uff0c\u200b\u5feb\u901f\u200b\u8fdb\u5165\u200b\u5230\u200b\u8ddf\u200b\u706f\u5854\u200b\u4e00\u81f4\u200b\u7684\u200b\u5176\u4ed6\u200b\u73a9\u5bb6\u200b\u7684\u200b AOI \u200b\u8303\u56f4\u200b\u5185\u200b\uff0c\u200b\u7136\u540e\u200b\u5f00\u59cb\u200b\u79fb\u52a8\u200b\u5230\u200b\u6b63\u786e\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\uff0c\u200b\u5f53\u7136\u200b\u79fb\u52a8\u200b\u7684\u200b\u65f6\u5019\u200b\u4e5f\u200b\u8981\u200b\u5904\u7406\u200b\u8fdb\u5165\u200b\u548c\u200b\u79bb\u5f00\u200b\u3002\u200b\u540c\u7406\u200b\uff0c\u200b\u5bf9\u4e8e\u200b <code>Sensor</code>\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5148\u200b\u7ee7\u627f\u200b\u706f\u5854\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u7136\u540e\u200b\u4ece\u200b\u706f\u5854\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\u79fb\u52a8\u200b\u5230\u200b\u6b63\u786e\u200b\u4f4d\u7f6e\u200b\u4e0a\u200b\u3002\u200b\u901a\u8fc7\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u4f18\u5316\u200b\u80fd\u591f\u200b\u63d0\u5347\u200b\u4e00\u500d\u200b\u4ee5\u4e0a\u200b\u7684\u200b\u63d2\u5165\u200b\u73a9\u5bb6\u200b\u6027\u80fd\u200b\u3002</p> <p><code>Sensor</code> \u200b\u8eab\u4e0a\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200b\u540d\u53eb\u200b <code>aoi_player_candidates</code> \u200b\u7684\u200b <code>HashMap</code>\uff08\u200b\u8fd9\u91cc\u200b\u4e3a\u4e86\u200b\u6027\u80fd\u200b\uff0c\u200b\u4f7f\u7528\u200b\u4e86\u200bkhash\uff09\u3002\u200b\u8282\u70b9\u200b\u79fb\u52a8\u200b\u89e6\u53d1\u200b\u7684\u200b AOI \u200b\u4e8b\u4ef6\u200b\uff0c\u200b\u5176\u5b9e\u200b\u53ea\u80fd\u200b\u68c0\u6d4b\u200b\u5230\u200b X-Z \u200b\u5750\u6807\u8f74\u200b\u4e0a\u200b\u8fb9\u957f\u200b\u4e3a\u200b <code>2r</code> \u200b\u7684\u200b\u6b63\u65b9\u5f62\u200b\u533a\u57df\u200b\uff0c\u200b\u4e0d\u662f\u200b\u6211\u4eec\u200b\u4e25\u683c\u200b\u610f\u4e49\u200b\u4e0a\u200b\u7684\u200b\u5706\u5f62\u200b\u533a\u57df\u200b\u7684\u200b AOI\uff0c\u200b\u8fd9\u4e2a\u200b\u6b63\u65b9\u5f62\u200b\u7684\u200b\u533a\u57df\u200b\u5185\u200b\u7684\u200b\u5b9e\u4f53\u200b\u90fd\u200b\u88ab\u200b\u8bb0\u5f55\u200b\u5728\u200b <code>aoi_player_candidates</code> \u200b\u4e0a\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b <code>Tick</code> \u200b\u4e2d\u200b\u904d\u5386\u200b\u8ba1\u7b97\u200b\u5706\u5f62\u200b\u533a\u57df\u200b\u5185\u200b\u7684\u200b AOI \u200b\u8303\u56f4\u200b\uff0c\u200b\u6240\u4ee5\u200b\u79f0\u4e3a\u200b <code>candidates</code>\u3002</p> <p>\u200b\u6240\u6709\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u7684\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u662f\u200b\u4e3a\u4e86\u200b\u4e00\u76f4\u200b\u7ef4\u62a4\u200b\u6b63\u65b9\u5f62\u200b\u533a\u57df\u200b\u5185\u200b\u7684\u200b\u5b9e\u4f53\u200b <code>candidates</code>\uff0c\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u4e2d\u200b <code>Tick</code> \u200b\u505a\u200b\u7684\u200b\u64cd\u4f5c\u200b\u8ddf\u200b\u4e5d\u5bab\u683c\u200b\u51e0\u4e4e\u200b\u4e00\u81f4\u200b\uff0c\u200b\u53ea\u662f\u200b\u904d\u5386\u200b\u8ba1\u7b97\u200b AOI \u200b\u7684\u200b <code>candidates</code> \u200b\u4e0d\u200b\u76f8\u540c\u200b\u3002\u200b\u4e5d\u5bab\u683c\u200b\u7684\u200b <code>candidates</code> \u200b\u662f\u200b AOI \u200b\u5706\u5f62\u200b\u533a\u57df\u200b\u6240\u200b\u8986\u76d6\u200b\u5230\u200b\u7684\u200b\u683c\u5b50\u200b\u7684\u200b\u5b9e\u4f53\u200b\uff0c\u200b\u800c\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u5219\u200b\u662f\u200b\u7531\u200b <code>Sensor</code> \u200b\u5de6\u53f3\u200b\u8282\u70b9\u200b\u6240\u200b\u754c\u5b9a\u200b\u7684\u200b\u8fb9\u957f\u200b\u4e3a\u200b <code>2r</code> \u200b\u7684\u200b\u6b63\u65b9\u5f62\u200b\u533a\u57df\u200b\u4e2d\u200b\u7684\u200b\u5b9e\u4f53\u200b\u3002\u200b\u5b9a\u6027\u200b\u7684\u200b\u6765\u8bf4\u200b\uff0c\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u7684\u200b <code>candidates</code> \u200b\u4e00\u822c\u200b\u90fd\u200b\u8981\u200b\u6bd4\u200b\u4e5d\u5bab\u683c\u200b\u5c11\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5728\u200b <code>Tick</code> \u200b\u4e2d\u200b\u7684\u200b\u904d\u5386\u200b\u6b21\u6570\u200b\u5c11\u200b\uff0c\u200b\u6027\u80fd\u200b\u66f4\u4f18\u200b\uff0c\u200b\u53ea\u662f\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u8fd8\u6709\u200b\u5927\u91cf\u200b\u989d\u5916\u200b\u7684\u200b\u6027\u80fd\u200b\u6d88\u8017\u200b\u5728\u200b\u4e86\u200b\u7ef4\u62a4\u200b\u94fe\u8868\u200b\u4e0a\u200b\uff0c\u200b\u8fd9\u200b\u4e24\u8005\u200b\u6574\u4f53\u200b\u7684\u200b\u6027\u80fd\u200b\u5230\u5e95\u200b\u5b70\u200b\u4f18\u5b70\u52a3\u200b\uff0c\u200b\u6211\u4eec\u200b\u63a5\u4e0b\u6765\u200b\u5b9e\u6d4b\u200b\u770b\u770b\u200b\u3002</p>","tags":["dev","game"]},{"location":"game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#_6","title":"\u6027\u80fd\u200b\u5b9e\u6d4b","text":"<p>\u200b\u6211\u200b\u8fd9\u91cc\u200b\u5206\u522b\u200b\u6d4b\u200b\u4e86\u200b\u73a9\u5bb6\u200b\u52a0\u5165\u200b\u573a\u666f\u200b\uff08<code>Add Player</code>\uff09\uff0c\u200b\u8ba1\u7b97\u200b AOI \u200b\u8fdb\u51fa\u200b\u4e8b\u4ef6\u200b\uff08<code>Tick</code>\uff09\uff0c\u200b\u73a9\u5bb6\u200b\u66f4\u65b0\u200b\u5750\u6807\u200b\u4f4d\u7f6e\u200b\uff08<code>Update Pos</code>\uff09\u200b\u4e09\u79cd\u200b\u60c5\u51b5\u200b\u7684\u200b\u65f6\u95f4\u200b\u6d88\u8017\u200b\u3002</p> <p>\u200b\u73a9\u5bb6\u200b\u521d\u59cb\u200b\u4f4d\u7f6e\u200b\u5728\u200b\u5730\u56fe\u200b\u8303\u56f4\u200b\u5185\u200b\u968f\u673a\u200b\u751f\u6210\u200b\uff0c\u200b\u7136\u540e\u200b\u628a\u200b\u73a9\u5bb6\u200b\u52a0\u5165\u200b\u573a\u666f\u200b\u3002<code>player_num</code> \u200b\u662f\u200b\u73a9\u5bb6\u200b\u6570\u91cf\u200b\uff0c<code>map_size</code> \u200b\u5219\u200b\u662f\u200b\u5730\u56fe\u200b X-Z \u200b\u5750\u6807\u8f74\u200b\u8303\u56f4\u200b\uff0c\u200b\u73a9\u5bb6\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u5728\u200b\u6b64\u200b\u8303\u56f4\u200b\u5185\u200b\u5747\u5300\u200b\u968f\u673a\u200b\u751f\u6210\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u73a9\u5bb6\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u534a\u5f84\u200b <code>100</code> \u200b\u7684\u200b <code>Sensor</code> \u200b\u4f5c\u4e3a\u200b AOI\uff0c\u200b\u8ba1\u7b97\u200b\u65f6\u95f4\u200b\u7528\u200b\u7684\u200b\u662f\u200b <code>boost::timer::cpu_timer</code>\u3002<code>player_num</code> \u200b\u5206\u522b\u200b\u9009\u200b\u4e86\u200b <code>100, 1000, 10000</code> \u200b\u4e09\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u800c\u200b <code>map_size</code> \u200b\u5219\u200b\u9009\u200b\u4e86\u200b <code>[-50, 50], [-100, 100], [-1000, 1000], [-10000, 10000]</code> \u200b\u56db\u79cd\u200b\u60c5\u51b5\u200b\u3002</p> <p>\u200b\u66f4\u65b0\u200b\u73a9\u5bb6\u200b\u4f4d\u7f6e\u200b\u4f1a\u200b\u8ba9\u73a9\u5bb6\u200b\u56fa\u5b9a\u200b\u968f\u673a\u200b\u65b9\u5411\u200b\uff0c\u200b\u4ee5\u200b <code>6m/s</code> \u200b\u7684\u200b\u901f\u5ea6\u200b\u79fb\u52a8\u200b\u3002</p> <p>\u200b\u672c\u6b21\u200b\u6d4b\u8bd5\u73af\u5883\u200b\u4e3a\u200b\uff1a</p> <ul> <li>CPU: Intel(R) Core(TM) i5-4590 CPU @ 3.30GHz</li> <li>\u200b\u7cfb\u7edf\u200b: Debian GNU/Linux 10 (buster)</li> <li>gcc \u200b\u7248\u672c\u200b: gcc version 8.3.0 (Debian 8.3.0-6)</li> <li>boost \u200b\u7248\u672c\u200b: boost_1_75_0</li> </ul>","tags":["dev","game"]},{"location":"game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#_7","title":"\u4e5d\u5bab\u683c\u200b\u5b9e\u6d4b","text":"<p>\u200b\u4e5d\u5bab\u683c\u200b\u7684\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>===Begin Milestore: player_num = 100, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 0.000081s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000452s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000230s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 0.000070s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000338s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000185s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 0.000084s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000103s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000187s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.000084s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000080s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000185s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 0.000673s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.035298s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (85.0%)\nUpdate Pos (10 times) 0.001841s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 0.000664s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.025806s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (116.3%)\nUpdate Pos (10 times) 0.001842s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 0.000721s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.001793s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.001849s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (540.8%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.000885s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000804s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.001855s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 0.006454s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (154.9%)\nTick (1 times) 3.822028s wall, 3.800000s user + 0.020000s system = 3.820000s CPU (99.9%)\nUpdate Pos (10 times) 0.018402s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (108.7%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 0.006439s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 2.805551s wall, 2.760000s user + 0.040000s system = 2.800000s CPU (99.8%)\nUpdate Pos (10 times) 0.018489s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (54.1%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 0.006698s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (149.3%)\nTick (1 times) 0.093759s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (106.7%)\nUpdate Pos (10 times) 0.018350s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (54.5%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.009046s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (110.6%)\nTick (1 times) 0.012091s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (82.7%)\nUpdate Pos (10 times) 0.019033s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (105.1%)\n===End Milestore\n</code></pre> <p>\u200b\u4e5d\u5bab\u683c\u200b\u5728\u200b\u73a9\u5bb6\u200b\u6570\u91cf\u200b <code>100</code> \u200b\u65f6\u200b\uff0c\u200b\u4e09\u79cd\u200b\u64cd\u4f5c\u200b\u8017\u65f6\u200b\u90fd\u200b\u5f88\u5c0f\u200b\uff0c\u200b\u6781\u9650\u200b\u60c5\u51b5\u200b <code>map_size = [-50, 50]</code>\uff0c\u200b\u6240\u6709\u200b\u73a9\u5bb6\u200b\u4e92\u76f8\u200b\u90fd\u200b\u5904\u4e8e\u200b AOI \u200b\u8303\u56f4\u200b\u5185\u200b\uff0c<code>Tick</code> \u200b\u8017\u65f6\u200b\u5927\u6982\u200b <code>0.4ms</code>\u3002\u200b\u73a9\u5bb6\u200b\u52a0\u5165\u200b\u573a\u666f\u200b\u548c\u200b\u66f4\u65b0\u200b\u5750\u6807\u200b\u90fd\u200b\u662f\u200b\u7ebf\u6027\u200b\u590d\u6742\u5ea6\u200b <code>O(player_num)</code>\uff0c\u200b\u6027\u80fd\u200b\u8868\u73b0\u200b\u90fd\u200b\u4e0d\u9519\u200b\u3002\u200b\u5728\u200b <code>player_num = 10000, map_size = [-50, 50]</code> \u200b\u73a9\u5bb6\u200b\u4eba\u6570\u200b\u8fbe\u5230\u200b 1 \u200b\u4e07\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c<code>Add Player</code> \u200b\u548c\u200b <code>Update Pos</code> \u200b\u7531\u4e8e\u200b\u90fd\u200b\u662f\u200b\u7ebf\u6027\u200b\uff0c\u200b\u51e0\u200b\u6beb\u79d2\u200b\u5185\u200b\u5c31\u200b\u80fd\u200b\u5b8c\u6210\u200b\uff0c\u200b\u4f46\u200b <code>Tick</code> \u200b\u8017\u65f6\u200b\u5c31\u200b\u53bb\u200b\u5230\u200b <code>3.8s</code>\uff0c\u200b\u9700\u8981\u200b\u6d88\u8017\u200b\u5927\u91cf\u200b CPU\uff0c\u200b\u5c5e\u4e8e\u200b\u4e0d\u53ef\u200b\u7528\u200b\u4e86\u200b\u3002\u200b\u4eba\u6570\u200b 1 \u200b\u4e07\u200b\uff0c\u200b\u5730\u56fe\u200b\u5927\u5c0f\u200b <code>[-1000, 1000]</code>\uff0c\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>Tick</code> \u200b\u65f6\u95f4\u200b\u6d88\u8017\u200b\u5927\u6982\u200b <code>94ms</code>\uff0c\u200b\u5982\u679c\u200b\u80fd\u591f\u200b\u964d\u4f4e\u200b <code>Tick</code> \u200b\u9891\u7387\u200b\u7684\u8bdd\u200b\uff0c\u200b\u8b6c\u5982\u200b\u4e00\u79d2\u200b\u4e24\u6b21\u200b\uff0c\u200b\u8fd8\u662f\u200b\u52c9\u5f3a\u200b\u5c5e\u4e8e\u200b\u53ef\u7528\u200b\u7684\u200b\u8303\u56f4\u200b\u5185\u200b\u3002</p>","tags":["dev","game"]},{"location":"game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#_8","title":"\u5341\u5b57\u200b\u94fe\u8868\u200b\u5b9e\u6d4b","text":"<p>\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u7684\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>===Begin Milestore: player_num = 100, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 0.002057s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000330s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000232s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 0.001201s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000222s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000272s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 0.000288s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000048s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000200s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.000194s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000041s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000192s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 0.130766s wall, 0.130000s user + 0.000000s system = 0.130000s CPU (99.4%)\nTick (1 times) 0.028091s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (71.2%)\nUpdate Pos (10 times) 0.005369s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (186.2%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 0.103015s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (97.1%)\nTick (1 times) 0.019545s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (102.3%)\nUpdate Pos (10 times) 0.009208s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (108.6%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 0.010150s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (98.5%)\nTick (1 times) 0.000845s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.003023s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.004950s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (202.0%)\nTick (1 times) 0.000427s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.002234s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 21.606402s wall, 21.040000s user + 0.570000s system = 21.610000s CPU (100.0%)\nTick (1 times) 3.696885s wall, 3.680000s user + 0.030000s system = 3.710000s CPU (100.4%)\nUpdate Pos (10 times) 0.434396s wall, 0.430000s user + 0.000000s system = 0.430000s CPU (99.0%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 18.499235s wall, 18.470000s user + 0.020000s system = 18.490000s CPU (100.0%)\nTick (1 times) 2.292608s wall, 2.290000s user + 0.000000s system = 2.290000s CPU (99.9%)\nUpdate Pos (10 times) 1.522617s wall, 1.530000s user + 0.000000s system = 1.530000s CPU (100.5%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 1.642519s wall, 1.640000s user + 0.000000s system = 1.640000s CPU (99.8%)\nTick (1 times) 0.042767s wall, 0.050000s user + 0.000000s system = 0.050000s CPU (116.9%)\nUpdate Pos (10 times) 0.202949s wall, 0.200000s user + 0.000000s system = 0.200000s CPU (98.5%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.571257s wall, 0.570000s user + 0.000000s system = 0.570000s CPU (99.8%)\nTick (1 times) 0.006325s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (158.1%)\nUpdate Pos (10 times) 0.042568s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (94.0%)\n===End Milestore\n</code></pre> <p>\u200b\u5982\u200b\u6211\u4eec\u200b\u5206\u6790\u200b\u4e00\u81f4\u200b\uff0c\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u5728\u200b <code>Add Player</code> \u200b\u548c\u200b <code>Update Pos</code> \u200b\u4e0a\u200b\u8017\u65f6\u200b\u66f4\u957f\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b <code>Add Player</code>\uff0c\u200b\u76f8\u6bd4\u200b\u4e5d\u5bab\u683c\u200b\u6027\u80fd\u200b\u5dee\u200b\u4e86\u200b\u51e0\u767e\u200b\u751a\u81f3\u200b\u4e0a\u4e07\u500d\u200b\uff08<code>100, [-50, 50]</code> \u200b\u5341\u5b57\u200b\u94fe\u200b\u8017\u65f6\u200b <code>2ms</code>\uff0c\u200b\u800c\u200b\u4e5d\u5bab\u683c\u200b\u53ea\u6709\u200b <code>0.08ms</code>\uff1b<code>10000, [-50, 50]</code> \u200b\u5341\u5b57\u200b\u94fe\u200b <code>21.6s</code>\uff0c\u200b\u4e5d\u5bab\u683c\u200b\u53ea\u6709\u200b <code>6ms</code>\u3002<code>Update Pos</code> \u200b\u7684\u200b\u8017\u65f6\u200b\u4e5f\u200b\u6700\u591a\u4f1a\u200b\u6709\u200b\u767e\u500d\u200b\u7684\u200b\u5dee\u8ddd\u200b\uff0c<code>10000, [-100, 100]</code> \u200b\u5341\u5b57\u200b\u94fe\u200b\u66f4\u65b0\u200b\u73a9\u5bb6\u200b\u4f4d\u7f6e\u200b\u8017\u65f6\u200b <code>1.5s</code>\uff0c\u200b\u800c\u200b\u4e5d\u5bab\u683c\u200b\u662f\u200b <code>18ms</code>\u3002\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\uff0c\u200b\u5341\u5b57\u200b\u94fe\u200b\u5728\u200b <code>Add Player</code> \u200b\u548c\u200b <code>Update Pos</code> \u200b\u8017\u65f6\u200b\u7684\u200b\u4e0a\u200b\u4e0b\u9650\u200b\u8303\u56f4\u200b\u6bd4\u200b\u4e5d\u5bab\u683c\u200b\u8981\u200b\u5927\u200b\uff0c\u200b\u53d7\u200b\u4eba\u6570\u200b\u548c\u200b\u5730\u56fe\u200b\u5927\u5c0f\u200b\u5f71\u54cd\u200b\u66f4\u5927\u200b\uff0c\u200b\u5728\u200b\u73a9\u5bb6\u200b\u5bc6\u96c6\u200b\u7684\u200b\u533a\u57df\u200b\uff0c\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u64cd\u4f5c\u200b\u7684\u200b\u6027\u80fd\u200b\u4f1a\u200b\u6025\u901f\u200b\u4e0b\u964d\u200b\uff0c\u200b\u76f4\u81f3\u200b\u4e0d\u53ef\u200b\u7528\u200b\u3002</p> <p>\u200b\u53cd\u89c2\u200b\u5341\u5b57\u200b\u94fe\u200b\u7684\u200b <code>Tick</code> \u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6574\u4f53\u200b\u6027\u80fd\u200b\u786e\u5b9e\u200b\u662f\u200b\u6bd4\u200b\u4e5d\u5bab\u683c\u200b\u597d\u200b\uff0c\u200b\u6700\u597d\u200b\u7684\u200b\u60c5\u51b5\u200b\u8017\u65f6\u200b\u5927\u6982\u200b\u53ea\u6709\u200b\u4e5d\u5bab\u683c\u200b\u7684\u200b\u4e00\u534a\u5de6\u53f3\u200b\uff08 <code>1000, [-1000, 1000]</code> \u200b\u4e0b\u200b\u5341\u5b57\u200b\u94fe\u200b\u8017\u65f6\u200b <code>0.8ms</code>\uff0c\u200b\u4e5d\u5bab\u683c\u200b <code>1.8ms</code>\uff09\uff0c\u200b\u4f46\u662f\u200b\u6700\u5dee\u200b\u7684\u200b\u60c5\u51b5\u200b\u5341\u5b57\u200b\u94fe\u4f1a\u200b\u9000\u5316\u200b\u5230\u200b\u8ddf\u200b\u4e5d\u5bab\u683c\u200b\u7684\u200b\u6027\u80fd\u200b\u63a5\u8fd1\u200b\uff08<code>10000, [-10000, 10000]</code> \u200b\u4e0b\u200b\u5341\u5b57\u200b\u94fe\u200b\u8017\u65f6\u200b <code>3.7s</code>\uff0c\u200b\u4e5d\u5bab\u683c\u200b <code>3.8s</code>\u3002\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u7531\u4e8e\u200b\u573a\u666f\u200b\u5c0f\u200b\uff0c\u200b\u73a9\u5bb6\u200b\u4e92\u76f8\u200b\u90fd\u200b\u5728\u200b\u5f7c\u6b64\u200b\u7684\u200b AOI \u200b\u8303\u56f4\u200b\u5185\u200b\uff0c\u200b\u5341\u5b57\u200b\u94fe\u200b <code>Tick</code> \u200b\u904d\u5386\u200b\u7684\u200b <code>candidates</code> \u200b\u6570\u91cf\u200b, \u200b\u5176\u5b9e\u200b\u5df2\u7ecf\u200b\u8ddf\u200b\u4e5d\u5bab\u683c\u200b\u5f88\u200b\u63a5\u8fd1\u200b\u4e86\u200b\u3002</p> <p>\u200b\u5341\u5b57\u200b\u94fe\u200b\u4f7f\u7528\u200b\u8d77\u6765\u200b\u8981\u200b\u8fbe\u5230\u200b\u6bd4\u200b\u4e5d\u5bab\u683c\u200b\u6027\u80fd\u200b\u66f4\u4f18\u200b\uff0c\u200b\u9700\u8981\u200b\u4e00\u4e9b\u200b\u66f4\u5f3a\u200b\u7684\u200b\u5047\u8bbe\u200b\uff0c\u200b\u8b6c\u5982\u200b <code>player_num = 1000, map_size = [-1000, 1000]</code> \u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>Tick</code> \u200b\u8017\u65f6\u200b\u5341\u5b57\u200b\u94fe\u4e3a\u200b <code>0.8ms</code> \u200b\u4e5d\u5bab\u683c\u200b <code>1.8ms</code>\uff0c<code>Update Pos</code> \u200b\u5341\u5b57\u200b\u94fe\u4e3a\u200b <code>0.3ms</code> \u200b\u4e5d\u5bab\u683c\u200b <code>0.18ms</code>\uff08\u200b\u6ce8\u610f\u200b\u6d4b\u8bd5\u200b <code>Update Pos</code> \u200b\u65f6\u95f4\u200b\u4e3a\u200b\u6267\u884c\u200b\u4e86\u200b 10 \u200b\u6b21\u200b\u7684\u200b\u65f6\u95f4\u200b\u603b\u548c\u200b\uff09\u3002<code>Tick + Update Pos</code> \u200b\u603b\u200b\u65f6\u95f4\u200b\u4e0b\u200b\uff0c\u200b\u5341\u5b57\u200b\u94fe\u200b\u5982\u679c\u200b\u8981\u200b\u6bd4\u200b\u4e5d\u5bab\u683c\u200b\u66f4\u200b\u5c11\u200b\uff0c\u200b\u90a3\u200b <code>Update Pos</code> \u200b\u7684\u200b\u6b21\u6570\u200b\u4e0d\u80fd\u200b\u8d85\u8fc7\u200b <code>Tick</code> \u200b\u7684\u200b <code>8</code> \u200b\u500d\u200b\uff0c\u200b\u6216\u8005\u8bf4\u200b\u4e24\u4e2a\u200b <code>Tick</code> \u200b\u4e4b\u95f4\u200b\uff0c<code>Update Pos</code> \u200b\u7684\u200b\u6b21\u6570\u200b\u9700\u8981\u200b\u5c0f\u4e8e\u200b <code>8</code> \u200b\u6b21\u200b\u3002\u200b\u53e6\u5916\u200b\u56e0\u4e3a\u200b\u5341\u5b57\u200b\u94fe\u200b <code>Add Player</code> \u200b\u8017\u65f6\u200b\u5de8\u5927\u200b\uff0c\u200b\u4e0d\u9002\u200b\u7528\u4e8e\u200b\u73a9\u5bb6\u200b\u77ed\u65f6\u95f4\u200b\u9891\u7e41\u200b\u51fa\u5165\u200b\u573a\u666f\u200b\u6216\u8005\u200b\u5728\u200b\u573a\u666f\u200b\u5185\u5927\u200b\u8303\u56f4\u200b\u4f20\u9001\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u53e6\u5916\u200b\u5982\u679c\u200b\u77ed\u65f6\u95f4\u200b\u5185\u6709\u200b\u5927\u91cf\u200b\u73a9\u5bb6\u200b\u8fdb\u5165\u200b\u573a\u666f\u200b\uff0c\u200b\u4e5f\u200b\u5f88\u200b\u5bb9\u6613\u200b\u5bfc\u81f4\u200b\u6027\u80fd\u200b\u4e0b\u964d\u200b\uff0c\u200b\u5927\u91cf\u200b\u5360\u7528\u200b CPU\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\uff0c\u200b\u5728\u200b\u4e00\u4e2a\u200b\u524d\u63d0\u200b\u4e4b\u4e0b\u200b\u8fd8\u200b\u80fd\u200b\u505a\u200b\u4e00\u4e2a\u200b\u4f18\u5316\u200b\uff1a\u200b\u5e72\u6389\u200b <code>Tick</code>\uff0c\u200b\u524d\u63d0\u200b\u662f\u200b\u6e38\u620f\u200b\u80fd\u200b\u63a5\u53d7\u200b\u6b63\u65b9\u5f62\u200b\u7684\u200b AOI\uff0c\u200b\u5e76\u4e14\u200b\u9700\u8981\u200b\u5b9e\u6d4b\u200b\u6b63\u65b9\u5f62\u200b AOI \u200b\u5e26\u6765\u200b\u7684\u200b\u5176\u4ed6\u200b\u8bf8\u5982\u200b\u7f51\u7edc\u200b\u7b49\u200b\u6d88\u8017\u200b\u662f\u200b\u80fd\u200b\u63a5\u53d7\u200b\u7684\u200b\u3002\u200b\u5176\u5b9e\u200b\u524d\u63d0\u200b\u662f\u200b\u6bd4\u8f83\u200b\u82db\u523b\u200b\u7684\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5728\u200b\u6e38\u620f\u200b\u4e2d\u200b AOI \u200b\u8ba1\u8d39\u200b\u80fd\u200b\u5360\u7528\u200b\u7684\u200b CPU \u200b\u901a\u5e38\u200b\u5360\u200b\u6bd4\u200b\u662f\u200b\u4e0d\u200b\u5927\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u628a\u200b\u5706\u5f62\u200b AOI \u200b\u6539\u6210\u200b\u65b9\u5f62\u200b AOI \u200b\u5bfc\u81f4\u200b AOI \u200b\u8303\u56f4\u200b\u9762\u79ef\u200b\u589e\u5927\u200b\uff0c\u200b\u8303\u56f4\u200b\u5185\u200b\u7684\u200b\u73a9\u5bb6\u200b\u6570\u91cf\u200b\u4e5f\u200b\u589e\u591a\u200b\uff0c\u200b\u5747\u5300\u5206\u5e03\u200b\u4e0b\u200b\u73a9\u5bb6\u200b\u6570\u91cf\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u589e\u591a\u200b\u5230\u200b\u539f\u6765\u200b\u7684\u200b <code>1.27</code> \u200b\u500d\u200b\u3002\u200b\u4f46\u662f\u200b\uff0c\u200b\u4e00\u65e6\u200b\u80fd\u200b\u6ee1\u8db3\u200b\u524d\u63d0\u200b\uff0c\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u53ef\u4ee5\u200b\u505a\u5230\u200b\u4e0d\u200b\u9700\u8981\u200b <code>Tick</code> \u200b\u6765\u200b\u5b9a\u671f\u200b\u66f4\u65b0\u200b AOI \u200b\u4e8b\u4ef6\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b9e\u73b0\u200b\u4e0a\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b\u7684\u200b <code>candidates</code> \u200b\u5c31\u200b\u7ef4\u62a4\u200b\u4e86\u200b\u4e00\u4efd\u200b\u65b9\u5f62\u200b\u4e0b\u200b AOI\uff0c\u200b\u539f\u6765\u200b\u53ea\u662f\u200b\u4e3a\u4e86\u200b\u8ba1\u7b97\u200b\u5706\u5f62\u200b AOI\uff0c\u200b\u800c\u200b\u4e0d\u5f97\u4e0d\u200b\u5728\u200b <code>Tick</code> \u200b\u4e2d\u200b\u518d\u200b\u904d\u5386\u200b\u8ba1\u7b97\u200b\u8ddd\u79bb\u200b\u3002\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5341\u5b57\u200b\u94fe\u200b\u662f\u200b\u6709\u200b\u53ef\u80fd\u200b\u80fd\u591f\u200b\u8fbe\u5230\u200b\u5f88\u200b\u597d\u200b\u7684\u200b\u6027\u80fd\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5341\u5b57\u200b\u94fe\u8868\u200b <code>Update Pos</code> \u200b\u7684\u200b\u6027\u80fd\u200b\u53ef\u4ee5\u200b\u8ddf\u200b <code>Tick</code> \u200b\u76f8\u5dee\u200b\u51e0\u500d\u200b\u5230\u200b\u51e0\u5341\u500d\u200b\u3002</p> <p>\u200b\u6700\u540e\u200b\u7ed9\u51fa\u200b\u4e24\u8005\u200b\u7684\u200b\u5bf9\u6bd4\u200b\u67f1\u72b6\u56fe\u200b\uff1a</p> <p></p> <p></p> <p></p>","tags":["dev","game"]},{"location":"game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#_9","title":"\u603b\u7ed3","text":"<p>\u200b\u672c\u6587\u200b\u6211\u4eec\u200b\u4ecb\u7ecd\u200b\u4e86\u200b\u4e24\u79cd\u200b AOI \u200b\u7b97\u6cd5\u200b\uff08\u200b\u4e5d\u5bab\u683c\u200b\u548c\u200b\u5341\u5b57\u200b\u94fe\u200b\uff09\u200b\u7684\u200b\u539f\u7406\u200b\u548c\u200b\u57fa\u672c\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5e76\u200b\u901a\u8fc7\u200b\u5b9e\u6d4b\u200b\u7684\u200b\u6570\u636e\u5206\u6790\u200b\u4e86\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u7b97\u6cd5\u200b\u7684\u200b\u6027\u80fd\u200b\u4f18\u52a3\u200b\uff0c\u200b\u5e0c\u671b\u200b\u80fd\u591f\u200b\u7ed9\u200b\u8bfb\u8005\u200b\u5e26\u6765\u200b\u4e00\u4e9b\u200b\u5e2e\u52a9\u200b\u6216\u8005\u200b\u542f\u53d1\u200b\u3002</p> <p>\u200b\u603b\u7684\u6765\u8bf4\u200b\uff0c\u200b\u4e5d\u5bab\u683c\u200b\u6cd5\u200b\u5b9e\u73b0\u200b\u7b80\u5355\u200b\uff0c\u200b\u6027\u80fd\u200b\u5747\u8861\u200b\u4e0d\u200b\u5bb9\u6613\u200b\u62c9\u200b\u80ef\u200b\uff0c\u200b\u975e\u5e38\u9002\u5408\u200b AOI \u200b\u4e0d\u662f\u200b\u6027\u80fd\u200b\u74f6\u9888\u200b\u7684\u200b\u6e38\u620f\u200b\u6765\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4e5d\u5bab\u683c\u200b\u6cd5\u200b\u7684\u200b\u6027\u80fd\u200b\u6ce2\u52a8\u200b\u8303\u56f4\u200b\u662f\u200b\u5728\u200b\u53ef\u200b\u9884\u671f\u200b\u7684\u200b\u8303\u56f4\u200b\u5185\u200b\uff0c\u200b\u6027\u80fd\u200b\u4e0b\u9650\u200b\u6bd4\u8f83\u200b\u9ad8\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u200b\u5bb9\u6613\u200b\u5bfc\u81f4\u200b\u74f6\u9888\u200b\uff0c\u200b\u4f46\u200b\u53e6\u4e00\u65b9\u9762\u200b\u53ef\u200b\u4f18\u5316\u200b\u7a7a\u95f4\u200b\u4e5f\u200b\u4e0d\u5927\u200b\uff0c\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u6bd4\u8f83\u200b\u56fa\u5b9a\u200b\u3002\u200b\u53cd\u89c2\u200b\u5341\u5b57\u200b\u94fe\u6cd5\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u8981\u200b\u66f4\u200b\u590d\u6742\u200b\uff0c\u200b\u6027\u80fd\u200b\u4e0b\u9650\u200b\u6bd4\u200b\u4e5d\u5bab\u683c\u200b\u6cd5\u4f4e\u200b\uff0c\u200b\u4f46\u662f\u200b\u5982\u679c\u200b\u80fd\u591f\u200b\u6ee1\u8db3\u200b\u4e00\u4e9b\u200b\u5047\u8bbe\u200b\u548c\u200b\u524d\u63d0\u200b\uff0c\u200b\u5341\u5b57\u200b\u94fe\u200b\u53ef\u200b\u4f18\u5316\u200b\u7a7a\u95f4\u200b\u66f4\u9ad8\u200b\uff0c\u200b\u6362\u53e5\u8bdd\u8bf4\u200b\u662f\u200b\u4e0a\u9650\u200b\u662f\u200b\u53ef\u4ee5\u200b\u66f4\u9ad8\u200b\u3002\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\u5404\u6709\u200b\u4f18\u52a3\u200b\uff0c\u200b\u6e38\u620f\u200b\u4e1a\u754c\u200b\u5185\u200b\u4e5f\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u5f15\u64ce\u200b\u5206\u522b\u200b\u9009\u62e9\u200b\u4e86\u200b\u4e24\u8005\u200b\u4e4b\u4e00\u200b\uff0c\u200b\u5404\u53d6\u6240\u9700\u200b\uff0c\u200b\u89c1\u4ec1\u89c1\u667a\u200b\u3002</p> <p>\u200b\u672c\u4eba\u200b\u80fd\u529b\u200b\u6709\u9650\u200b\uff0c\u200b\u6587\u4e2d\u200b\u5185\u5bb9\u200b\u4ec5\u200b\u4ee3\u8868\u200b\u672c\u4eba\u200b\u60f3\u6cd5\u200b\uff0c\u200b\u5982\u200b\u6709\u200b\u4e0d\u8db3\u200b\u4e0d\u59a5\u200b\u4e4b\u200b\u5904\u200b\u6b22\u8fce\u200b\u7559\u8a00\u200b\u8ba8\u8bba\u200b\u3002</p> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev","game"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/","title":"Python \u200b\u6742\u8c08\u200b 1 - \u200b\u63a2\u7a76\u200b __builtins__","text":"","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#_1","title":"\u5f15\u5b50","text":"<p>\u200b\u6211\u4eec\u200b\u77e5\u9053\u200b\uff0c<code>__builtins__</code> \u200b\u672c\u8eab\u200b\u662f\u200b\u5728\u200b\u5168\u5c40\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u5c31\u200b\u6709\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u662f\u200b <code>Python</code> \u200b\u6545\u610f\u200b\u66b4\u9732\u200b\u51fa\u6765\u200b\u7ed9\u200b\u4ee3\u7801\u200b\u5c42\u200b\u7684\u200b\uff0c\u200b\u5728\u200b\u4ee3\u7801\u200b\u7684\u200b\u4efb\u610f\u200b\u5730\u65b9\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u3002\u200b\u4f46\u662f\u200b\u6709\u70b9\u200b\u51b7\u200b\u7684\u200b\u77e5\u8bc6\u200b\u662f\u200b\uff0c<code>__builtins__</code> \u200b\u5728\u200b <code>main</code> \u200b\u6a21\u5757\u200b\uff08\u200b\u4e5f\u200b\u5c31\u662f\u200b <code>__main__</code>\uff0c\u200b\u6307\u200b\u7684\u200b\u90fd\u200b\u662f\u200b\u540c\u4e00\u4e2a\u200b\u6a21\u5757\u200b\uff0c\u200b\u540e\u6587\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u6df7\u7528\u200b\uff09\u200b\u91cc\u9762\u200b\u662f\u200b <code>__builtin__</code> \u200b\u8fd9\u4e2a\u200b\u6a21\u5757\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u5176\u4ed6\u200b\u6a21\u5757\u200b\u91cc\u9762\u200b\uff0c\u200b\u5b83\u200b\u8868\u793a\u200b\u7684\u200b\u662f\u200b <code>__builtin__.__dict__</code>\uff0c\u200b\u8fd9\u200b\u5c31\u200b\u6709\u70b9\u200b\u8ba9\u200b\u4eba\u200b\u83ab\u540d\u5176\u5999\u200b\u4e86\u200b\u3002\u200b\u867d\u7136\u200b\u5b98\u65b9\u200b\u4e0d\u200b\u63a8\u8350\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b <code>__builtins__</code>\uff0c\u200b\u4f46\u200b\u4f60\u200b\u7ed9\u200b\u6211\u200b\u641e\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\u662f\u200b\u600e\u4e48\u56de\u4e8b\u200b\uff1f\u200b\u672c\u6587\u200b\u6211\u4eec\u200b\u5c31\u200b\u6765\u200b\u76d8\u200b\u4e00\u76d8\u200b\u8fd9\u4e2a\u200b\u8bbe\u5b9a\u200b\u7684\u200b\u7531\u200b\u6765\u200b\uff0c\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u627e\u5230\u200b\u8fd9\u4e9b\u200b\u95ee\u9898\u200b\u7684\u200b\u7b54\u6848\u200b\uff1a<code>__builtin__</code> \u200b\u8ddf\u200b <code>__builtins__</code> \u200b\u6709\u200b\u4ec0\u4e48\u200b\u533a\u522b\u200b\uff1f<code>__builtins__</code> \u200b\u5728\u200b <code>main</code> \u200b\u6a21\u5757\u200b\u8ddf\u200b\u5176\u4ed6\u200b\u6a21\u5757\u200b\u4e3a\u4ec0\u4e48\u200b\u4f1a\u200b\u8bbe\u5b9a\u200b\u6210\u200b\u4e0d\u540c\u200b\uff1f<code>__builtins__</code> \u200b\u662f\u200b\u5728\u200b\u54ea\u91cc\u200b\u5b9a\u4e49\u200b\u7684\u200b\uff1f</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#__builtin__","title":"<code>__builtin__</code>","text":"<p>\u200b\u5728\u200b\u63a2\u8ba8\u200b <code>__builtins__</code> \u200b\u4e4b\u524d\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5148\u200b\u770b\u770b\u200b <code>__builtin__</code> \u200b\u662f\u200b\u4ec0\u4e48\u200b\u3002<code>__builtin__</code> \u200b\u662f\u200b\u5b58\u653e\u200b\u6240\u6709\u200b\u5185\u200b\u5efa\u200b\u5bf9\u8c61\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e73\u5e38\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u7684\u200b <code>Python</code> \u200b\u5185\u200b\u5efa\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u672c\u8d28\u200b\u4e0a\u200b\u90fd\u200b\u662f\u200b <code>__builtin__</code> \u200b\u6a21\u5757\u200b\u91cc\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5373\u200b\u653e\u5728\u200b <code>__builtin__.__dict__</code> \u200b\u91cc\u200b\uff0c\u200b\u5bf9\u5e94\u200b\u7740\u200b\u7684\u200b\u662f\u200b <code>Python</code> \u200b\u7684\u200b\u5185\u5efa\u200b\u540d\u5b57\u200b\u7a7a\u95f4\u200b\u3002\u200b\u8bb0\u4f4f\u200b\u8fd9\u4e2a\u200b\u5173\u952e\u200b\u77e5\u8bc6\u70b9\u200b\uff1a<code>__buintin__</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u6a21\u5757\u200b <code>module</code>\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b <code>Python</code> \u200b\u6e90\u7801\u200b\u4e2d\u200b\u627e\u5230\u200b <code>__builtin__</code> \u200b\u6a21\u5757\u200b\u7684\u200b\u5b9a\u4e49\u200b\u548c\u200b\u4f7f\u7528\u200b\uff08\u200b\u6ce8\u610f\u200b\uff0c\u200b\u4e0b\u6587\u200b\u63d0\u5230\u200b\u7684\u200b <code>Python</code> \u200b\u6e90\u7801\u200b\uff0c\u200b\u90fd\u200b\u662f\u200b\u6307\u200b CPython-2.7.18 \u200b\u6e90\u7801\u200b\uff09\uff1a</p> <pre><code>// pythonrun.c\nvoid\nPy_InitializeEx(int install_sigs)\n{\n    PyInterpreterState *interp;\n    ...\n    // \u200b\u521d\u59cb\u5316\u200b __builtin__\n    bimod = _PyBuiltin_Init();\n    // interp-&gt;builtins = __builtin__.__dict__\n    interp-&gt;builtins = PyModule_GetDict(bimod);\n    ...\n}\n\n// bltinmodule.c\nPyObject *\n_PyBuiltin_Init(void)\n{\n    PyObject *mod, *dict, *debug;\n    mod = Py_InitModule4(\"__builtin__\", builtin_methods,\n                         builtin_doc, (PyObject *)NULL,\n                         PYTHON_API_VERSION);\n    if (mod == NULL)\n        return NULL;\n    dict = PyModule_GetDict(mod);\n\n    // \u200b\u7ed9\u200b dict \u200b\u52a0\u4e0a\u200b\u5185\u5efa\u200b\u7684\u200b\u5bf9\u8c61\u200b\n    ...\n}\n\n// ceval.c\n// \u200b\u83b7\u53d6\u200b builtins\nPyObject *\nPyEval_GetBuiltins(void)\n{\n    PyFrameObject *current_frame = PyEval_GetFrame();\n    if (current_frame == NULL)\n        return PyThreadState_GET()-&gt;interp-&gt;builtins;\n    else\n        return current_frame-&gt;f_builtins;\n}\n</code></pre> <p><code>Python</code> \u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u65f6\u5019\u200b\u4f1a\u200b\u8c03\u7528\u200b <code>_PyBuiltin_Init</code> \u200b\u6765\u200b\u521b\u5efa\u200b <code>__builtin__</code> \u200b\u6a21\u5757\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u91cc\u9762\u200b\u6dfb\u52a0\u200b\u4e0a\u200b\u5185\u5efa\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u89e3\u91ca\u5668\u200b\u672c\u8eab\u200b\u4f1a\u200b\u5f15\u7528\u200b\u4f4f\u200b <code>interp-&gt;builtins = __buintin__.__dict__</code>\uff0c\u200b\u5f53\u524d\u200b\u6267\u884c\u200b\u7684\u200b\u6808\u200b\u5e27\u200b\u7ed3\u6784\u200b\u540c\u65f6\u200b\u4e5f\u200b\u4f1a\u200b\u5f15\u7528\u200b\u4e00\u4efd\u200b <code>current_frame-&gt;f_builtins</code>\u3002\u200b\u90a3\u4e48\u200b\u5f88\u200b\u81ea\u7136\u200b\u5730\u200b\uff0c\u200b\u5f53\u200b\u6267\u884c\u200b\u4ee3\u7801\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u540d\u5b57\u200b\u5bfb\u627e\u200b\u5bf9\u8c61\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c<code>Python</code> \u200b\u4f1a\u200b\u53bb\u200b <code>current_frame-&gt;f_builtins</code> \u200b\u91cc\u9762\u200b\u6765\u200b\u627e\u200b\uff0c\u200b\u81ea\u7136\u200b\u5c31\u200b\u80fd\u200b\u62ff\u5230\u200b\u6240\u6709\u200b\u7684\u200b\u5185\u5efa\u200b\u5bf9\u8c61\u200b\uff1a</p> <pre><code>// ceval.c\nTARGET(LOAD_NAME)\n{\n    // \u200b\u5148\u200b\u5728\u200b f-&gt;f_locals \u200b\u540d\u5b57\u200b\u7a7a\u95f4\u200b\u91cc\u9762\u200b\u627e\u200b\n    ...\n    if (x == NULL) {\n        // \u200b\u518d\u200b\u627e\u200b\u627e\u200b\u5168\u5c40\u200b\u7a7a\u95f4\u200b\n        x = PyDict_GetItem(f-&gt;f_globals, w);\n        if (x == NULL) {\n            // \u200b\u8fd9\u91cc\u200b\u5c31\u200b\u53bb\u200b\u5185\u5efa\u200b\u7a7a\u95f4\u200b\u627e\u200b\n            x = PyDict_GetItem(f-&gt;f_builtins, w);\n            if (x == NULL) {\n                format_exc_check_arg(\n                            PyExc_NameError,\n                            NAME_ERROR_MSG, w);\n                break;\n            }\n        }\n        Py_INCREF(x);\n    }\n    PUSH(x);\n    DISPATCH();\n}\n</code></pre> <p>\u200b\u6700\u540e\u200b\uff0c\u200b\u7531\u4e8e\u200b <code>__builtin__</code> \u200b\u8fd9\u4e2a\u200b\u540d\u5b57\u200b\u5b9e\u5728\u200b\u662f\u200b\u592a\u200b\u6709\u200b\u8ff7\u60d1\u6027\u200b\u4e86\u200b\uff0c<code>Python3</code> \u200b\u4e2d\u200b\u5df2\u7ecf\u200b\u6539\u540d\u200b\u4e3a\u200b <code>builtins</code>\u3002</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#__builtins__","title":"<code>__builtins__</code>","text":"<p><code>__builtins__</code> \u200b\u7684\u200b\u8868\u73b0\u200b\u662f\u200b\u6709\u70b9\u200b\u5947\u602a\u200b\u7684\u200b\uff1a * \u200b\u5728\u200b <code>main</code> \u200b\u6a21\u5757\u200b\u4e2d\u200b\uff08<code>main</code> \u200b\u6a21\u5757\u200b\uff0c\u200b\u6216\u8005\u200b\u53eb\u200b<code>\u200b\u6700\u9ad8\u200b\u5c42\u7ea7\u200b\u4ee3\u7801\u8fd0\u884c\u200b\u6240\u5728\u200b\u73af\u5883\u200b</code>\uff0c\u200b\u662f\u200b\u7528\u6237\u200b\u6307\u5b9a\u200b\u6700\u5148\u200b\u542f\u52a8\u200b\u8fd0\u884c\u200b\u7684\u200b <code>Python</code> \u200b\u6a21\u5757\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u901a\u5e38\u200b\u6211\u4eec\u200b\u5728\u200b\u547d\u4ee4\u884c\u200b\u6267\u884c\u200b <code>python xxx.py</code> \u200b\u65f6\u200b\uff0c<code>xxx.py</code> \u200b\u8fd9\u4e2a\u200b\u6a21\u5757\u200b\uff09\uff0c<code>__builtins__ = __builtin__</code>\uff1b * \u200b\u5728\u200b\u5176\u4ed6\u200b\u6a21\u5757\u200b\u4e2d\u200b <code>__builtins__ = __builtin__.__dict__</code>\u3002</p> <p>\u200b\u76f8\u540c\u200b\u7684\u200b\u540d\u5b57\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u4e0d\u540c\u200b\u7684\u200b\u6a21\u5757\u200b\u4e0b\u200b\u8868\u73b0\u200b\u5374\u662f\u200b\u4e0d\u200b\u76f8\u540c\u200b\u7684\u200b\uff0c\u200b\u8fd9\u6837\u200b\u7684\u200b\u8bbe\u5b9a\u200b\u5f88\u200b\u5bb9\u6613\u200b\u8ba9\u200b\u4eba\u200b\u7591\u60d1\u200b\u3002\u200b\u4e0d\u8fc7\u200b\u53ea\u8981\u200b\u77e5\u9053\u200b\u8fd9\u4e2a\u200b\u8bbe\u5b9a\u200b\uff0c\u200b\u5c31\u200b\u8db3\u591f\u200b\u652f\u6301\u200b\u4f60\u200b\u5728\u200b <code>Python</code> \u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>__builtins__</code>\uff0c\u200b\u7591\u60d1\u200b\u5e76\u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\u4f60\u200b\u5199\u51fa\u200b\u8db3\u591f\u200b\u5b89\u5168\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u8bf8\u5982\u200b\uff1a</p> <pre><code>def SetBuiltins(builtins, key, val):\n    if isinstance(builtins, dict):\n        builtins[key] = val\n    else:\n        setattr(builtins, key, val)\n\nSetBuiltins(__builtins__, 'test', 1)\n</code></pre> <p>\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5176\u5b9e\u200b\u5e76\u200b\u4e0d\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b <code>__builtins__</code>\uff1a</p> <p>CPython implementation detail: Users should not touch <code>__builtins__</code>; it is strictly an implementation detail. Users wanting to override values in the builtins namespace should import the <code>__builtin__</code> (no \u2018s\u2019) module and modify its attributes appropriately.</p> <p>\u200b\u5f53\u7136\u200b\uff0c\u200b\u8fd9\u6837\u200b\u7684\u200b\u7591\u60d1\u200b\uff0c\u200b\u603b\u6709\u4e00\u5929\u200b\u4f1a\u200b\u8ba9\u200b\u4f60\u200b\u5fc3\u75d2\u200b\u96be\u8010\u200b\uff0c\u200b\u6211\u200b\u8fd9\u91cc\u200b\u5c31\u200b\u51b3\u5b9a\u200b\u7ee7\u7eed\u200b\u63a2\u7a76\u200b\u4e0b\u53bb\u200b\uff0c\u200b\u4e5f\u200b\u56e0\u4e3a\u200b\u8fd9\u6837\u200b\uff0c\u200b\u624d\u200b\u6709\u200b\u4e86\u200b\u8fd9\u200b\u7bc7\u6587\u7ae0\u200b\u3002\u200b\u6211\u4eec\u200b\u4e0b\u9762\u200b\u7684\u200b\u5185\u5bb9\u200b\u4f1a\u200b\u6df1\u5165\u200b\u5230\u200b CPython implementation detail \u200b\u4e2d\u200b\u53bb\u200b\u3002</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#restricted-execution","title":"Restricted Execution","text":"<p>Restricted Execution \u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u6709\u200b\u9650\u5236\u200b\u5730\u200b\u6267\u884c\u200b\u4e0d\u200b\u5b89\u5168\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u6240\u8c13\u200b\u6709\u200b\u9650\u5236\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u662f\u200b\u9650\u5236\u200b\u7f51\u7edc\u200b\u3001io \u200b\u7b49\u7b49\u200b\uff0c\u200b\u628a\u200b\u4ee3\u7801\u200b\u9650\u5236\u200b\u5728\u200b\u4e00\u5b9a\u200b\u7684\u200b\u6267\u884c\u200b\u73af\u5883\u200b\u4e2d\u200b\uff0c\u200b\u63a7\u5236\u4ee3\u7801\u200b\u7684\u200b\u6267\u884c\u200b\u6743\u9650\u200b\uff0c\u200b\u9632\u6b62\u200b\u4ee3\u7801\u200b\u5f71\u54cd\u200b\u5230\u200b\u5916\u90e8\u200b\u7684\u200b\u73af\u5883\u200b\u548c\u200b\u7cfb\u7edf\u200b\u3002\u200b\u5e38\u89c1\u200b\u7684\u200b\u7528\u4f8b\u200b\u5c31\u662f\u200b\u4e00\u4e9b\u200b\u5728\u7ebf\u200b\u4ee3\u7801\u6267\u884c\u200b\u7f51\u7ad9\u200b\uff0c\u200b\u8b6c\u5982\u200b\u8fd9\u4e2a\u200b\uff1apythonsandbox\u3002</p> <p>\u200b\u8ddf\u200b\u4f60\u200b\u731c\u60f3\u200b\u7684\u200b\u4e00\u6837\u200b\uff0c<code>Python</code> \u200b\u5bf9\u200b <code>__builtins__</code> \u200b\u7684\u200b\u8bbe\u5b9a\u200b\u662f\u200b\u8ddf\u200b Restricted Execution \u200b\u6709\u5173\u200b\u3002<code>Python</code> \u200b\u5728\u200b 2.3 \u200b\u7248\u672c\u200b\u4e4b\u524d\u200b\uff0c\u200b\u66fe\u7ecf\u200b\u63d0\u4f9b\u200b\u8fc7\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u529f\u80fd\u200b Restricted Execution\uff0c\u200b\u53ea\u662f\u200b\u7531\u4e8e\u200b\u540e\u6765\u200b\u88ab\u200b\u8bc1\u5b9e\u200b\u4e3a\u200b\u4e0d\u200b\u53ef\u884c\u200b\u7684\u200b\uff0c\u200b\u53ea\u597d\u200b\u628a\u200b\u8fd9\u4e2a\u200b\u529f\u80fd\u200b\u4f5c\u5e9f\u200b\u4e86\u200b\uff0c\u200b\u4f46\u200b\u4ee3\u7801\u200b\u5728\u200b 2.7.18 \u200b\u7248\u672c\u200b\u8fd8\u200b\u4fdd\u7559\u200b\u7740\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6765\u200b\u8003\u53e4\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\u6765\u770b\u200b <code>Python</code> \u200b\u6e90\u7801\u200b\u91cc\u9762\u200b\u5bf9\u200b <code>__builtins__</code> \u200b\u7684\u200b\u8bbe\u7f6e\u200b\uff1a</p> <pre><code>// pythonrun.c\nstatic void initmain(void)\n{\n    PyObject *m, *d;\n    // \u200b\u83b7\u53d6\u200b __main__ \u200b\u6a21\u5757\u200b\n    m = PyImport_AddModule(\"__main__\");\n    if (m == NULL)\n        Py_FatalError(\"can't create __main__ module\");\n\n    // d = __main__.__dict__\n    d = PyModule_GetDict(m);\n\n    // \u200b\u8bbe\u7f6e\u200b __main__.__dict__['__builtins__']\uff0c\u200b\u5982\u679c\u200b\u5df2\u6709\u200b\uff0c\u200b\u5219\u200b\u8df3\u200b\u8fc7\u200b\n    if (PyDict_GetItemString(d, \"__builtins__\") == NULL) {\n        PyObject *bimod = PyImport_ImportModule(\"__builtin__\");\n        if (bimod == NULL ||\n            PyDict_SetItemString(d, \"__builtins__\", bimod) != 0)\n            Py_FatalError(\"can't add __builtins__ to __main__\");\n        Py_XDECREF(bimod);\n    }\n}\n</code></pre> <p>\u200b\u5728\u200b <code>initmain</code> \u200b\u4e2d\u200b\uff0c<code>Python</code> \u200b\u4f1a\u200b\u7ed9\u200b <code>__main__</code> \u200b\u6a21\u5757\u200b\u8bbe\u7f6e\u200b <code>__builtins__</code> \u200b\u5c5e\u6027\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u7b49\u4e8e\u200b <code>__builtin__</code> \u200b\u6a21\u5757\u200b\uff0c\u200b\u4f46\u200b\u5982\u679c\u200b\u5df2\u6709\u200b\uff0c\u200b\u5219\u200b\u8df3\u200b\u8fc7\u200b\u4e0d\u4f1a\u200b\u91cd\u65b0\u200b\u8bbe\u7f6e\u200b\u3002\u200b\u5229\u7528\u200b\u8fd9\u4e2a\u200b\u7279\u70b9\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4fee\u6539\u200b <code>__main__.__builtins__</code> \u200b\u6765\u200b\u4fee\u6539\u200b\u5185\u5efa\u200b\u7684\u200b\u4e00\u4e9b\u200b\u529f\u80fd\u200b\uff0c\u200b\u4ee5\u200b\u8fbe\u5230\u200b\u9650\u5236\u200b\u4ee3\u7801\u6267\u884c\u200b\u6743\u9650\u200b\u7684\u200b\u76ee\u7684\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5148\u200b\u6309\u4e0b\u4e0d\u8868\u200b\uff0c\u200b\u6211\u4eec\u200b\u770b\u770b\u200b <code>__builtins__</code> \u200b\u662f\u200b\u600e\u4e48\u200b\u88ab\u200b\u4f20\u9012\u200b\u7684\u200b\u3002</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#__builtins___1","title":"<code>__builtins__</code> \u200b\u7684\u200b\u4f20\u9012","text":"<p>\u200b\u5728\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u6808\u200b\u5e27\u200b\u7684\u200b\u65f6\u5019\u200b\uff1a</p> <pre><code>PyFrameObject *\nPyFrame_New(PyThreadState *tstate, PyCodeObject *code, PyObject *globals,\n            PyObject *locals)\n{\n    ...\n    if (back == NULL || back-&gt;f_globals != globals) {\n        // \u200b\u53d6\u200b globals['__builtins__'] \u200b\u4f5c\u4e3a\u200b\u65b0\u6808\u200b\u5e27\u200b\u7684\u200b __builtins__\n        // builtin_object \u200b\u5c31\u662f\u200b\u5b57\u7b26\u4e32\u200b '__builtins__'\n        builtins = PyDict_GetItem(globals, builtin_object);\n        if (builtins) {\n            if (PyModule_Check(builtins)) {\n                builtins = PyModule_GetDict(builtins);\n                assert(!builtins || PyDict_Check(builtins));\n            }\n            else if (!PyDict_Check(builtins))\n                builtins = NULL;\n        }\n        ...\n\n    }\n    else {\n        /* If we share the globals, we share the builtins.\n           Save a lookup and a call. */\n        // \u200b\u6216\u8005\u200b\u76f4\u63a5\u200b\u7ee7\u627f\u200b\u4e0a\u200b\u4e00\u5c42\u200b\u6808\u5e27\u200b\u7684\u200b f_builtins\n        builtins = back-&gt;f_builtins;\n        assert(builtins != NULL &amp;&amp; PyDict_Check(builtins));\n        Py_INCREF(builtins);\n    }\n    ...\n    f-&gt;f_builtins = builtins;\n    f-&gt;f_globals = globals;\n}\n</code></pre> <p>\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u6808\u200b\u5e27\u200b\u65f6\u200b\uff0c\u200b\u5bf9\u4e8e\u200b <code>__builtins__</code> \u200b\u7684\u200b\u5904\u7406\u200b\u4e3b\u8981\u200b\u6709\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\uff1a\u200b\u4e00\u79cd\u200b\u662f\u200b\u6ca1\u6709\u200b\u4e0a\u5c42\u200b\u6808\u5e27\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u53d6\u200b <code>globals['__builtins__']</code>\uff1b\u200b\u53e6\u200b\u4e00\u79cd\u200b\u662f\u200b\u76f4\u63a5\u200b\u53d6\u200b\u4e0a\u5c42\u200b\u6808\u5e27\u200b\u7684\u200b <code>f_builtins</code>\u3002\u200b\u8054\u5408\u200b\u8d77\u6765\u200b\u770b\u200b\u7684\u8bdd\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\uff0c\u200b\u4e00\u822c\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5728\u200b <code>__main__</code> \u200b\u4e2d\u200b\u8bbe\u7f6e\u200b\u597d\u200b\u7684\u200b <code>__builtins__</code>\uff0c\u200b\u4f1a\u200b\u4e00\u76f4\u200b\u7ee7\u627f\u200b\u7ed9\u200b\u540e\u9762\u200b\u7684\u200b\u6808\u200b\u5e27\u200b\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u5171\u7528\u200b\u540c\u200b\u4e00\u4efd\u200b\u3002</p> <p><code>import</code> \u200b\u6a21\u5757\u200b\u65f6\u200b\uff1a</p> <pre><code>static PyObject *\nload_compiled_module(char *name, char *cpathname, FILE *fp)\n{\n    long magic;\n    PyCodeObject *co;\n    PyObject *m;\n    ...\n    co = read_compiled_module(cpathname, fp);\n    ...\n    m = PyImport_ExecCodeModuleEx(name, (PyObject *)co, cpathname);\n    ...\n}\n\n\nPyObject *\nPyImport_ExecCodeModuleEx(char *name, PyObject *co, char *pathname)\n{\n    ...\n    m = PyImport_AddModule(name);\n    ...\n    // d = m.__dict__\n    d = PyModule_GetDict(m);\n\n    // \u200b\u5728\u200b\u8fd9\u91cc\u200b\u8bbe\u7f6e\u200b\u65b0\u200b\u52a0\u8f7d\u200b\u6a21\u5757\u200b\u7684\u200b __builtins__ \u200b\u5c5e\u6027\u200b\n    if (PyDict_GetItemString(d, \"__builtins__\") == NULL) {\n        if (PyDict_SetItemString(d, \"__builtins__\",\n                                 PyEval_GetBuiltins()) != 0)\n            goto error;\n    }\n    ...\n    // globals = d, locals = d\n    v = PyEval_EvalCode((PyCodeObject *)co, d, d);\n    ...\n}\n\nPyObject *\nPyEval_EvalCode(PyCodeObject *co, PyObject *globals, PyObject *locals)\n{\n    return PyEval_EvalCodeEx(co,\n                      globals, locals,\n                      (PyObject **)NULL, 0,\n                      (PyObject **)NULL, 0,\n                      (PyObject **)NULL, 0,\n                      NULL);\n}\n</code></pre> <p><code>import</code> \u200b\u5176\u4ed6\u200b\u6a21\u5757\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4f1a\u200b\u628a\u200b\u8be5\u200b\u6a21\u5757\u200b\u7684\u200b <code>__builtins__</code> \u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>PyEval_GetBuiltins()</code> \u200b\u7684\u200b\u8fd4\u56de\u200b\u7ed3\u679c\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u8bf4\u200b\u8fc7\u200b\uff0c\u200b\u5927\u90e8\u5206\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u76f8\u5f53\u4e8e\u200b <code>current_frame-&gt;f_builtins</code>\u3002\u200b\u5bf9\u4e8e\u200b <code>__main__</code> \u200b\u6a21\u5757\u200b\u7684\u200b\u91cc\u9762\u200b\u7684\u200b <code>import</code>\uff0c<code>current_frame</code> \u200b\u5c31\u662f\u200b <code>__main__</code> \u200b\u6a21\u5757\u200b\u7684\u200b\u6808\u200b\u5e27\u200b\uff0c<code>current_frame-&gt;f_builtins = __main__.__dict__['__builtins__']</code>\uff08\u200b\u4e0a\u6587\u200b <code>PyFrame_New</code> \u200b\u7684\u200b\u7b2c\u4e00\u79cd\u200b\u60c5\u51b5\u200b\uff09\u3002</p> <p>\u200b\u52a0\u8f7d\u200b\u7684\u200b\u65b0\u200b\u6a21\u5757\u200b\uff0c\u200b\u4f1a\u200b\u4f7f\u7528\u200b <code>PyEval_EvalCode</code> \u200b\u6765\u200b\u6267\u884c\u200b\u65b0\u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\uff0c\u200b\u4f20\u7ed9\u200b <code>PyEval_EvalCode</code> \u200b\u7684\u200b\u53c2\u6570\u200b <code>globals</code>\u3001<code>locals</code> \u200b\u5176\u5b9e\u200b\u90fd\u200b\u662f\u200b\u6a21\u5757\u200b\u81ea\u8eab\u200b\u7684\u200b <code>__dict__</code>\uff0c\u200b\u5e76\u4e14\u200b\u6a21\u5757\u200b <code>m.__dict__['__builtins__'] = PyEval_GetBuiltins()</code> \u3002</p> <p>\u200b\u7efc\u5408\u200b\u6765\u770b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5f97\u77e5\u200b\uff0c\u200b\u4ece\u200b <code>__main__</code> \u200b\u6a21\u5757\u200b\u5f00\u59cb\u200b <code>import</code> \u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u4e5f\u200b\u4f1a\u200b\u7ee7\u627f\u200b <code>__main__</code> \u200b\u4e2d\u200b\u7684\u200b <code>__builtins__</code>\uff0c\u200b\u5e76\u4f1a\u200b\u5728\u200b\u5185\u90e8\u200b\u7684\u200b <code>import</code> \u200b\u4e2d\u200b\u4f20\u9012\u200b\u4e0b\u53bb\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u786e\u4fdd\u200b\uff0c\u200b\u6240\u6709\u200b\u4ece\u200b <code>__main__</code> \u200b\u52a0\u8f7d\u200b\u7684\u200b\u6a21\u5757\u200b\u548c\u5b50\u200b\u6a21\u5757\u200b\uff0c\u200b\u90fd\u200b\u80fd\u200b\u5171\u7528\u200b\u540c\u200b\u4e00\u4efd\u200b\u6765\u81ea\u200b <code>__main__</code> \u200b\u7684\u200b <code>__builtins__</code>\u3002</p> <p>\u200b\u90a3\u4e48\u200b\u5982\u679c\u200b\u662f\u200b\u5728\u200b\u6a21\u5757\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200b\u51fd\u6570\u200b\u5462\u200b\uff1f\u200b\u5bf9\u4e8e\u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u521b\u5efa\u200b\u548c\u200b\u8c03\u7528\u200b\u65f6\u200b\uff1a</p> <pre><code>// ceval.c\n// \u200b\u521b\u5efa\u200b\u51fd\u6570\u200b\nTARGET(MAKE_FUNCTION)\n{\n    v = POP(); /* code object */\n\n    // \u200b\u8fd9\u91cc\u200b\u7684\u200b f-&gt;f_globals\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u6a21\u5757\u200b\u81ea\u8eab\u200b\u7684\u200b globals\uff0c\u200b\u7531\u200b\u4e0a\u6587\u200b\u53ef\u77e5\u200b\uff0c\u200b\u4e5f\u200b\u76f8\u5f53\u4e8e\u200b m.__dict__\n    x = PyFunction_New(v, f-&gt;f_globals);\n    ...\n}\n\nPyObject *\nPyFunction_New(PyObject *code, PyObject *globals)\n{\n    PyFunctionObject *op = PyObject_GC_New(PyFunctionObject,\n                                        &amp;PyFunction_Type);\n    ...\n    // \u200b\u8fd9\u91cc\u200b\u76f8\u5f53\u4e8e\u200b op-&gt;func_globals = globals = f-&gt;f_globals\n    op-&gt;func_globals = globals;\n}\n\n// \u200b\u8c03\u7528\u51fd\u6570\u200b\nstatic PyObject *\nfast_function(PyObject *func, PyObject ***pp_stack, int n, int na, int nk)\n{\n    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);\n    // globals = func-&gt;func_globals\n    PyObject *globals = PyFunction_GET_GLOBALS(func);\n    ...\n    // globals \u200b\u4f20\u7ed9\u200b PyEval_EvalCodeEx\uff0c\u200b\u91cc\u9762\u200b\u5c31\u200b\u4f1a\u200b\u4f20\u7ed9\u200b PyFrame_New \u200b\u6765\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u6808\u200b\u5e27\u200b\n    return PyEval_EvalCodeEx(co, globals,\n                             (PyObject *)NULL, (*pp_stack)-n, na,\n                             (*pp_stack)-2*nk, nk, d, nd,\n                             PyFunction_GET_CLOSURE(func));\n}\n</code></pre> <p>\u200b\u521b\u5efa\u200b\u51fd\u6570\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u628a\u200b <code>f-&gt;f_globals</code> \u200b\u5b58\u200b\u5230\u200b\u51fd\u6570\u200b\u7ed3\u6784\u200b\u4f53\u200b\u53d8\u91cf\u200b <code>func_globals</code> \u200b\u91cc\u9762\u200b\uff0c\u200b\u800c\u200b\u5bf9\u4e8e\u200b\u6a21\u5757\u200b <code>m</code>\uff0c<code>f-&gt;f_globals = m.__dict__</code>\u3002\u200b\u51fd\u6570\u200b\u6267\u884c\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4f20\u7ed9\u200b <code>PyFrame_New</code> \u200b\u7684\u200b <code>globals</code> \u200b\u53c2\u6570\u200b\uff0c\u200b\u5c31\u662f\u200b\u521b\u5efa\u200b\u65f6\u5019\u200b\u4fdd\u5b58\u8d77\u6765\u200b\u7684\u200b <code>func_globals</code>\uff0c<code>__builtins__</code> \u200b\u81ea\u7136\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200b <code>func_globals</code> \u200b\u4e2d\u200b\u83b7\u53d6\u200b\u3002</p> <p>\u200b\u81f3\u6b64\u200b\uff0c<code>__builtins__</code> \u200b\u7684\u200b\u4f20\u9012\u200b\u662f\u200b\u80fd\u200b\u4fdd\u8bc1\u200b\u4e00\u81f4\u6027\u200b\u7684\u200b\uff0c\u200b\u6240\u6709\u200b\u6a21\u5757\u200b\u3001\u200b\u5b50\u200b\u6a21\u5757\u200b \u3001\u200b\u51fd\u6570\u200b\uff0c\u200b\u6808\u5e27\u200b\u7b49\u200b\u90fd\u200b\u80fd\u200b\u5f15\u7528\u200b\u5230\u200b\u540c\u4e00\u4e2a\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u62e5\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u5185\u5efa\u200b\u540d\u5b57\u200b\u7a7a\u95f4\u200b\u3002</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#__main__","title":"\u6307\u5b9a\u200b <code>__main__</code> \u200b\u6a21\u5757\u200b\u6267\u884c","text":"<p>\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u77e5\u9053\u200b <code>__main__</code> \u200b\u6a21\u5757\u200b\u81ea\u8eab\u200b\u7684\u200b <code>__builtins__</code> \u200b\u53ef\u4ee5\u200b\u4f20\u9012\u200b\u7ed9\u200b\u6240\u6709\u200b\u5b50\u200b\u6a21\u5757\u200b\u3001\u200b\u51fd\u6570\u200b\u548c\u200b\u6808\u200b\u5e27\u200b\uff0c\u200b\u800c\u200b\u5728\u200b\u547d\u4ee4\u884c\u200b\u6267\u884c\u200b <code>python a.py</code> \u200b\u65f6\u200b\uff0cPython \u200b\u4f1a\u200b\u628a\u200b <code>a.py</code> \u200b\u4f5c\u4e3a\u200b <code>__main__</code> \u200b\u6a21\u5757\u200b\u6765\u200b\u6267\u884c\u200b\uff0c\u200b\u90a3\u200b\u8fd9\u200b\u662f\u200b\u5982\u4f55\u200b\u505a\u5230\u200b\u7684\u200b\u5462\u200b\uff1a</p> <pre><code>// python.c\nint\nmain(int argc, char **argv)\n{\n    ...\n    return Py_Main(argc, argv);\n}\n\n// main.c\nint\nPy_Main(int argc, char **argv)\n{\n    ...\n    // \u200b\u5c1d\u8bd5\u200b\u7528\u200b\u6a21\u5757\u200b\u7684\u200b importer \u200b\u6765\u200b\u6267\u884c\u200b\u4ee3\u7801\u200b\n    if (filename != NULL) {\n        sts = RunMainFromImporter(filename);\n    }\n    ...\n    // \u200b\u4e00\u822c\u200b\u6211\u4eec\u200b\u81ea\u5df1\u200b\u7684\u200b py \u200b\u6587\u4ef6\u200b\uff0c\u200b\u4f1a\u200b\u4f7f\u7528\u200b\u8fd9\u4e2a\u200b\u6765\u200b\u6267\u884c\u200b\n    sts = PyRun_AnyFileExFlags(\n            fp,\n            filename == NULL ? \"&lt;stdin&gt;\" : filename,\n            filename != NULL, &amp;cf) != 0;\n    }\n    ...\n}\n\n// pythonrun.c\nint\nPyRun_AnyFileExFlags(FILE *fp, const char *filename, int closeit,\n                     PyCompilerFlags *flags)\n{\n    ...\n    return PyRun_SimpleFileExFlags(fp, filename, closeit, flags);\n}\n\n\nint\nPyRun_SimpleFileExFlags(FILE *fp, const char *filename, int closeit,\n                        PyCompilerFlags *flags)\n{\n    ...\n    m = PyImport_AddModule(\"__main__\");\n    d = PyModule_GetDict(m);\n    ...\n    // \u200b\u8bbe\u7f6e\u200b __file__ \u200b\u5c5e\u6027\u200b\n    if (PyDict_SetItemString(d, \"__file__\", f) &lt; 0) {\n        ...\n    }\n    ...\n    // globals = locals = d = __main__.__dict__\n    v = run_pyc_file(fp, filename, d, d, flags);\n    ...\n}\n\nstatic PyObject *\nrun_pyc_file(FILE *fp, const char *filename, PyObject *globals,\n             PyObject *locals, PyCompilerFlags *flags)\n{\n    ...\n    // \u200b\u4ece\u200b pyc \u200b\u6587\u4ef6\u200b\u8bfb\u53d6\u200b\u4ee3\u7801\u200b\u5bf9\u8c61\u200b co \uff0c\u200b\u5e76\u200b\u6267\u884c\u200b\u4ee3\u7801\u200b\n    // PyEval_EvalCode \u200b\u91cc\u9762\u200b\u4e5f\u200b\u540c\u6837\u200b\u4f1a\u200b\u8c03\u7528\u200b PyFrame_New \u200b\u521b\u5efa\u200b\u65b0\u6808\u200b\u5e27\u200b\n    v = PyEval_EvalCode(co, globals, locals);\n    ...\n}\n</code></pre> <p>\u200b\u5f53\u200b\u6267\u884c\u200b <code>python a.py</code> \u200b\u65f6\u200b\uff0c\u200b\u4e00\u822c\u200b\u60c5\u51b5\u200b\u4e0b\u4f1a\u200b\u8d70\u200b\u5230\u200b <code>PyRun_SimpleFileExFlags</code>\uff0c<code>PyRun_SimpleFileExFlags</code> \u200b\u91cc\u9762\u200b\u4f1a\u200b\u53d6\u51fa\u200b\u6765\u200b <code>__main__.__dict__</code>\uff0c\u200b\u4f5c\u4e3a\u200b\u4ee3\u7801\u6267\u884c\u200b\u65f6\u200b\u7684\u200b <code>globals</code> \u200b\u548c\u200b <code>locals</code>\uff0c\u200b\u6700\u7ec8\u200b\u4e5f\u200b\u4f1a\u200b\u4f20\u5230\u200b <code>PyFrame_New</code> \u200b\u4e2d\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u6808\u200b\u5e27\u200b\u6765\u200b\u6267\u884c\u200b <code>a.py</code>\u3002\u200b\u7ed3\u5408\u200b\u6211\u4eec\u200b\u4e0a\u6587\u200b\u63d0\u5230\u200b\u7684\u200b <code>__builtins__</code> \u200b\u5728\u200b\u6a21\u5757\u200b\u548c\u200b\u51fd\u6570\u200b\u4e2d\u200b\u4f20\u9012\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u540e\u7eed\u200b\u6267\u884c\u200b\u7684\u200b\u4ee3\u7801\u200b\u90fd\u200b\u80fd\u200b\u5171\u7528\u200b\u540c\u200b\u4e00\u4efd\u200b <code>current_frame-&gt;f_builtins = __main__.__builtins__.__dict__</code>\u3002</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#restricted-execution_1","title":"\u518d\u8bba\u200b Restricted Execution","text":"<p><code>Python</code> \u200b\u5728\u200b 2.3 \u200b\u7248\u672c\u200b\u4e4b\u524d\u200b\uff0c\u200b\u66fe\u7ecf\u200b\u63d0\u4f9b\u200b\u8fc7\u200b\u7684\u200b Restricted Execution\uff0c\u200b\u5c31\u662f\u200b\u57fa\u4e8e\u200b <code>__builtins__</code> \u200b\u7684\u200b\u7279\u6027\u200b\u6765\u200b\u5236\u4f5c\u200b\u7684\u200b\u3002\u200b\u6216\u8005\u200b\u53ef\u4ee5\u200b\u8ba4\u4e3a\u200b\uff0c<code>__builtins__</code> \u200b\u4e4b\u6240\u4ee5\u200b\u8bbe\u8ba1\u200b\u6210\u5728\u200b <code>__main__</code> \u200b\u6a21\u5757\u200b\u4e2d\u662f\u200b\u4e00\u4e2a\u200b\u6a21\u5757\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u800c\u200b\u5728\u200b\u5176\u4ed6\u200b\u6a21\u5757\u200b\u4e2d\u662f\u200b\u4e00\u4e2a\u200b <code>dict</code> \u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5c31\u662f\u200b\u4e3a\u4e86\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b Restricted Execution\u3002</p> <p>\u200b\u8003\u8651\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\uff1a\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u81ea\u7531\u200b\u5b9a\u5236\u200b\u81ea\u5df1\u200b\u7684\u200b <code>__builtin__</code> \u200b\u6a21\u5757\u200b\uff0c\u200b\u5e76\u200b\u8bbe\u7f6e\u200b\u6210\u200b <code>__main__.__builtins__</code>\uff0c\u200b\u90a3\u200b\u5c31\u200b\u76f8\u5f53\u4e8e\u200b\u540e\u7eed\u200b\u6240\u6709\u200b\u6267\u884c\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u90fd\u200b\u4f1a\u200b\u4f7f\u7528\u200b\u6211\u4eec\u200b\u5b9a\u5236\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5b9a\u5236\u200b\u7279\u5b9a\u200b\u7248\u672c\u200b\u7684\u200b <code>open</code>\u3001<code>__import__</code>\u3001<code>file</code> \u200b\u7b49\u200b\u5185\u5efa\u51fd\u6570\u200b\u548c\u200b\u7c7b\u578b\u200b\uff0c\u200b\u66f4\u8fdb\u4e00\u6b65\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u662f\u4e0d\u662f\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u6211\u4eec\u200b\u9650\u5236\u200b\u6267\u884c\u200b\u4ee3\u7801\u200b\u7684\u200b\u6743\u9650\u200b\uff0c\u200b\u9632\u6b62\u200b\u4ee3\u7801\u200b\u505a\u200b\u4e00\u4e9b\u200b\u4e0d\u200b\u5b89\u5168\u200b\u7684\u200b\u51fd\u6570\u8c03\u7528\u200b\uff0c\u200b\u6216\u8005\u200b\u8bbf\u95ee\u200b\u4e00\u4e9b\u200b\u4e0d\u200b\u5b89\u5168\u200b\u7684\u200b\u6587\u4ef6\u200b\uff1f</p> <p><code>Python</code> \u200b\u5f53\u65f6\u200b\u5c31\u200b\u505a\u200b\u8fc7\u200b\u8fd9\u79cd\u200b\u5c1d\u8bd5\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u8fd9\u4e2a\u200b\u529f\u80fd\u200b\u7684\u200b\u6a21\u5757\u200b\u5c31\u200b\u53eb\u505a\u200b: <code>rexec</code>\u3002</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#rexec","title":"<code>rexec</code>","text":"<p>\u200b\u6211\u200b\u65e0\u610f\u200b\u592a\u200b\u6df1\u5165\u200b\u8bb2\u89e3\u200b <code>rexec</code> \u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u539f\u7406\u200b\u5176\u5b9e\u200b\u4e0a\u6587\u200b\u5df2\u7ecf\u200b\u8bb2\u6e05\u695a\u200b\u4e86\u200b\uff0c\u200b\u5e76\u4e14\u200b\u8fd9\u4e2a\u200b\u6a21\u5757\u200b\u672c\u8eab\u200b\u5c31\u200b\u5df2\u7ecf\u200b\u5e9f\u5f03\u200b\uff0c\u200b\u6211\u200b\u8fd9\u4e9b\u200b\u4ec5\u200b\u7b80\u5355\u200b\u505a\u200b\u4e00\u4e9b\u200b\u5173\u952e\u200b\u4ee3\u7801\u200b\u7684\u200b\u6458\u8981\u200b\uff0c\u200b\u65b9\u4fbf\u200b\u67e5\u9605\u200b\u3002</p> <pre><code># rexec.py\nclass RExec(ihooks._Verbose):\n    ...\n    nok_builtin_names = ('open', 'file', 'reload', '__import__')\n\n    def __init__(self, hooks = None, verbose = 0):\n        ...\n        self.modules = {}\n        ...\n        self.make_builtin()\n        self.make_initial_modules()\n        self.make_sys()\n        self.loader = RModuleLoader(self.hooks, verbose)\n        self.importer = RModuleImporter(self.loader, verbose)\n\n    def make_builtin(self):\n        m = self.copy_except(__builtin__, self.nok_builtin_names)\n        m.__import__ = self.r_import\n        m.reload = self.r_reload\n        m.open = m.file = self.r_open\n\n    def add_module(self, mname):\n        m = self.modules.get(mname)\n        if m is None:\n            self.modules[mname] = m = self.hooks.new_module(mname)\n        m.__builtins__ = self.modules['__builtin__']\n        return m\n\n    def r_exec(self, code):\n        m = self.add_module('__main__')\n        exec code in m.__dict__\n\n    def r_eval(self, code):\n        m = self.add_module('__main__')\n        return eval(code, m.__dict__)\n\n    def r_execfile(self, file):\n        m = self.add_module('__main__')\n        execfile(file, m.__dict__)\n</code></pre> <p><code>r_execfile</code> \u200b\u51fd\u6570\u200b\u4f1a\u200b\u628a\u200b\u6587\u4ef6\u200b\u5f53\u4f5c\u200b <code>__main__</code> \u200b\u6a21\u5757\u200b\u6765\u200b\u6267\u884c\u200b\uff0c\u200b\u53ea\u662f\u200b <code>__main__</code> \u200b\u662f\u200b\u5b9a\u5236\u200b\u8fc7\u200b\u7684\u200b\u3002<code>self.add_module('__main__')</code> \u200b\u91cc\u9762\u200b\uff0c\u200b\u4f1a\u200b\u8bbe\u7f6e\u200b\u6a21\u5757\u200b\u7684\u200b <code>m.__builtins__ = self.modules['__builtin__']</code>\uff0c\u200b\u8fd9\u4e2a\u200b <code>__builtin__</code> \u200b\u662f\u200b\u7531\u200b <code>make_builtin</code> \u200b\u6765\u200b\u5b9a\u5236\u200b\u751f\u6210\u200b\u7684\u200b\uff0c\u200b\u5728\u200b\u91cc\u9762\u200b\u66ff\u6362\u200b\u4e86\u200b <code>__import__</code>\u3001<code>reload</code>\u3001<code>open</code> \u200b\u51fd\u6570\u200b\uff0c\u200b\u5e76\u200b\u5220\u9664\u200b\u4e86\u200b <code>file</code> \u200b\u7c7b\u578b\u200b\u3002\u200b\u8fd9\u6837\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c31\u200b\u80fd\u200b\u63a7\u5236\u200b\u8981\u200b\u6267\u884c\u200b\u7684\u200b\u4ee3\u7801\u200b\u5bf9\u5185\u200b\u5efa\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u7684\u200b\u8bbf\u95ee\u200b\u4e86\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u4e00\u4e9b\u200b\u5185\u200b\u5efa\u200b\u6a21\u5757\u200b\uff0c<code>rexec</code> \u200b\u4e5f\u200b\u505a\u200b\u4e86\u200b\u5b9a\u5236\u200b\uff0c\u200b\u4fdd\u62a4\u200b\u4e0d\u200b\u5b89\u5168\u200b\u7684\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u8b6c\u5982\u200b <code>sys</code> \u200b\u6a21\u5757\u200b\uff0c\u200b\u53ea\u200b\u4fdd\u7559\u200b\u4e86\u200b\u4e00\u90e8\u5206\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5e76\u4e14\u200b\u901a\u8fc7\u200b\u5b9a\u5236\u200b\u7684\u200b <code>self.loader</code>\u3001<code>self.importer</code>\uff0c\u200b\u6765\u200b\u5b9e\u73b0\u200b <code>import</code> \u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4f18\u5148\u200b\u52a0\u8f7d\u200b\u5b9a\u5236\u200b\u7684\u200b\u6a21\u5757\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u5bf9\u200b\u4ee3\u7801\u200b\u7ec6\u8282\u200b\u611f\u5174\u8da3\u200b\uff0c\u200b\u8bf7\u200b\u81ea\u884c\u200b\u67e5\u9605\u200b\u76f8\u5173\u200b\u6e90\u7801\u200b\u3002</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#rexec_1","title":"<code>rexec</code> \u200b\u7684\u200b\u5931\u8d25","text":"<p>\u200b\u4e0a\u6587\u200b\u63d0\u5230\u200b\uff0c<code>Python 2.3</code> \u200b\u4e4b\u540e\u200b\uff0c<code>rexec</code> \u200b\u5c31\u200b\u5df2\u7ecf\u200b\u5e9f\u5f03\u200b\u4e86\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u8bc1\u5b9e\u200b\u4e3a\u200b\u4e0d\u200b\u53ef\u884c\u200b\u3002\u200b\u5e26\u200b\u7740\u200b\u597d\u5947\u5fc3\u200b\uff0c\u200b\u6211\u4eec\u200b\u6765\u200b\u7b80\u5355\u200b\u6eaf\u6e90\u200b\u4e00\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u5728\u200b\u793e\u533a\u200b\u6709\u4eba\u200b\u62a5\u544a\u200b\u4e86\u200b Bug\uff0c\u200b\u5e76\u200b\u5f15\u53d1\u200b\u4e86\u200b\u5f00\u53d1\u8005\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8ba8\u8bba\u200b\uff1a <p>it's never going to be safe, and I doubt it's very useful as long as it's not safe.</p> <p>Every change is a potential security hole.</p> <p>it's hard to predict what change is going to break it.</p> <p>I don't expect you'll ever reach the point where it'll be wise to advertise this as safe.  I certainly won't.</p> <p>this is only a useful occupation if you expect to eventually reach a point where you expect that there aren't any security flaws left.  Jeremy &amp; I both doubt that Python will ever reach that level, meaning that the whole exercise of fixing security flaws is a waste of time (if you know you can't make it safe, don't waste time trying).</p> <p>I agree (but I have said that in past) the best thing is to deprecate/rip out rexec.</p> <p>The code will still be in older versions if someone decides to pick it up and work on it as a separate project.</p> </li> </ul> <ul> <li>\u200b\u8be5\u200b Bug \u200b\u7684\u200b\u8d77\u56e0\u200b\u662f\u200b <code>Python</code> \u200b\u5f15\u5165\u200b\u4e86\u200b\u65b0\u5f0f\u200b\u7c7b\u200b\uff08new-style class\uff09 <code>object</code>\uff0c\u200b\u5bfc\u81f4\u200b <code>rexec</code> \u200b\u4e0d\u80fd\u200b\u6b63\u5e38\u200b\u5de5\u4f5c\u200b\u3002\u200b\u4e8e\u662f\u200b\u5f00\u53d1\u8005\u200b\u8868\u793a\u200b\uff0c\u200b\u5728\u200b\u53ef\u200b\u9884\u89c1\u200b\u7684\u200b\u672a\u6765\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u90fd\u200b\u5f88\u200b\u96be\u200b\u907f\u514d\u200b\uff0c\u200b\u4efb\u610f\u200b\u7684\u200b\u4fee\u6539\u200b\u90fd\u200b\u4f1a\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b <code>rexec</code> \u200b\u51fa\u73b0\u200b\u6f0f\u6d1e\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u6b63\u5e38\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u6216\u8005\u200b\u88ab\u200b\u7a81\u7834\u200b\u6743\u9650\u200b\u7684\u200b\u9650\u5236\u200b\uff0c\u200b\u57fa\u672c\u4e0a\u200b\u65e0\u6cd5\u200b\u5b9e\u73b0\u200b\u6ca1\u6709\u200b\u6f0f\u6d1e\u200b\u5730\u53bb\u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b\u5b89\u5168\u200b\u73af\u5883\u200b\u7684\u200b\u613f\u666f\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u9700\u8981\u200b\u4e0d\u65ad\u200b\u5730\u200b\u4fee\u4fee\u8865\u8865\u200b\uff0c\u200b\u6d6a\u8d39\u200b\u5927\u91cf\u200b\u7684\u200b\u65f6\u95f4\u200b\u3002\u200b\u6700\u7ec8\u200b\uff0c<code>rexec</code> \u200b\u8fd9\u4e2a\u200b\u6a21\u5757\u200b\u5c31\u200b\u88ab\u200b\u5e9f\u5f03\u200b\u6389\u200b\u4e86\u200b\uff0c<code>Python</code> \u200b\u4e5f\u200b\u6ca1\u6709\u200b\u518d\u200b\u63d0\u4f9b\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u529f\u80fd\u200b\u3002\u200b\u4f46\u200b\u5173\u4e8e\u200b <code>__builtins__</code> \u200b\u7684\u200b\u8bbe\u5b9a\u200b\uff0c\u200b\u7531\u4e8e\u200b\u517c\u5bb9\u6027\u200b\u7b49\u200b\u95ee\u9898\u200b\uff0c\u200b\u5c31\u200b\u7ee7\u7eed\u200b\u4fdd\u7559\u200b\u4e0b\u6765\u200b\u4e86\u200b\u3002</li> </ul> <p>\u200b\u540e\u9762\u200b\u5728\u200b\u5927\u6982\u200b 2010 \u200b\u5e74\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u6709\u4f4d\u200b\u7a0b\u5e8f\u5458\u200b\u63a8\u51fa\u200b\u4e86\u200b pysandbox\uff0c\u200b\u81f4\u529b\u4e8e\u200b\u63d0\u4f9b\u200b\u53ef\u4ee5\u200b\u66ff\u4ee3\u200b <code>rexec</code> \u200b\u7684\u200b <code>Python</code> \u200b\u6c99\u76d2\u200b\u73af\u5883\u200b\u3002\u200b\u4f46\u662f\u200b 3 \u200b\u5e74\u200b\u540e\u200b\uff0c\u200b\u4f5c\u8005\u200b\u4e3b\u52a8\u200b\u653e\u5f03\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u9879\u76ee\u200b\uff0c\u200b\u5e76\u200b\u8be6\u7ec6\u200b\u8bf4\u660e\u200b\u4e86\u200b\u4e3a\u4ec0\u4e48\u200b\u4f5c\u8005\u200b\u8ba4\u4e3a\u200b\u8fd9\u4e2a\u200b\u9879\u76ee\u200b\u662f\u200b\u5931\u8d25\u200b\u7684\u200b\uff1aThe pysandbox project is broken\uff0c\u200b\u4e5f\u200b\u6709\u200b\u5176\u4ed6\u200b\u4f5c\u8005\u200b\u64b0\u6587\u200b\u603b\u7ed3\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u9879\u76ee\u200b\u7684\u200b\u5931\u8d25\u200b\uff1aThe failure of pysandbox\u3002\u200b\u5982\u679c\u200b\u611f\u5174\u8da3\u200b\u7684\u8bdd\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5177\u4f53\u200b\u53bb\u200b\u7ffb\u7ffb\u200b\u539f\u6587\u200b\uff0c\u200b\u6211\u200b\u8fd9\u91cc\u200b\u4e5f\u200b\u7ed9\u200b\u4e00\u4e9b\u200b\u6458\u8981\u200b\u6765\u200b\u5e2e\u52a9\u200b\u4e86\u89e3\u200b\uff1a</p> <p>After having work during 3 years on a pysandbox project to sandbox untrusted code, I now reached a point where I am convinced that pysandbox is broken by design. Different developers tried to convinced me before that pysandbox design is unsafe, but I had to experience it myself to be convineced.</p> <p>I now agree that putting a sandbox in CPython is the wrong design. There are too many ways to escape the untrusted namespace using the various introspection features of the Python language. To guarantee the [safety] of a security product, the code should be [carefully] audited and the code to review must be as small as possible. Using pysandbox, the \"code\" is the whole Python core which is a really huge code base. For example, the Python and Objects directories of Python 3.4 contain more than 126,000 lines of C code.</p> <p>The security of pysandbox is the security of its weakest part. A single bug is enough to escape the whole sandbox.</p> <p>pysandbox cannot be used in practice. To protect the untrusted namespace, pysandbox installs a lot of different protections. Because of all these protections, it becomes hard to write Python code. Basic features like \"del dict[key]\" are denied. Passing an object to a sandbox is not possible to sandbox, pysandbox is unable to proxify arbitary objects. For something more complex than evaluating \"1+(2*3)\", pysandbox cannot be used in practice, because of all these protections.</p> <p>pysandbox \u200b\u7684\u200b\u4f5c\u8005\u200b\u8ba4\u4e3a\u200b\uff0c\u200b\u5728\u200b <code>Python</code> \u200b\u91cc\u9762\u200b\u653e\u200b\u4e00\u4e2a\u200b\u6c99\u76d2\u200b\u73af\u5883\u200b\u662f\u200b\u9519\u8bef\u200b\u7684\u200b\u8bbe\u8ba1\u200b\uff0c\u200b\u6709\u592a\u591a\u200b\u7684\u200b\u65b9\u5f0f\u200b\u53ef\u4ee5\u200b\u4ece\u6c99\u76d2\u200b\u4e2d\u200b\u9003\u9038\u200b\u51fa\u53bb\u200b\uff0c<code>Python</code> \u200b\u63d0\u4f9b\u200b\u7684\u200b\u8bed\u8a00\u200b\u7279\u6027\u200b\u5f88\u200b\u4e30\u5bcc\u200b\uff0c<code>CPython</code> \u200b\u6e90\u7801\u200b\u7684\u200b\u4ee3\u7801\u200b\u91cf\u200b\u5f88\u5927\u200b\uff0c\u200b\u57fa\u672c\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u4fdd\u8bc1\u200b\u6709\u200b\u8db3\u591f\u200b\u7684\u200b\u5b89\u5168\u6027\u200b\u3002\u200b\u800c\u200b pysandbox \u200b\u7684\u200b\u5f00\u53d1\u200b\u8fc7\u7a0b\u200b\u5c31\u662f\u200b\u5728\u200b\u4e0d\u65ad\u200b\u5730\u200b\u6253\u8865\u4e01\u200b\uff0c\u200b\u8865\u4e01\u200b\u592a\u200b\u591a\u200b\uff0c\u200b\u9650\u5236\u200b\u592a\u200b\u591a\u200b\uff0c\u200b\u4ee5\u81f3\u4e8e\u200b\u4f5c\u8005\u200b\u8ba4\u4e3a\u200b pysandbox \u200b\u5df2\u7ecf\u200b\u6ca1\u6cd5\u200b\u5b9e\u9645\u200b\u4f7f\u7528\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5f88\u591a\u200b\u7684\u200b\u8bed\u6cd5\u200b\u7279\u6027\u200b\u548c\u200b\u529f\u80fd\u200b\u90fd\u200b\u88ab\u200b\u9650\u5236\u200b\u4e0d\u80fd\u200b\u4f7f\u7528\u200b\u4e86\u200b\uff0c\u200b\u8b6c\u5982\u200b\u7b80\u5355\u200b\u7684\u200b <code>del dict[key]</code>\u3002</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#restricted-execution_2","title":"Restricted Execution \u200b\u51fa\u8def\u200b\u5728\u200b\u54ea","text":"<p>\u200b\u65e2\u7136\u200b <code>rexec</code> \u200b\u548c\u200b pysandbox \u200b\u8fd9\u79cd\u200b\u901a\u8fc7\u200b Patch Python \u200b\u6765\u200b\u63d0\u4f9b\u200b\u6c99\u76d2\u200b\u73af\u5883\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff08\u200b\u8fd9\u91cc\u200b\u59d1\u4e14\u200b\u628a\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u79f0\u4f5c\u200b Patch Python\uff09\u200b\u5df2\u7ecf\u200b\u8d70\u200b\u4e0d\u901a\u200b\u4e86\u200b\uff0c\u200b\u90a3\u200b\u6211\u200b\u4e0d\u7981\u200b\u597d\u5947\u200b\uff1a\u200b\u8981\u200b\u600e\u4e48\u200b\u624d\u80fd\u200b\u7ed9\u200b Python \u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b\u80fd\u7528\u200b\u7684\u200b\u6c99\u76d2\u200b\u73af\u5883\u200b\uff1f</p> <p>\u200b\u5728\u200b\u8fd9\u91cc\u200b\u6211\u200b\u7ee7\u7eed\u200b\u6536\u96c6\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5176\u4ed6\u200b\u7684\u200b\u5b9e\u73b0\u200b\u65b9\u6cd5\u200b\u6216\u8005\u200b\u6848\u4f8b\u200b\uff0c\u200b\u65b9\u4fbf\u200b\u53c2\u8003\u200b\u548c\u200b\u67e5\u9605\u200b\uff1a</p> <ul> <li>PyPy \u200b\u6709\u200b\u4e00\u4e2a\u200b\u5206\u652f\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6c99\u76d2\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c\u200b\u7ed3\u5408\u200b\u989d\u5916\u200b\u7684\u200b sandboxlib\uff0c\u200b\u53ef\u4ee5\u200b\u81ea\u884c\u200b\u7f16\u8bd1\u200b\u51fa\u5e26\u200b\u6c99\u76d2\u200b\u73af\u5883\u200b\u7248\u672c\u200b\u7684\u200b PyPy\u3002\u200b\u5982\u679c\u200b\u611f\u5174\u8da3\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c1d\u8bd5\u200b\u81ea\u884c\u200b\u914d\u7f6e\u200b\uff0c\u200b\u53c2\u8003\u200b\u8fd9\u91cc\u200b\u7684\u200b\u4e00\u4e9b\u200b\u8bf4\u660e\u200b\u3002PyPy \u200b\u5b9e\u73b0\u200b\u7684\u200b\u539f\u7406\u200b\u662f\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5b50\u200b\u8fdb\u7a0b\u200b\uff0c\u200b\u5b50\u200b\u8fdb\u7a0b\u200b\u7684\u200b\u6240\u6709\u200b\u8f93\u5165\u8f93\u51fa\u200b\u548c\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\uff0c\u200b\u90fd\u200b\u4f1a\u200b\u91cd\u5b9a\u5411\u200b\u5230\u200b\u5916\u90e8\u200b\u8fdb\u7a0b\u200b\uff0c\u200b\u7531\u200b\u5916\u90e8\u200b\u8fdb\u7a0b\u200b\u63a7\u5236\u200b\u8fd9\u4e9b\u200b\u6743\u9650\u200b\uff0c\u200b\u53e6\u5916\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u63a7\u5236\u200b\u5185\u5b58\u200b\u548c\u200b CPU \u200b\u7684\u200b\u4f7f\u7528\u91cf\u200b\u3002\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u5206\u652f\u200b\u4e5f\u200b\u6709\u200b\u6bb5\u65f6\u95f4\u200b\u6ca1\u6709\u200b\u65b0\u200b\u7684\u200b\u63d0\u4ea4\u200b\u4e86\u200b\uff0c\u200b\u8bf7\u200b\u8c28\u614e\u200b\u4f7f\u7528\u200b\u3002</li> </ul> <ul> <li>\u200b\u501f\u52a9\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u63d0\u4f9b\u200b\u7684\u200b\u6c99\u76d2\u200b\u73af\u5883\u200b\u5de5\u5177\u200b\u3002seccomp \u200b\u662f\u200b Linux \u200b\u5185\u6838\u200b\u63d0\u4f9b\u200b\u7684\u200b\u8ba1\u7b97\u200b\u5b89\u5168\u200b\u5de5\u5177\u200b\uff0clibsecoomp \u200b\u63d0\u4f9b\u200b\u4e86\u200b Python \u200b\u7ed1\u5b9a\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5185\u5d4c\u200b\u5230\u200b\u4ee3\u7801\u200b\u91cc\u9762\u200b\u4f7f\u7528\u200b\uff1b\u200b\u6216\u8005\u200b\u4f7f\u7528\u200b\u57fa\u4e8e\u200b seccomp \u200b\u5b9e\u73b0\u200b\u7684\u200b\u5de5\u5177\u200b\u6765\u200b\u6267\u884c\u200b\u4ee3\u7801\u200b\uff0c\u200b\u8b6c\u5982\u200b Firejail\u3002AppArmor \u200b\u662f\u200b\u4e00\u4e2a\u200b Linux \u200b\u5185\u6838\u200b\u5b89\u5168\u200b\u6a21\u5757\u200b\uff0c\u200b\u5141\u8bb8\u200b\u7ba1\u7406\u5458\u200b\u63a7\u5236\u7a0b\u5e8f\u200b\u80fd\u200b\u8bbf\u95ee\u200b\u7684\u200b\u7cfb\u7edf\u8d44\u6e90\u200b\u548c\u200b\u529f\u80fd\u200b\uff0c\u200b\u4fdd\u62a4\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u3002codejail \u200b\u662f\u200b\u57fa\u4e8e\u200b AppArmor \u200b\u5b9e\u73b0\u200b\u7684\u200b Python \u200b\u6c99\u76d2\u200b\u73af\u5883\u200b\uff0c\u200b\u6709\u200b\u5174\u8da3\u200b\u53ef\u4ee5\u200b\u5c1d\u8bd5\u200b\u3002\u200b\u8fd8\u6709\u200b\u5f88\u591a\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u5de5\u5177\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4e0d\u200b\u4e00\u4e00\u5217\u4e3e\u200b\u3002</li> </ul> <ul> <li>\u200b\u4f7f\u7528\u200b\u6c99\u76d2\u200b\u865a\u62df\u73af\u5883\u200b\u6216\u8005\u200b\u5bb9\u5668\u200b\u3002Windows \u200b\u6c99\u76d2\u200b\uff0cLXC, Docker \u200b\u7b49\u7b49\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4e0d\u518d\u200b\u8be6\u8ff0\u200b\u3002</li> </ul>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#_2","title":"\u603b\u7ed3","text":"<p>\u200b\u672c\u6587\u200b\u7bc7\u5e45\u200b\u6709\u70b9\u200b\u957f\u200b\uff0c\u200b\u611f\u8c22\u200b\u770b\u5230\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u6587\u7ae0\u200b\u4e00\u200b\u5f00\u59cb\u200b\u6240\u200b\u5217\u51fa\u200b\u7684\u200b\u7591\u95ee\u200b\uff0c\u200b\u76f8\u4fe1\u200b\u90fd\u200b\u5df2\u7ecf\u200b\u89e3\u7b54\u200b\u5b8c\u6bd5\u200b\u3002</p> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/","title":"Python \u200b\u6742\u8c08\u200b 2 - Python3.12 \u200b\u70ed\u200b\u66f4\u65b0","text":"","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#python-2-python312","title":"Python \u200b\u6742\u8c08\u200b 2 - Python3.12 \u200b\u70ed\u200b\u66f4\u65b0","text":"<p>\u200b\u8bb0\u5f55\u200b\u5982\u4f55\u200b\u5728\u200b Python3.12 \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u70ed\u200b\u66f4\u65b0\u200b</p>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#_1","title":"\u70ed\u200b\u66f4\u65b0","text":"<p>\u200b\u70ed\u200b\u66f4\u65b0\u200b\uff08Hot Reload\uff09\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u5728\u200b\u4e0d\u200b\u9700\u8981\u200b\u91cd\u542f\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u5bf9\u200b\u5176\u200b\u8fdb\u884c\u200b\u66f4\u65b0\u200b\u7684\u200b\u6280\u672f\u200b\u3002\u200b\u8fd9\u9879\u200b\u6280\u672f\u200b\u5728\u200b\u6e38\u620f\u200b\u884c\u4e1a\u200b\u6709\u200b\u5e7f\u6cdb\u200b\u7684\u200b\u5e94\u7528\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u5bf9\u200b\u6e38\u620f\u200b\u95ee\u9898\u200b\u8fdb\u884c\u200b\u4fee\u590d\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u4e0d\u200b\u5bf9\u200b\u73a9\u5bb6\u200b\u9020\u6210\u200b\u5f71\u54cd\u200b\uff0c\u200b\u5f80\u5f80\u200b\u9700\u8981\u200b\u91c7\u7528\u200b\u4e00\u4e9b\u200b\u9759\u9ed8\u200b\u66f4\u65b0\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u70ed\u200b\u66f4\u65b0\u200b\u3002</p>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#python","title":"Python \u200b\u70ed\u200b\u66f4\u65b0","text":"<p>Python \u200b\u672c\u8eab\u200b\u662f\u200b\u52a8\u6001\u200b\u8bed\u8a00\u200b\uff0c\u200b\u4e00\u5207\u200b\u7686\u200b\u662f\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u662f\u200b\u6709\u200b\u80fd\u529b\u200b\u505a\u5230\u200b\u70ed\u200b\u66f4\u65b0\u200b\u7684\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7c97\u7565\u200b\u628a\u200b Python \u200b\u4e2d\u200b\u7684\u200b\u9700\u8981\u200b\u70ed\u200b\u66f4\u200b\u7684\u200b\u5bf9\u8c61\u200b\u5206\u6210\u200b\u4e24\u79cd\u200b\uff1a\u200b\u6570\u636e\u200b \u200b\u548c\u200b \u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u6570\u636e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u6210\u200b\u6e38\u620f\u200b\u4e2d\u200b\u7684\u200b\u6570\u503c\u200b\u6216\u8005\u200b\u8bbe\u5b9a\u200b\uff0c\u200b\u8b6c\u5982\u200b\u73a9\u5bb6\u200b\u7684\u200b\u7b49\u7ea7\u200b\uff0c\u200b\u88c5\u5907\u200b\u7b49\u7b49\u200b\u4e00\u4e9b\u200b\u6570\u636e\u200b\uff0c\u200b\u90e8\u5206\u200b\u6570\u636e\u200b\u662f\u200b\u4e0d\u200b\u5e94\u8be5\u200b\u70ed\u200b\u66f4\u200b\u7684\u200b\uff08\u200b\u8b6c\u5982\u200b\u73a9\u5bb6\u200b\u5f53\u524d\u200b\u7b49\u7ea7\u200b\uff0c\u200b\u73a9\u5bb6\u200b\u8eab\u4e0a\u200b\u62e5\u6709\u200b\u54ea\u4e9b\u200b\u88c5\u5907\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u200b\u7684\u200b\u4fee\u6539\u200b\u4e0d\u200b\u5e94\u8be5\u200b\u901a\u8fc7\u200b\u70ed\u200b\u66f4\u200b\u6765\u200b\u5b9e\u73b0\u200b\uff09\uff0c\u200b\u90e8\u5206\u200b\u6570\u636e\u200b\u662f\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u70ed\u200b\u66f4\u200b\u7684\u200b\uff08\u200b\u8b6c\u5982\u200b\u88c5\u5907\u200b\u7684\u200b\u57fa\u7840\u200b\u6570\u503c\u200b\u8bbe\u5b9a\u200b\uff0c\u200b\u6280\u80fd\u200b\u7684\u200b\u57fa\u7840\u200b\u6570\u503c\u200b\u8bbe\u5b9a\u200b\uff0cUI \u200b\u4e0a\u200b\u7684\u200b\u6587\u5b57\u200b\u7b49\u7b49\u200b\uff09\u3002</p> <p>\u200b\u51fd\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u6210\u200b\u6e38\u620f\u200b\u903b\u8f91\u200b\uff0c\u200b\u8fd9\u200b\u57fa\u672c\u200b\u90fd\u200b\u662f\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u70ed\u200b\u66f4\u200b\u7684\u200b\uff0c\u200b\u903b\u8f91\u200b\u9519\u8bef\u200b\u57fa\u672c\u200b\u90fd\u200b\u9700\u8981\u200b\u901a\u8fc7\u200b\u70ed\u200b\u66f4\u65b0\u200b\u51fd\u6570\u200b\u6765\u200b\u5b9e\u73b0\u200b\u3002</p> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u6765\u200b\u5177\u4f53\u200b\u770b\u770b\u200b\u6709\u200b\u4ec0\u4e48\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u5bf9\u200b Python3.12 \u200b\u6267\u884c\u200b\u70ed\u200b\u66f4\u65b0\u200b\u3002</p>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#hotfix","title":"Hotfix","text":"<p>\u200b\u7b2c\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\u6211\u4eec\u200b\u53eb\u505a\u200b Hotfix\uff0c\u200b\u901a\u8fc7\u200b\u8ba9\u200b\u7a0b\u5e8f\u200b\uff08\u200b\u5ba2\u6237\u7aef\u7a0b\u5e8f\u200b / \u200b\u670d\u52a1\u7aef\u200b\u7a0b\u5e8f\u200b\u90fd\u200b\u53ef\u4ee5\u200b\uff09\u200b\u6267\u884c\u200b\u4e00\u6bb5\u200b\u7279\u5b9a\u200b\u7684\u200b Python \u200b\u4ee3\u7801\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u5bf9\u200b\u6570\u636e\u200b\u548c\u200b\u51fd\u6570\u200b\u7684\u200b\u70ed\u200b\u66f4\u65b0\u200b\u3002\u200b\u4e00\u6bb5\u200b\u7b80\u5355\u200b\u7684\u200b Hotfix \u200b\u4ee3\u7801\u200b\u53ef\u80fd\u200b\u662f\u200b\u8fd9\u6837\u200b\uff1a</p> <pre><code># hotfix code\n\n# hotfix data\nimport weapon_data\nweapon_data.gun.damage = 100\n\n# hotfix func\nimport player\ndef new_fire_func(self, target):\n    target.health -= weapon_data.gun.damage\n    # ...\nplayer.Player.fire_func = new_fire_func\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u4ee3\u7801\u200b\u7b80\u5355\u200b\u5c55\u793a\u200b Hotfix \u200b\u7684\u200b\u5199\u6cd5\u200b\uff0c\u200b\u6570\u636e\u200b / \u200b\u51fd\u6570\u200b\u4fee\u6539\u200b\u4e4b\u540e\u200b\uff0c\u200b\u7a0b\u5e8f\u200b\u540e\u7eed\u200b\u8bbf\u95ee\u200b\u7684\u200b\u65f6\u5019\u200b\u5c31\u200b\u4f1a\u200b\u8bfb\u200b\u5230\u200b\u65b0\u200b\u7684\u200b\u6570\u636e\u200b / \u200b\u51fd\u6570\u200b\u6765\u200b\u6267\u884c\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u6bd4\u8f83\u200b\u7ec6\u81f4\u200b\uff0c\u200b\u4f60\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u6709\u200b\u4e00\u4e2a\u200b\u7591\u95ee\u200b\uff1a\u200b\u90a3\u200b\u5982\u679c\u200b\u5176\u4ed6\u200b\u4ee3\u7801\u200b\u91cc\u9762\u200b\u5f15\u7528\u200b\u4f4f\u200b\u4e86\u200b\u8fd9\u4e9b\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u6570\u636e\u200b\u548c\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f1a\u200b\u53d1\u751f\u200b\u4ec0\u4e48\u200b\u4e8b\u60c5\u200b\uff1f</p> <pre><code># attack.py module\n\nplayer_fire = player.Player.fire_func\n\ndef player_attack_by_gun(player, target):\n    player_fire(player, target)\n    # ...\n</code></pre> <p>\u200b\u7b54\u6848\u200b\u662f\u200b\uff0c\u200b\u524d\u9762\u200b\u7684\u200b Hotfix \u200b\u5bf9\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u662f\u200b\u4e0d\u200b\u751f\u6548\u200b\u7684\u200b\uff0c<code>fire_func</code> \u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u76f8\u5f53\u4e8e\u200b\u5728\u200b\u5176\u4ed6\u200b\u6a21\u5757\u200b\u591a\u200b\u4e86\u200b\u4e00\u4efd\u200b\u526f\u672c\u200b\uff0c\u200b\u8be5\u200b\u6a21\u5757\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200b\u662f\u200b\u51fd\u6570\u200b\u7684\u200b\u526f\u672c\u200b\uff0c\u200b\u6211\u4eec\u200b\u4fee\u6539\u200b\u51fd\u6570\u200b\u672c\u4f53\u200b\u5bf9\u200b\u526f\u672c\u200b\u4e0d\u200b\u751f\u6548\u200b\u3002</p> <p>\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\uff0c\u200b\u4e00\u822c\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u5c3d\u91cf\u51cf\u5c11\u200b\u6a21\u5757\u200b\u7ea7\u522b\u200b\u7684\u200b\u6570\u636e\u200b\u5f15\u7528\u200b\u548c\u200b\u51fd\u6570\u200b\u5f15\u7528\u200b\uff0c\u200b\u907f\u514d\u51fa\u73b0\u200b\u8fd9\u79cd\u200b Hotfix \u200b\u4e0d\u200b\u751f\u6548\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5982\u679c\u200b\u4ee3\u7801\u200b\u5df2\u7ecf\u200b\u662f\u200b\u8fd9\u6837\u200b\u5199\u200b\u7684\u200b\uff0cHotfix \u200b\u9700\u8981\u200b\u591a\u200b\u505a\u200b\u4e00\u4e9b\u200b\u5de5\u4f5c\u200b\uff1a</p> <pre><code># hotfix code\n# ...\n\nimport attack\nattack.player_fire = player.Player.fire_func\n</code></pre> <p>\u200b\u5728\u200b\u5bf9\u200b\u6570\u636e\u200b / \u200b\u51fd\u6570\u200b\u672c\u4f53\u200b Hotfix \u200b\u4fee\u6539\u200b\u4e4b\u540e\u200b\uff0c\u200b\u518d\u200b\u989d\u5916\u200b\u5bf9\u200b\u5f15\u7528\u200b\u7684\u200b\u5730\u65b9\u200b\u8fdb\u884c\u200b\u4fee\u6539\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u989d\u5916\u200b\u7684\u200b\u4fee\u6539\u200b\u5f88\u200b\u5bb9\u6613\u200b\u88ab\u200b\u9057\u6f0f\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u8fd8\u662f\u200b\u5efa\u8bae\u200b\uff0c\u200b\u4ece\u200b\u4ee3\u7801\u200b\u89c4\u8303\u200b\u4e0a\u6765\u200b\u5c3d\u91cf\u907f\u514d\u200b\u591a\u5904\u200b\u5f15\u7528\u200b\u7684\u200b\u5199\u6cd5\u200b\u3002</p> <p>\u200b\u7efc\u4e0a\u200b\uff0cHotfix \u200b\u80fd\u200b\u6ee1\u8db3\u200b\u70ed\u200b\u66f4\u200b\u7684\u200b\u57fa\u672c\u200b\u9700\u6c42\u200b\uff0c\u200b\u540c\u65f6\u200b\u5b58\u5728\u200b\u4ee5\u4e0b\u200b\u95ee\u9898\u200b\uff1a</p> <ul> <li>\u200b\u5982\u679c\u200b\u6570\u636e\u200b/\u200b\u51fd\u6570\u200b\u88ab\u200b\u5176\u4ed6\u200b\u6a21\u5757\u200b\u660e\u786e\u200b\u5f15\u7528\u200b\u4f4f\u200b\uff0c\u200b\u9700\u8981\u200b\u989d\u5916\u200b\u5bf9\u200b\u8fd9\u4e9b\u200b\u6a21\u5757\u200b\u7684\u200b\u5f15\u7528\u200b Hotfix</li> <li>\u200b\u5982\u679c\u200b\u6709\u200b\u5927\u91cf\u200b\u7684\u200b\u6570\u636e\u200b/\u200b\u51fd\u6570\u200b\u9700\u8981\u200b Hotfix\uff0c\u200b\u90a3\u4e48\u200b Hotfix \u200b\u7684\u200b\u4ee3\u7801\u200b\u4f1a\u200b\u53d8\u5f97\u200b\u5f88\u200b\u5e9e\u5927\u200b\uff0c\u200b\u7ef4\u62a4\u200b\u96be\u5ea6\u200b\u4e0a\u5347\u200b\uff0c\u200b\u4e5f\u200b\u66f4\u200b\u5bb9\u6613\u200b\u51fa\u9519\u200b</li> </ul>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#reload","title":"Reload","text":"<p>\u200b\u672c\u200b\u7ae0\u8282\u200b\u6e90\u7801\u200b\u53ef\u200b\u4ece\u200b\u8fd9\u91cc\u200b\u83b7\u5f97\u200b\uff1apython_reloader</p> <p>\u200b\u6211\u4eec\u200b\u66f4\u200b\u60f3\u8981\u200b\u7684\u200b\u662f\u200b\u81ea\u52a8\u200b\u70ed\u200b\u66f4\u65b0\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u989d\u5916\u200b\u5199\u200b Hotfix\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u66f4\u65b0\u200b\u4ee3\u7801\u200b\u6587\u4ef6\u200b\uff0c\u200b\u8ba9\u200b\u7a0b\u5e8f\u6267\u884c\u200b\u4e00\u4e2a\u200b Reload \u200b\u51fd\u6570\u200b\u5219\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u66ff\u6362\u200b\u65b0\u200b\u7684\u200b\u51fd\u6570\u200b\u548c\u200b\u65b0\u200b\u7684\u200b\u6570\u636e\u200b\u3002\u200b\u6211\u4eec\u200b\u628a\u200b\u8fd9\u4e2a\u200b\u81ea\u52a8\u200b\u70ed\u200b\u66f4\u65b0\u200b\u7684\u200b\u529f\u80fd\u200b\u53eb\u505a\u200b Reload\u3002</p> <p>Python3.12 \u200b\u63d0\u4f9b\u200b\u4e86\u200b importlib.reload \u200b\u51fd\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u91cd\u65b0\u200b\u52a0\u8f7d\u200b\u6a21\u5757\u200b\uff0c\u200b\u4f46\u662f\u200b\u5374\u662f\u200b\u5168\u91cf\u200b\u52a0\u8f7d\u200b\uff0c\u200b\u5e76\u4e14\u200b\u8fd4\u56de\u200b\u65b0\u200b\u7684\u200b\u6a21\u5757\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u5176\u4ed6\u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b\u5f15\u7528\u200b\uff0c\u200b\u5e76\u200b\u4e0d\u80fd\u200b\u81ea\u52a8\u200b\u4fee\u6539\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u5176\u4ed6\u200b\u6a21\u5757\u200b\u5982\u679c\u200b import \u200b\u4e86\u200b reload \u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8bbf\u95ee\u200b\u7684\u200b\u4f9d\u7136\u200b\u662f\u200b\u65e7\u200b\u7684\u200b\u6a21\u5757\u200b\u5bf9\u8c61\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u529f\u80fd\u200b\u6bd4\u200b\u6211\u4eec\u200b\u7684\u200b Hotfix \u200b\u597d\u200b\u4e0d\u4e86\u200b\u591a\u5c11\u200b\uff0c\u200b\u66f4\u4f55\u51b5\u200b\u662f\u200b\u5168\u91cf\u200b reload \u200b\u6a21\u5757\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u7531\u200b\u6211\u4eec\u200b\u63a7\u5236\u200b\u54ea\u4e9b\u200b\u6570\u636e\u200b\u5e94\u8be5\u200b\u4fdd\u7559\u200b\u3002\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u81ea\u5df1\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b Reload \u200b\u529f\u80fd\u200b\uff0c\u200b\u6ee1\u8db3\u200b\u8fd9\u4e9b\u200b\u8981\u6c42\u200b\uff1a</p> <ul> <li>\u200b\u81ea\u52a8\u200b\u66ff\u6362\u200b\u51fd\u6570\u200b\uff0c\u200b\u540c\u65f6\u200b\u65e7\u200b\u51fd\u6570\u200b\u7684\u200b\u5f15\u7528\u200b\u4f9d\u7136\u200b\u6709\u6548\u200b\uff0c\u200b\u5e76\u4f1a\u200b\u6267\u884c\u200b\u65b0\u200b\u51fd\u6570\u200b\u7684\u200b\u5185\u5bb9\u200b</li> <li>\u200b\u81ea\u52a8\u200b\u66ff\u6362\u200b\u6570\u636e\u200b\uff0c\u200b\u540c\u65f6\u200b\u53ef\u200b\u63a7\u5236\u200b\u90e8\u5206\u200b\u66ff\u6362\u200b</li> <li>\u200b\u4fdd\u7559\u200b\u65e7\u200b\u6a21\u5757\u200b\u7684\u200b\u5f15\u7528\u200b\uff0c\u200b\u901a\u8fc7\u200b\u65e7\u200b\u6a21\u5757\u200b\u5c31\u200b\u80fd\u200b\u8bbf\u95ee\u200b\u5230\u200b\u65b0\u200b\u7684\u200b\u5185\u5bb9\u200b</li> <li>\u200b\u9700\u8981\u200b Reload \u200b\u7684\u200b\u6a21\u5757\u200b\u53ef\u63a7\u200b</li> </ul> <p>\u200b\u8981\u200b\u5b8c\u6210\u200b\u8fd9\u4e9b\u200b\u8981\u6c42\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u501f\u52a9\u200b Python \u200b\u91cc\u9762\u200b meta_path \u200b\u7684\u200b\u673a\u5236\u200b\uff0c\u200b\u8be6\u7ec6\u200b\u7684\u200b\u4ecb\u7ecd\u200b\u53ef\u4ee5\u200b\u770b\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b the-meta-path\u3002</p> <p>sys.meta_path \u200b\u91cc\u9762\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u6211\u4eec\u200b\u7684\u200b\u5143\u200b\u8def\u5f84\u200b\u67e5\u627e\u200b\u5668\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u8b6c\u5982\u200b\u6211\u4eec\u200b\u628a\u200b\u7528\u4e8e\u200b Reload \u200b\u7684\u200b\u67e5\u627e\u200b\u5668\u200b\u53eb\u505a\u200b reload_finder\uff0creload_finder \u200b\u9700\u8981\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b find_spec \u200b\u5e76\u200b\u8fd4\u56de\u200b spec \u200b\u5bf9\u8c61\u200b\u3002Python \u200b\u62ff\u5230\u200b spec \u200b\u5bf9\u8c61\u200b\u540e\u200b\uff0c\u200b\u4f1a\u200b\u4f9d\u6b21\u200b\u6267\u884c\u200b spec.loader.create_module \u200b\u548c\u200b spec.loader.exec_module \u200b\u5b8c\u6210\u200b\u6a21\u5757\u200b\u7684\u200b\u5bfc\u5165\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6267\u884c\u200b\u65b0\u200b\u7684\u200b\u6a21\u5757\u200b\u4ee3\u7801\u200b\uff0c\u200b\u5e76\u200b\u628a\u200b\u65b0\u200b\u7684\u200b\u6a21\u5757\u200b\u91cc\u9762\u200b\u7684\u200b\u51fd\u6570\u200b\u548c\u200b\u9700\u8981\u200b\u7684\u200b\u6570\u636e\u200b\u590d\u5236\u5230\u200b\u65e7\u200b\u6a21\u5757\u200b\u4e2d\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u8fbe\u5230\u200b Reload \u200b\u7684\u200b\u76ee\u7684\u200b\uff1a</p> <pre><code>class MetaFinder:\n    def __init__(self, reloader):\n        self._reloader = reloader\n\n    def find_spec(self, fullname, path, target=None):\n        # find source file\n        finder = importlib.machinery.PathFinder()\n        spec = finder.find_spec(fullname, path)\n        if not spec:\n            return\n\n        old_module = self._reloader.GetOldModule(fullname)\n        if old_module:\n            # run new code in old module dict\n            code = spec.loader.get_code(fullname)\n            exec(code, old_module.__dict__)\n            module = old_module\n        else:\n            # if old module not exists, just create a new one\n            module = import_util.module_from_spec(spec)\n            spec.loader.exec_module(module)\n\n        try:\n            self._reloader.ReloadModule(module)\n        except:\n            sys.excepthook(*sys.exc_info())\n\n        return import_util.spec_from_loader(fullname, MetaLoader(module))\n\n\nclass MetaLoader:\n    def __init__(self, module):\n        self._module = module\n\n    def create_module(self, spec):\n        return self._module\n\n    def exec_module(self, module):\n        # restore __spec__\n        module.__spec__ = module.__dict__.pop('__backup_spec__')\n        module.__loader__ = module.__dict__.pop('__backup_loader__')\n</code></pre> <p>\u200b\u5982\u200b\u4e0a\u200b\uff0c<code>find_spec</code> \u200b\u52a0\u8f7d\u200b\u6700\u65b0\u200b\u7684\u200b\u6a21\u5757\u200b\u6e90\u7801\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u65e7\u200b\u6a21\u5757\u200b\u7684\u200b <code>__dict__</code> \u200b\u91cc\u9762\u200b\u6267\u884c\u200b\u65b0\u200b\u6a21\u5757\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u4e4b\u540e\u200b\u6211\u4eec\u200b\u8c03\u7528\u200b <code>ReloadModule</code> \u200b\u6765\u200b\u5904\u7406\u200b\u7c7b\u200b / \u200b\u51fd\u6570\u200b / \u200b\u6570\u636e\u200b\u7684\u200b\u5f15\u7528\u200b\u548c\u200b\u66ff\u6362\u200b\u3002<code>MetaLoader</code> \u200b\u7684\u200b\u76ee\u7684\u200b\u662f\u200b\u9002\u914d\u200b meta_path \u200b\u673a\u5236\u200b\uff0c\u200b\u7ed9\u200b Python \u200b\u865a\u62df\u673a\u200b\u8fd4\u56de\u200b\u6211\u4eec\u200b\u5904\u7406\u200b\u8fc7\u200b\u7684\u200b\u6a21\u5757\u200b\u5bf9\u8c61\u200b\u3002</p> <p>\u200b\u5904\u7406\u200b\u5b8c\u200b\u52a0\u8f7d\u200b\u7684\u200b\u6d41\u7a0b\u200b\uff0c\u200b\u518d\u200b\u6765\u770b\u200b <code>ReloadModule</code> \u200b\u7684\u200b\u5927\u81f4\u200b\u5b9e\u73b0\u200b</p> <pre><code># ...\ndef ReloadModule(self, module):\n    old_module_info = self._old_module_infos.get(module.__name__)\n    if not old_module_info:\n        return\n\n    self.ReloadDict(module, old_module_info, module.__dict__)\n\ndef ReloadDict(self, module, old_dict, new_dict, _reload_all_data=False, _del_func=False):\n    dels = []\n\n    for attr_name, old_attr in old_dict.items():\n\n        if attr_name in self.IGNORE_ATTRS:\n            continue\n\n        if attr_name not in new_dict:\n            if _del_func and (inspect.isfunction(old_attr) or inspect.ismethod(old_attr)):\n                dels.append(attr_name)\n            continue\n\n        new_attr = new_dict[attr_name]\n\n        if inspect.isclass(old_attr):\n            new_dict[attr_name] = self.ReloadClass(module, old_attr, new_attr)\n\n        elif inspect.isfunction(old_attr):\n            new_dict[attr_name] = self.ReloadFunction(module, old_attr, new_attr)\n\n        elif inspect.ismethod(old_attr) or isinstance(old_attr, classmethod) or isinstance(old_attr, staticmethod):\n            self.ReloadFunction(module, old_attr.__func__, new_attr.__func__)\n            new_dict[attr_name] = old_attr\n\n        elif inspect.isbuiltin(old_attr) \\\n                or inspect.ismodule(old_attr) \\\n                or inspect.ismethoddescriptor(old_attr) \\\n                or isinstance(old_attr, property):\n            # keep new\n            pass\n\n        elif not _reload_all_data and not self.NeedUpdateData(module, new_dict, attr_name):\n            # keep old data\n            new_dict[attr_name] = old_attr\n\n    if dels:\n        for name in dels:\n            old_dict.pop(name)\n# ...\n</code></pre> <p><code>ReloadDict</code> \u200b\u91cc\u9762\u200b\u4f1a\u200b\u533a\u5206\u200b\u5904\u7406\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b</p> <ul> <li>\u200b\u5982\u679c\u200b\u662f\u200b class\uff0c\u200b\u5219\u200b\u8c03\u7528\u200b <code>ReloadClass</code>\uff0c\u200b\u4f1a\u200b\u8fd4\u56de\u200b\u65e7\u200b\u6a21\u5757\u200b\u7684\u200b\u5f15\u7528\u200b\uff0c\u200b\u5e76\u200b\u66f4\u65b0\u200b class \u200b\u7684\u200b\u6210\u5458\u200b</li> <li>\u200b\u5982\u679c\u200b\u662f\u200b function / method \uff0c\u200b\u5219\u200b\u8c03\u7528\u200b <code>ReloadFunction</code>\uff0c\u200b\u4f1a\u200b\u8fd4\u56de\u200b\u65e7\u200b\u6a21\u5757\u200b\u7684\u200b\u5f15\u7528\u200b\uff0c\u200b\u5e76\u200b\u66f4\u65b0\u200b\u51fd\u6570\u200b\u7684\u200b\u5185\u90e8\u200b\u6570\u636e\u200b</li> <li>\u200b\u5982\u679c\u200b\u662f\u200b\u6570\u636e\u200b\uff0c\u200b\u5e76\u4e14\u200b\u9700\u8981\u200b\u4fdd\u7559\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u56de\u6eda\u200b <code>new_dict[attr_name] = old_attr</code></li> <li>\u200b\u5176\u4f59\u200b\u7684\u200b\u90fd\u200b\u4fdd\u6301\u200b\u65b0\u200b\u7684\u200b\u5f15\u7528\u200b</li> <li>\u200b\u5220\u9664\u200b\u65b0\u200b\u6a21\u5757\u200b\u4e0d\u200b\u5b58\u5728\u200b\u7684\u200b\u51fd\u6570\u200b</li> </ul> <p><code>ReloadClass</code>\uff0c<code>ReloadFunction</code> \u200b\u7684\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u8fd9\u91cc\u200b\u4e0d\u518d\u200b\u5c55\u5f00\u200b\u5206\u6790\u200b\uff0c\u200b\u6709\u200b\u5174\u8da3\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u770b\u200b\u6e90\u7801\u200b\u3002</p> <p>\u200b\u6574\u4e2a\u200b Reload \u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6982\u62ec\u200b\u4e3a\u200b\uff1a\u200b\u65e7\u200b\u74f6\u88c5\u200b\u65b0\u9152\u200b\u3002\u200b\u4e3a\u4e86\u200b\u4fdd\u6301\u200b\u6a21\u5757\u200b/\u200b\u6a21\u5757\u200b\u7684\u200b\u51fd\u6570\u200b/\u200b\u6a21\u5757\u200b\u7684\u200b\u7c7b\u200b/\u200b\u6a21\u5757\u200b\u7684\u200b\u6570\u636e\u200b\u6709\u6548\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4fdd\u7559\u200b\u539f\u6765\u200b\u7684\u200b\u8fd9\u4e9b\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5f15\u7528\u200b\uff08\u200b\u8eaf\u58f3\u200b\uff09\uff0c\u200b\u8f6c\u800c\u200b\u53bb\u200b\u66f4\u65b0\u200b\u5b83\u4eec\u200b\u5185\u90e8\u200b\u7684\u200b\u5177\u4f53\u200b\u6570\u636e\u200b\uff0c\u200b\u8b6c\u5982\u200b\u5bf9\u4e8e\u200b\u51fd\u6570\u200b\uff0c\u200b\u66f4\u65b0\u200b <code>__code__</code>\uff0c<code>__dict__</code> \u200b\u7b49\u200b\u6570\u636e\u200b\uff0c\u200b\u51fd\u6570\u200b\u6267\u884c\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u8f6c\u800c\u200b\u6267\u884c\u200b\u65b0\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002</p>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#_2","title":"\u603b\u7ed3","text":"<p>\u200b\u672c\u6587\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b\u4e86\u200b Python3 \u200b\u7684\u200b\u4e24\u79cd\u200b\u70ed\u200b\u66f4\u65b0\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u6bcf\u79cd\u200b\u90fd\u200b\u6709\u200b\u76f8\u5e94\u200b\u7684\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\uff0c\u200b\u5e0c\u671b\u200b\u80fd\u200b\u5bf9\u200b\u4f60\u200b\u6709\u200b\u5e2e\u52a9\u200b\u3002\u200b\u6709\u200b\u4efb\u4f55\u200b\u7591\u95ee\u200b\u6b22\u8fce\u200b\u968f\u65f6\u200b\u4ea4\u6d41\u200b\u3002</p> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/","title":"\u4f7f\u7528\u200b Visual Studio 2015 \u200b\u7f16\u8bd1\u200b Python 2.7.11","text":"","tags":["dev"]},{"location":"py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#_1","title":"\u539f\u56e0","text":"<p>Python 2.7 \u200b\u7684\u200b\u5b98\u65b9\u200b\u7248\u672c\u200b\u652f\u6301\u200b Visual Studio 2010 \u200b\u4ee5\u4e0b\u200b\u7248\u672c\u200b\u6765\u200b\u7f16\u8bd1\u200b\uff0c\u200b\u53c2\u8003\u200b <code>PCbuild\\readme.txt</code>\uff1a</p> <pre><code>1.  Install Microsoft Visual Studio 2008, any edition.\n2.  Install Microsoft Visual Studio 2010, any edition, or Windows SDK 7.1 and any version of Microsoft Visual Studio newer than 2010.\n</code></pre> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u5728\u200b Windows \u200b\u4e0b\u200b\u81ea\u5df1\u200b\u5012\u817e\u200b Python\uff0c\u200b\u8b6c\u5982\u200b\u7f16\u8bd1\u200b\u4e2a\u200b Debug \u200b\u7248\u672c\u200b\u3001\u200b\u81ea\u5df1\u200b\u6539\u6539\u200b\u6e90\u4ee3\u7801\u200b\u7b49\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5c31\u662f\u200b\u88c5\u200b\u4e00\u4e2a\u200b VS2010\u3002 \u200b\u4f46\u662f\u200b\u5bf9\u200b\u6211\u200b\u4e2a\u4eba\u200b\u6765\u8bf4\u200b\uff0c \u200b\u6211\u200b\u66f4\u200b\u60f3\u8981\u200b\u7528\u200b VS2015 \u200b\u6765\u200b\u7f16\u8bd1\u200b Python\uff0c\u200b\u539f\u56e0\u200b\u4e3b\u8981\u200b\u6709\u200b\uff1a</p> <ul> <li>VS2010 \u200b\u5b9e\u5728\u200b\u6709\u70b9\u200b\u8fc7\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u8d77\u6765\u200b\u529f\u80fd\u200b\u548c\u200b\u4f53\u9a8c\u200b\u6bd4\u200b VS2015 \u200b\u8981\u200b\u5dee\u5f97\u591a\u200b\u3002\u200b\u4e00\u76f4\u200b\u7528\u200b\u7740\u200b VS2015\uff0c\u200b\u8981\u200b\u6211\u200b\u518d\u200b\u88c5\u4e2a\u200b VS2010 \u200b\u5b9e\u5728\u200b\u4e0d\u200b\u613f\u610f\u200b\u3002</li> <li>\u200b\u7531\u4e8e\u200b\u4e00\u76f4\u200b\u7528\u200b VS2015\uff0c\u200b\u4f60\u200b\u4f1a\u200b\u4f7f\u7528\u200b\u5b83\u200b\u6765\u200b\u5199\u200b\u4e00\u4e9b\u200b\u81ea\u5df1\u200b\u7684\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u8981\u200b\u628a\u200b Python \u200b\u5d4c\u5165\u200b\u8fdb\u53bb\u200b\uff0c\u200b\u90a3\u200b\u4f60\u200b\u5c31\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u76f8\u540c\u200b\u7248\u672c\u200b\u7684\u200b VS \u200b\u6765\u200b\u7f16\u8bd1\u200b\u4f60\u200b\u7684\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u7248\u672c\u200b\u7684\u200b VS\uff0c\u200b\u90a3\u4f1a\u200b\u51fa\u73b0\u200b\u5404\u79cd\u200b\u65e0\u6cd5\u200b\u9884\u6599\u200b\u7684\u200b\u4e8b\u60c5\u200b\u3002\u200b\u8fd9\u91cc\u200b\u6709\u200b\u66f4\u200b\u8be6\u7ec6\u200b\u7684\u200b\u89e3\u91ca\u200b\u3002</li> </ul> <p>\u200b\u6240\u4ee5\u200b\u6211\u200b\u5f00\u59cb\u200b\u7740\u624b\u200b\u7528\u200b VS2015 \u200b\u641e\u5b9a\u200b Python 2.7.11 \u200b\u7248\u672c\u200b\uff08\u200b\u5f53\u524d\u200b\u7684\u200b Python 2.7 \u200b\u6700\u65b0\u200b\u7248\u672c\u200b\uff09\u3002</p> <p>\u200b\u8981\u200b\u6ce8\u610f\u200b\uff0cPython 3.x \u200b\u5df2\u7ecf\u200b\u652f\u6301\u200b\u7528\u200b VS2015 \u200b\u6765\u200b\u7f16\u8bd1\u200b\u3002</p>","tags":["dev"]},{"location":"py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#_2","title":"\u6e90\u7801\u200b\u4e0b\u8f7d","text":"<p>Python \u200b\u7684\u200b\u7248\u672c\u200b\u5f53\u7136\u200b\u5c31\u662f\u200b 2.7.11\uff0c\u200b\u53e6\u5916\u200b\u8fd8\u6709\u200b\u4e00\u4e9b\u200b\u7b2c\u4e09\u65b9\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u5177\u4f53\u200b\u53ef\u4ee5\u200b\u8fd0\u884c\u200b Python \u200b\u6e90\u7801\u200b\u76ee\u5f55\u200b\u4e0b\u200b <code>PCbuild\\get_externals.bat</code> \u200b\u811a\u672c\u200b\u83b7\u53d6\u200b\u6240\u6709\u200b\u7f16\u8bd1\u200b\u9700\u8981\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u6ce8\u610f\u200b\u4f60\u200b\u9700\u8981\u200b\u5b89\u88c5\u200b svn \uff0c\u200b\u628a\u200b svn.exe \u200b\u6dfb\u52a0\u200b\u5230\u200b\u7cfb\u7edf\u200b PATH \u200b\u91cc\u9762\u200b\u3002</p> <p>\u200b\u4e0b\u8f7d\u200b\u53ef\u80fd\u200b\u5f88\u200b\u4e0d\u200b\u7a33\u5b9a\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6574\u4e2a\u200b\u8fc7\u7a0b\u200b\u90fd\u200b\u6709\u200b\u53ef\u80fd\u200b\u56e0\u4e3a\u200b\u7f51\u7edc\u200b\u95ee\u9898\u200b\u800c\u200b\u7ec8\u6b62\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd8\u662f\u200b\u63a8\u8350\u200b\u76f4\u63a5\u200b\u5728\u200b\u6211\u200b\u7684\u200bgithub\u200b\u4e0a\u200b\u4e0b\u8f7d\u200bexternals\u200b\u76ee\u5f55\u200b\uff1a\u200b\u6211\u200b\u7684\u200b Python \u200b\u7248\u672c\u200b</p>","tags":["dev"]},{"location":"py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#_3","title":"\u7f16\u8bd1\u200b\u8fc7\u7a0b","text":"","tags":["dev"]},{"location":"py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#_4","title":"\u7b2c\u4e09\u65b9\u200b\u6a21\u5757","text":"<p>\u200b\u9996\u5148\u200b\u8981\u200b\u89e3\u51b3\u200b\u7684\u200b\u662f\u200b\u7b2c\u4e09\u65b9\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u4e3b\u8981\u200b\u662f\u200b tcl, tk, tcltk\u3002</p> <p>\u200b\u4fee\u6539\u200b\u6587\u4ef6\u200b <code>externals/tcl-8.5.15.0/win/makefile.vc</code>\uff0c\u200b\u628a\u200b 434 \u200b\u884c\u200b\u6539\u6210\u200b</p> <pre><code>- cdebug = -Zi -WX $(DEBUGFLAGS)\n+ cdebug = -Zi -WX- $(DEBUGFLAGS)\n</code></pre> <p>\u200b\u5173\u4e8e\u200b\u9009\u9879\u200b <code>WX</code>\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u200b\u5fae\u8f6f\u200b\u7684\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\uff1a/WX (Treat Linker Warnings as Errors)</p> <p>\u200b\u518d\u6765\u200b\u6539\u200b<code>PCbuild/tk.vcxproj</code>\uff0c\u200b\u7528\u200b\u6587\u672c\u7f16\u8f91\u200b\u5668\u200b\u6253\u5f00\u200b\uff0c\u200b\u4fee\u6539\u200b 63, 64 \u200b\u884c\u200b</p> <pre><code>- &lt;TkOpts&gt;msvcrt&lt;/TkOpts&gt;\n- &lt;TkOpts Condition=\"$(Configuration) == 'Debug'\"&gt;symbols,msvcrt&lt;/TkOpts&gt;\n+ &lt;TkOpts&gt;msvcrt,noxp&lt;/TkOpts&gt;\n+ &lt;TkOpts Condition=\"$(Configuration) == 'Debug'\"&gt;symbols,msvcrt,noxp&lt;/TkOpts&gt;\n</code></pre> <p>\u200b\u6539\u200b<code>PCbuild/tcltk.props</code>\uff0c\u200b\u7528\u200b\u6587\u672c\u7f16\u8f91\u200b\u5668\u200b\u6253\u5f00\u200b\uff0c\u200b\u4fee\u6539\u200b41\u200b\u884c\u200b</p> <pre><code>- &lt;BuildDirTop&gt;$(BuildDirTop)_VC9&lt;/BuildDirTop&gt;\n+ &lt;BuildDirTop&gt;$(BuildDirTop)_VC13&lt;/BuildDirTop&gt;\n</code></pre> <p>\u200b\u7531\u4e8e\u200b VS2015 \u200b\u53d6\u6d88\u200b\u4e86\u200b <code>timezone</code> \u200b\u7684\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u6539\u4e3a\u200b <code>_timezone</code>\uff0c\u200b\u6240\u4ee5\u200b\u4ee3\u7801\u200b\u91cc\u9762\u200b\u7528\u5230\u200b <code>timezone</code> \u200b\u7684\u200b\u5730\u65b9\u200b\u90fd\u200b\u8981\u200b\u6539\u6210\u200b <code>_timezone</code>\uff0c\u200b\u7b2c\u4e09\u65b9\u200b\u6a21\u5757\u200b\u53ea\u200b\u9700\u8981\u200b\u6539\u200b\u6587\u4ef6\u200b<code>externals/tcl-8.5.15.0/win/tclWinTime.c</code>\uff0c\u200b\u5728\u200b\u6587\u4ef6\u200b\u7684\u200b\u524d\u9762\u200b\u52a0\u4e0a\u200b\uff1a</p> <pre><code>#if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1900\n#define timezone _timezone\n#endif\n</code></pre>","tags":["dev"]},{"location":"py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#python","title":"\u6539\u200b Python \u200b\u6e90\u7801","text":"<p><code>timezone</code>\u200b\u7684\u200b\u95ee\u9898\u200b\u5728\u200b Python \u200b\u7684\u200b\u6a21\u5757\u200b <code>time</code> \u200b\u91cc\u9762\u200b\u4e5f\u200b\u6709\u200b\uff0c\u200b\u4fee\u6539\u200b 767 \u200b\u884c\u200b</p> <pre><code>- #ifdef __CYGWIN__\n+ #if defined(__CYGWIN__) || defined(_MSC_VER) &amp;&amp; _MSC_VER &gt;= 1900\n</code></pre> <p>\u200b\u53e6\u5916\u200b\u7531\u4e8e\u200b\u5728\u200b Windows \u200b\u4e0b\u200b Python \u200b\u7528\u200b\u4e86\u200b\u4e00\u79cd\u200b\u7279\u6b8a\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6765\u200b\u68c0\u67e5\u200b\u6587\u4ef6\u200b\u53e5\u67c4\u200b\u7684\u200b\u6709\u6548\u6027\u200b\uff0c\u200b\u800c\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u5728\u200b VS2015 \u200b\u4e2d\u200b\u88ab\u200b\u5f7b\u5e95\u200b\u7981\u6b62\u200b\u4e86\u200b\uff0c\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u7f16\u8bd1\u200b\u9519\u8bef\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5148\u200b\u6539\u6389\u200b\u3002\u200b\u6587\u4ef6\u200b <code>Include/fileobject.h</code>\uff0c73\u300180 \u200b\u884c\u200b\uff1a</p> <pre><code>73 - #if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1400\n73 + #if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1400 &amp;&amp; _MSC_VER &lt; 1900\n\n80 - #elif defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1200\n80 + #elif defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1200 &amp;&amp; _MSC_VER &lt; 1400\n</code></pre> <p>\u200b\u6587\u4ef6\u200b<code>Modules/posixmodule.c</code>\uff0c532 \u200b\u884c\u200b\uff1a</p> <pre><code>- #if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1400\n+ #if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1400 &amp;&amp; _MSC_VER &lt; 1900\n</code></pre> <p>\u200b\u81f3\u6b64\u200b\uff0cPython \u200b\u5c31\u200b\u53ef\u4ee5\u200b\u7f16\u8bd1\u200b\u901a\u8fc7\u200b\u3002\u200b\u66f4\u200b\u5177\u4f53\u200b\u7684\u200b\u4fee\u6539\u200b\u53ef\u4ee5\u200b\u770b\u200b\u6211\u200b commit \u200b\u7684\u200b\u5185\u5bb9\u200b\uff1amodify to build by vs2015</p>","tags":["dev"]},{"location":"py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#_5","title":"\u68c0\u67e5\u200b\u65e0\u6548\u200b\u53e5\u67c4","text":"<p>\u200b\u867d\u7136\u200b\u7f16\u8bd1\u200b\u901a\u8fc7\u200b\u4e86\u200b\uff0c\u200b\u4f46\u200b\u7531\u4e8e\u200b\u662f\u200b\u7c97\u66b4\u200b\u5730\u200b\u5ffd\u7565\u200b\u65e0\u6548\u200b\u6587\u4ef6\u200b\u53e5\u67c4\u200b\uff0c\u200b\u76f4\u63a5\u200b\u5bfc\u81f4\u200b\u7684\u200b\u540e\u679c\u200b\u662f\u200b\u4e00\u65e6\u200b\u8bbf\u95ee\u200b\u65e0\u6548\u200b\u7684\u200b\u53e5\u67c4\u200b\uff08\u200b\u8b6c\u5982\u200b\u5bf9\u200b\u540c\u4e00\u4e2a\u200b\u6587\u4ef6\u200b<code>close</code>\u200b\u4e24\u6b21\u200b\uff09\uff0cPython \u200b\u5c31\u200b\u4f1a\u200b\u76f4\u63a5\u200b assert failed\uff0c\u200b\u7a0b\u5e8f\u200b crash\uff0c\u200b\u8fd9\u6837\u200b\u7684\u200b Python \u200b\u6839\u672c\u200b\u6ca1\u6cd5\u7528\u200b\u554a\u200b\u3002Python \u200b\u5c31\u662f\u200b\u7528\u200b\u4e86\u200b\u4e00\u79cd\u200b\u5f88\u200b\u7279\u6b8a\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6765\u200b\u907f\u514d\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u53ef\u60dc\u200b\u5728\u200b VS2015 \u200b\u91cc\u9762\u200b\u4e0d\u80fd\u200b\u7528\u200b\u4e86\u200b\uff0c\u200b\u6ce8\u91ca\u200b\u662f\u200b\u8fd9\u6837\u200b\u89e3\u91ca\u200b\u7684\u200b\uff1a</p> <pre><code>Microsoft CRT in VS2005 and higher will verify that a filehandle is valid and raise an assertion if it isn't.\n</code></pre> <p>\u200b\u5e78\u597d\u200b\u5df2\u7ecf\u200b\u6709\u200b\u4e86\u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u6211\u200b\u662f\u200b\u5728\u200b Python \u200b\u7684\u200b issue \u200b\u91cc\u9762\u200b\u770b\u5230\u200b\u7684\u200b\uff0c\u200b\u5730\u5740\u200b\u5728\u200b\u8fd9\u91cc\u200b\uff1aissue23524, issue25759\u3002\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u4e5f\u200b\u662f\u200b\u7528\u200b\u5728\u200b\u73b0\u5728\u200b Python 3.x \u200b\u91cc\u9762\u200b\u3002</p> <p>\u200b\u5177\u4f53\u5730\u8bf4\u200b\u5c31\u662f\u200b\u5728\u200b\u4f7f\u7528\u200b\u6587\u4ef6\u200b\u53e5\u67c4\u200b\u7684\u200b\u65f6\u5019\u200b\u7981\u6b62\u200b\u6389\u200b Windows \u200b\u7684\u200b assert crash \u200b\u673a\u5236\u200b\uff0c\u200b\u6539\u4e3a\u200b\u68c0\u67e5\u200b\u9519\u8bef\u7801\u200b\u3002\u200b\u90a3\u8981\u200b\u600e\u4e48\u200b\u7981\u6b62\u200b Windows \u200b\u7684\u200b assert \u200b\u673a\u5236\u200b\u5462\u200b\uff1f\u200b\u7b54\u6848\u200b\u5c31\u662f\u200b\u7528\u200b\u81ea\u5df1\u200b\u7684\u200b\u9519\u8bef\u200b\u5904\u7406\u51fd\u6570\u200b\u66ff\u4ee3\u200b Windows \u200b\u9ed8\u8ba4\u200b\u7684\u200b\u5904\u7406\u51fd\u6570\u200b\uff0c\u200b\u5173\u952e\u200b\u7684\u200b\u4ee3\u7801\u200b\uff1a</p> <p>\u200b\u65b0\u5efa\u200b\u6587\u4ef6\u200b<code>PC/invalid_parameter_handler.c</code>\uff0c\u200b\u5b9a\u4e49\u200b\u6211\u4eec\u200b\u81ea\u5df1\u200b\u7684\u200b\u9519\u8bef\u200b\u5904\u7406\u51fd\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6682\u65f6\u200b\u5ffd\u7565\u200b\u53d1\u751f\u200b\u7684\u200b\u9519\u8bef\u200b</p> <pre><code>#ifdef _MSC_VER\n\n#include &lt;stdlib.h&gt;\n\n#if _MSC_VER &gt;= 1900\n/* pyconfig.h uses this function in the _Py_BEGIN_SUPPRESS_IPH/_Py_END_SUPPRESS_IPH\n * macros. It does not need to be defined when building using MSVC\n * earlier than 14.0 (_MSC_VER == 1900).\n */\n\nstatic void __cdecl _silent_invalid_parameter_handler(\n    wchar_t const* expression,\n    wchar_t const* function,\n    wchar_t const* file,\n    unsigned int line,\n    uintptr_t pReserved) \n{}\n\n_invalid_parameter_handler _Py_silent_invalid_parameter_handler = _silent_invalid_parameter_handler;\n\n#endif\n\n#endif\n</code></pre> <p>\u200b\u5b9a\u4e49\u200b\u4e24\u4e2a\u200b\u5b8f\u200b\u65b9\u4fbf\u200b\u66f4\u6362\u200b\u9519\u8bef\u200b\u5904\u7406\u51fd\u6570\u200b\uff0c\u200b\u8981\u200b\u6ce8\u610f\u200b\u662f\u200b\u6682\u65f6\u200b\u7684\u200b\u66f4\u6362\u200b\uff0c\u200b\u4e4b\u540e\u200b\u662f\u200b\u9700\u8981\u200b\u6362\u56de\u200b\u7cfb\u7edf\u200b\u9ed8\u8ba4\u200b\u7684\u200b</p> <pre><code>#if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1900\n\nextern _invalid_parameter_handler _Py_silent_invalid_parameter_handler;\n#define _Py_BEGIN_SUPPRESS_IPH { _invalid_parameter_handler _Py_old_handler = \\\n    _set_thread_local_invalid_parameter_handler(_Py_silent_invalid_parameter_handler);\n#define _Py_END_SUPPRESS_IPH _set_thread_local_invalid_parameter_handler(_Py_old_handler); }\n\n#else\n\n#define _Py_BEGIN_SUPPRESS_IPH\n#define _Py_END_SUPPRESS_IPH\n\n#endif /* _MSC_VER &gt;= 1900 */\n</code></pre> <p>\u200b\u4e4b\u540e\u200b\u5728\u200b\u6709\u200b\u53ef\u80fd\u200b\u89e6\u53d1\u200b Windows \u200b\u6587\u4ef6\u200b\u53e5\u67c4\u200b\u9519\u8bef\u200b\u7684\u200b\u5730\u65b9\u200b\uff0c\u200b\u524d\u540e\u200b\u5206\u522b\u200b\u52a0\u4e0a\u200b\u5b8f\u200b<code>_Py_BEGIN_SUPPRESS_IPH</code> \u200b\u548c\u200b <code>_Py_END_SUPPRESS_IPH</code>\uff0c\u200b\u4e4b\u540e\u200b\u518d\u200b\u68c0\u67e5\u200b\u9519\u8bef\u7801\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b\uff0c\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u5230\u200b\u7684\u200b\u5730\u65b9\u200b\u4e0d\u5c11\u200b\uff0c\u200b\u53c2\u8003\u200b\u522b\u4eba\u200b\u7684\u200b commit \u200b\u6765\u200b\u4fee\u6539\u200b\uff1a \u200b\u5728\u200b\u8fd9\u91cc\u200b</p>","tags":["dev"]},{"location":"py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#_6","title":"\u7ed3\u675f","text":"<p>\u200b\u81f3\u6b64\u200b Python 2.7.11 \u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200b VS2015 \u200b\u91cc\u9762\u200b\u6b63\u5e38\u200b\u7f16\u8bd1\u200b\u548c\u200b\u8fd0\u884c\u200b\u4e86\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u7531\u4e8e\u200b Python \u200b\u5b98\u65b9\u200b\u662f\u200b\u4e0d\u200b\u63a8\u8350\u200b\u8fd9\u6837\u200b\u8bbe\u7f6e\u200b</p> <pre><code>***WARNING***\nBuilding Python 2.7 for Windows using any toolchain that doesn't link\nagainst MSVCRT90.dll is *unsupported* as the resulting python.exe will\nnot be able to use precompiled extension modules that do link against\nMSVCRT90.dll.\n</code></pre> <p>\u200b\u6240\u4ee5\u200b\u4f7f\u7528\u200b\u7684\u200b\u65f6\u5019\u200b\u6700\u597d\u200b\u8981\u200b\u6ce8\u610f\u200b\u4e00\u4e0b\u200b\u3002</p> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/","title":"\u4f7f\u7528\u200b FASTBuild \u200b\u7f16\u8bd1\u200b UE4 \u200b\u548c\u200b UE5","text":"<p>\u200b\u672c\u6587\u200b\u65b9\u6cd5\u200b\u7ecf\u200b\u6d4b\u8bd5\u200b\u652f\u6301\u200b UE4.27 - UE5.3\uff0c\u200b\u5176\u4ed6\u200b\u7248\u672c\u200b\u672a\u200b\u6d4b\u8bd5\u200b\u8fc7\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c1d\u8bd5\u200b\u3002</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#_1","title":"\u524d\u8a00","text":"<p>FASTBuild \u200b\u662f\u200b\u4e00\u4e2a\u200b\u514d\u8d39\u200b\u5f00\u6e90\u200b\u7684\u200b\u5206\u5e03\u5f0f\u200b\u7f16\u8bd1\u200b\u5de5\u5177\u200b\uff0cUE \u200b\u672c\u8eab\u200b\u7f16\u8bd1\u200b\u6bd4\u8f83\u200b\u8017\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4e0a\u200b FASTBuild\uff0c\u200b\u80fd\u591f\u200b\u5927\u5927\u51cf\u5c11\u200b\u8017\u65f6\u200b\u3002</p> <p>UE \u200b\u4ece\u200b 4.x \u200b\u5f00\u59cb\u200b\u80fd\u591f\u200b\u652f\u6301\u200b FASTBuild\uff0c\u200b\u5b98\u65b9\u200b\u6e90\u7801\u200b\u81ea\u5e26\u200b\u4e86\u200b\u9b54\u200b\u6539\u8fc7\u200b\u7684\u200b FASTBuild \u200b\u5de5\u5177\u200b\uff0c\u200b\u57fa\u4e8e\u200b FASTBuild 0.99 \u200b\u7248\u672c\u200b\uff0c\u200b\u4f4d\u7f6e\u200b\u5728\u200b <code>Engine\\Extras\\ThirdPartyNotUE\\FASTBuild</code>\uff0cUE5.3 \u200b\u540c\u6837\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b\u8fd9\u4e2a\u200b\u7248\u672c\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u5df2\u7ecf\u200b\u662f\u200b\u6bd4\u8f83\u200b\u4e45\u200b\u4ee5\u524d\u200b\u7684\u200b\u7248\u672c\u200b\u4e86\u200b\uff0c\u200b\u622a\u6b62\u200b\u672c\u6587\u200b\u521b\u5efa\u200b\u65f6\u95f4\u200b\uff0cFASTBuild \u200b\u5b98\u65b9\u200b\u6700\u65b0\u200b\u7248\u672c\u200b\u662f\u200b 1.11\uff0c\u200b\u6709\u200b\u4e86\u200b\u66f4\u200b\u591a\u200b\u65b0\u200b\u7684\u200b\u529f\u80fd\u200b\u652f\u6301\u200b\u548c\u200b bug \u200b\u4fee\u590d\u200b\u3002\u200b\u672c\u6587\u200b\u7740\u91cd\u200b\u8bb0\u5f55\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b 1.11 \u200b\u7248\u672c\u200b\u540c\u65f6\u200b\u652f\u6301\u200b UE4 \u200b\u548c\u200b UE5\u3002</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#_2","title":"\u7b80\u6613\u200b\u914d\u7f6e","text":"<p>\u200b\u8981\u200b\u8fbe\u5230\u200b\u76ee\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5bf9\u200b FASTBuild 1.11 \u200b\u548c\u200b UE \u200b\u6e90\u7801\u200b\u505a\u200b\u4e00\u4e9b\u200b\u4fee\u6539\u200b\u3002\u200b\u5728\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u5176\u5b9e\u200b\u6211\u200b\u5df2\u7ecf\u200b\u90fd\u200b\u4fee\u6539\u200b\u5b8c\u200b\u4e86\u200b\uff0c\u200b\u4e8e\u662f\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u7528\u200b\u6211\u200b\u4fee\u6539\u200b\u5b8c\u200b\u7684\u200b\u7248\u672c\u200b\u6765\u200b\u4f7f\u7528\u200b\u3002</p> <p>FASTBuild \u200b\u4e0b\u8f7d\u200b\u6211\u200b\u63d0\u4ea4\u200b\u7684\u200b \u200b\u6700\u65b0\u200b\u7248\u672c\u200b \u200b\u91cc\u9762\u200b\u7684\u200b\u6267\u884c\u200b\u6587\u4ef6\u200b FBuild.exe, FBuildCoordinator.exe, FBuildWorker.exe\u3002\u200b\u4e3a\u4e86\u200b\u6e05\u6670\u200b\u8868\u8fbe\u200b\uff0c\u200b\u4e0b\u9762\u200b\u628a\u200b\u4f7f\u7528\u200b FBuild.exe \u200b\u6765\u200b\u8fdb\u884c\u200b\u7f16\u7a0b\u200b\u7684\u200b\u673a\u5668\u200b\u53eb\u505a\u200b<code>\u200b\u672c\u200b\u673a\u200b</code>\uff0c\u200b\u5176\u4ed6\u200b\u63d0\u4f9b\u200b CPU \u200b\u53c2\u4e0e\u200b\u7f16\u8f91\u200b\u7684\u200b\u8fdc\u7a0b\u200b\u673a\u5668\u200b\u53eb\u505a\u200b<code>\u200b\u8fdc\u7a0b\u200b\u673a\u200b</code>\u3002</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#_3","title":"\u672c\u200b\u673a\u200b\u914d\u7f6e","text":"<p>\u200b\u628a\u200b FBuild.exe \u200b\u6240\u5728\u200b\u76ee\u5f55\u200b\u52a0\u5165\u200b\u7cfb\u7edf\u200b\u73af\u5883\u53d8\u91cf\u200b Path \u200b\u4e2d\u200b\uff0c\u200b\u4fdd\u8bc1\u200b cmd \u200b\u91cc\u9762\u200b\u80fd\u200b\u76f4\u63a5\u200b\u6267\u884c\u200b FBuild.exe\u3002</p> <p>\u200b\u914d\u7f6e\u200b Cache \u200b\u5171\u4eab\u200b\u76ee\u5f55\u200b\uff08\u200b\u5982\u679c\u200b\u4e0d\u200b\u9700\u8981\u200b\u751f\u6210\u200b Cache \u200b\u7684\u8bdd\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u914d\u7f6e\u200b\uff09\uff1a\u200b\u628a\u200b\u4e00\u4e2a\u200b\u7a7a\u76ee\u5f55\u200b\u8bbe\u7f6e\u200b\u6210\u200b\u5171\u4eab\u200b\u8def\u5f84\u200b\uff0c\u200b\u5e76\u200b\u786e\u8ba4\u200b\u8fdc\u7a0b\u200b\u673a\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u3002</p> <p>\u200b\u6253\u5f00\u200b\u672c\u200b\u673a\u200b UE4 / UE5 \u200b\u7684\u200b\u6e90\u7801\u200b\u9879\u76ee\u200b\uff0c\u200b\u4fee\u6539\u200b\u7f16\u8bd1\u200b\u914d\u7f6e\u6587\u4ef6\u200b Engine\\Saved\\UnrealBuildTool\\BuildConfiguration.xml \u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;\n&lt;Configuration xmlns=\"https://www.unrealengine.com/BuildConfiguration\"&gt;\n    &lt;BuildConfiguration&gt;\n        &lt;bAllowFASTBuild&gt;true&lt;/bAllowFASTBuild&gt;\n    &lt;/BuildConfiguration&gt;\n    &lt;FASTBuild&gt;\n        &lt;bEnableDistribution&gt;true&lt;/bEnableDistribution&gt;\n        &lt;bEnableCaching&gt;true&lt;/bEnableCaching&gt;\n        &lt;FBuildCachePath&gt;\\\\127.0.0.1\\Cache\\&lt;/FBuildCachePath&gt;\n        &lt;FBuildCoordinator&gt;127.0.0.1&lt;/FBuildCoordinator&gt;\n    &lt;/FASTBuild&gt;\n&lt;/Configuration&gt;\n</code></pre> <p>\u200b\u672c\u200b\u673a\u200b\u8fd0\u884c\u200b\u4e4b\u524d\u200b\u4e0b\u8f7d\u200b\u7684\u200b FBuildCoordinator.exe\u3002</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#_4","title":"\u8fdc\u7a0b\u200b\u673a\u200b\u914d\u7f6e","text":"<p>\u200b\u540c\u6837\u200b\u914d\u7f6e\u200b Cache\uff0c\u200b\u53ea\u662f\u200b ip \u200b\u9700\u8981\u200b\u6307\u5b9a\u200b\u5230\u200b\u672c\u673a\u200b ip\uff0c\u200b\u8fd9\u91cc\u200b\u5047\u5b9a\u200b\u4e3a\u200b 192.168.1.100</p> <ul> <li>FASTBUILD_CACHE_PATH: \\192.168.1.100\\Cache</li> <li>FASTBUILD_CACHE_MODE: rw</li> </ul> <p>\u200b\u540c\u6837\u200b\u914d\u7f6e\u200b Coordinator ip</p> <ul> <li>FASTBUILD_COORDINATOR: 192.168.1.100</li> </ul> <p>\u200b\u914d\u7f6e\u200b\u5b8c\u200b\u5982\u4e0b\u200b\u56fe\u200b</p> <p></p> <p>\u200b\u8fdc\u7a0b\u200b\u673a\u4e0a\u200b\u8fd0\u884c\u200b FBuildWorker.exe\uff0c\u200b\u5982\u679c\u200b\u914d\u7f6e\u200b\u6210\u529f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u672c\u673a\u200b\u7684\u200b FBuildCoordinator.exe \u200b\u4e0a\u200b\u4f1a\u200b\u6253\u5370\u200b\u65e5\u5fd7\u200b\uff08\u200b\u8fd9\u91cc\u200b 192.168.1.101 \u200b\u662f\u200b\u8fdc\u7a0b\u200b\u673a\u200b\u7684\u200b ip\uff09\uff1a</p> <pre><code>FBuildCoordinator - v1.11-UE\n[2023-12-01-20:06:38] Listening on port 31392\n[2023-12-01-20:06:38] current [0] workers: []\n[2023-12-01-20:06:42] New worker available: 192.168.1.101\n[2023-12-01-20:06:42] current [1] workers: [192.168.1.101]\n</code></pre>","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#ue","title":"\u6d4b\u8bd5\u200b UE \u200b\u7f16\u8bd1","text":"<p>\u200b\u7528\u200b VisualStudio \u200b\u6253\u5f00\u200b UE \u200b\u6e90\u7801\u200b\u5de5\u7a0b\u200b sln\uff0c\u200b\u9009\u200b\u4e00\u4e2a\u200b C++ \u200b\u7684\u200b\u9879\u76ee\u200b\uff0c\u200b\u70b9\u51fb\u200b Rebuild\u3002\u200b\u5982\u679c\u200b\u914d\u7f6e\u200b\u6b63\u5e38\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u7c7b\u4f3c\u200b\u5982\u4e0b\u200b\u7684\u200b\u65e5\u5fd7\u200b</p> <pre><code>11&gt;FBuild Command Line Arguments: '-monitor -summary -dist -cache -ide -j12 -clean -config \"E:\\UE\\ue5.3_git\\Engine\\Intermediate\\Build\\fbuild.bff\" -nostoponerror\n11&gt;FBuild Executable: 'd:\\libs\\FASTBuild\\bin\\FBuild.exe\n11&gt;FBuild Coordinator: '127.0.0.1\n11&gt;FBuild BrokeragePath: '\\\\127.0.0.1\\Brokerage\\\n11&gt;FBuild CachePath: '\\\\127.0.0.1\\Cache\\\n11&gt;BFF file 'E:\\UE\\ue5.3_git\\Engine\\Intermediate\\Build\\fbuild.bff' has changed (reparsing will occur).\n11&gt;Using Coordinator: 127.0.0.1\n11&gt;Requesting worker list from Corrdinator\n11&gt;Get Worker List from Coordinator.\n11&gt;2 workers in payload: [192.168.1.101]\n11&gt;Worker list received: 1 workers\n11&gt;Distributed Compilation : 1 Workers in pool '127.0.0.1'\n</code></pre> <p>FASTBuild \u200b\u80fd\u200b\u627e\u5230\u200b\u8fdc\u7a0b\u200b\u673a\u200b\u7684\u200b ip\uff0c\u200b\u5e76\u200b\u5f00\u59cb\u200b\u7ed9\u200b\u8fdc\u7a0b\u200b\u673a\u200b\u53d1\u9001\u200b\u7f16\u8bd1\u200b\u3002\u200b\u5728\u200b\u8fdc\u7a0b\u200b\u673a\u200b\u7684\u200b FBuildWorker \u200b\u4e0a\u200b\u4e5f\u200b\u80fd\u200b\u770b\u5230\u200b\u5f53\u524d\u200b\u6709\u200b\u7f16\u8bd1\u200b\u4efb\u52a1\u200b\u5728\u200b\u6267\u884c\u200b\u3002</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#_5","title":"\u8fdb\u9636\u200b\u914d\u7f6e","text":"","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#ue_1","title":"\u652f\u6301\u200b\u66f4\u4e45\u200b\u7248\u672c\u200b\u7684\u200b UE","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u53d1\u73b0\u81ea\u5df1\u200b\u7684\u200b UE \u200b\u6ca1\u6709\u200b FASTBuild \u200b\u5de5\u5177\u200b\uff08Engine\\Extras\\ThirdPartyNotUE\\FASTBuild\uff09\uff0c\u200b\u5e76\u4e14\u200b\u9879\u76ee\u200b UnrealBuildTool \u200b\u91cc\u9762\u200b\u6ca1\u6709\u200b FASTBuild.cs \u200b\u6587\u4ef6\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5f88\u5927\u200b\u6982\u7387\u200b\u662f\u200b\u4f60\u200b\u7684\u200b UE \u200b\u7248\u672c\u200b\u8fd8\u200b\u4e0d\u200b\u652f\u6301\u200b FASTBuild\u3002</p> <p>\u200b\u90a3\u4e48\u200b\u4f60\u200b\u9700\u8981\u200b\u53c2\u8003\u200b UE4.27 \u200b\u7684\u200b\u6e90\u7801\u200b\uff0c\u200b\u4e5f\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u7c7b\u4f3c\u200b\u7684\u200b FASTBuild.cs\uff0c\u200b\u5e76\u200b\u8865\u4e0a\u200b\u5176\u4ed6\u200b\u76f8\u5173\u200b\u4ee3\u7801\u200b\u7684\u200b\u4fee\u6539\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4e0d\u200b\u8be6\u8ff0\u200b\u3002</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#fastbuild","title":"\u7f16\u8bd1\u200b\u81ea\u5df1\u200b\u7684\u200b FASTBuild","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u5bf9\u200b FASTBuild \u200b\u672c\u8eab\u200b\u4e5f\u200b\u611f\u5174\u8da3\u200b\uff0c\u200b\u6216\u8005\u200b\u60f3\u8981\u200b\u505a\u200b\u4e00\u4e9b\u200b\u4fee\u6539\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c1d\u8bd5\u200b\u7528\u200b FASTBuild \u200b\u6765\u200b\u7f16\u8bd1\u200b FASTBuild\u3002</p> <ul> <li>\u200b\u4e0b\u8f7d\u200b\u6211\u200b\u7684\u200b \u200b\u6700\u65b0\u200b\u6e90\u7801\u200b\uff0c\u200b\u5e76\u200b\u89e3\u538b\u200b</li> <li>\u200b\u4fee\u6539\u200b External\\SDK\\VisualStudio\\VS2019.bff\uff0c\u200b\u628a\u200b .VS2019_BasePath \u200b\u548c\u200b .VS2019_Version \u200b\u4fee\u6539\u200b\u6210\u200b\u4f60\u200b\u672c\u673a\u200b\u5bf9\u5e94\u200b\u7684\u200b\u5185\u5bb9\u200b\uff0cVersion \u200b\u53ef\u4ee5\u200b\u5728\u200b .VS2019_BasePath\\Tools\\MSVC \u200b\u76ee\u5f55\u200b\u4e0b\u9762\u200b\u770b\u200b\uff0c\u200b\u4f8b\u5982\u200b     <pre><code>.VS2019_BasePath        = 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\VC'    // &lt;-- Set path here\n.VS2019_Version         = '14.29.30133' // &lt;-- Set version here\n.VS2019_MSC_VER         = '1929' // &lt;-- Set MSC_VER here\n</code></pre></li> </ul> <ul> <li>\u200b\u4fee\u6539\u200b External\\SDK\\Windows\\Windows10SDK.bff \u200b\u7684\u200b .Windows10_SDKBasePath \u200b\u548c\u200b .Windows10_SDKVersion\uff0c\u200b\u7248\u672c\u200b\u53ef\u4ee5\u200b\u5728\u200b .Windows10_SDKBasePath/bin \u200b\u91cc\u9762\u200b\u770b\u200b\uff1a     <pre><code>.Windows10_SDKBasePath        = 'C:\\Program Files (x86)\\Windows Kits/10'    // &lt;-- Set path here\n.Windows10_SDKVersion         = '10.0.19041.0' // &lt;-- Set version here\n</code></pre></li> </ul> <ul> <li>\u200b\u4fee\u6539\u200b External\\SDK\\Clang\\Windows\\Clang11.bff \u200b\u7684\u200b .Clang11_BasePath \u200b\u548c\u200b .Clang11_Version\uff0c\u200b\u8def\u5f84\u200b\u5728\u200b .VS2019_BasePath\\Tools\\Tools/LLVM/x64     <pre><code>.Clang11_BasePath = 'C:/Program Files (x86)/Microsoft Visual Studio/2019/Professional/VC/Tools/LLVM/x64'    // &lt;-- Set path here\n.Clang11_Version  = '12.x.x'\n</code></pre></li> </ul> <ul> <li>\u200b\u8fdb\u5165\u200b Code \u200b\u76ee\u5f55\u200b\uff0c\u200b\u5728\u200b cmd \u200b\u6267\u884c\u200b <code>FBuild.exe All-x64-Release</code>\uff0c\u200b\u5982\u679c\u200b\u914d\u7f6e\u200b\u6b63\u5e38\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u7f16\u8bd1\u200b\u6210\u529f\u200b\uff0c\u200b\u5728\u200b tmp\\x64-Release\\Tools\\FBuild\\FBuild \u200b\u80fd\u200b\u770b\u5230\u200b FBuild.exe\u3002</li> </ul> <ul> <li><code>FBuild.exe All-x64-Release -dist -coordinator=127.0.0.1</code> \u200b\u53ef\u4ee5\u200b\u5f00\u542f\u200b\u5206\u5e03\u5f0f\u200b\u7f16\u8bd1\u200b\u3002</li> </ul>","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#fbuild","title":"FBuild \u200b\u66f4\u200b\u591a\u200b\u9009\u9879","text":"<p>\u200b\u6211\u200b\u63d0\u4f9b\u200b\u7684\u200b FBuild \u200b\u672c\u8eab\u200b\u652f\u6301\u200b\u4ee5\u4e0b\u200b\u5e38\u7528\u200b\u7684\u200b\u9009\u9879\u200b\uff1a</p> <ul> <li>coordinator: \u200b\u6307\u5b9a\u200b Coordinator ip \u200b\u5730\u5740\u200b\uff08\u200b\u53ef\u4ee5\u200b\u8986\u76d6\u200b\u7cfb\u7edf\u200b\u73af\u5883\u53d8\u91cf\u200b\u7684\u200b\u503c\u200b\uff09</li> <li>brokerage: \u200b\u6307\u5b9a\u200b Brokerage \u200b\u5730\u5740\u200b\uff08\u200b\u53ef\u4ee5\u200b\u8986\u76d6\u200b\u7cfb\u7edf\u200b\u73af\u5883\u53d8\u91cf\u200b\u7684\u200b\u503c\u200b\uff09</li> <li>nocache\uff1a\u200b\u5f3a\u5236\u200b\u4e0d\u200b\u4f7f\u7528\u200b cache</li> <li>dist\uff1a\u200b\u5f00\u542f\u200b\u5206\u5e03\u5f0f\u200b\u7f16\u8bd1\u200b</li> <li>forceremote\uff1a\u200b\u5f3a\u5236\u200b\u5728\u200b\u8fdc\u7a0b\u200b\u673a\u200b\u7f16\u8bd1\u200b</li> <li>summary: \u200b\u7f16\u8f91\u200b\u7ed3\u675f\u200b\u540e\u200b\u8f93\u51fa\u200b\u7edf\u8ba1\u200b\u62a5\u544a\u200b</li> </ul> <p>\u200b\u7b49\u7b49\u200b\uff0c\u200b\u66f4\u200b\u591a\u200b\u9009\u9879\u200b\u53ef\u4ee5\u200b\u8fd0\u884c\u200b <code>FBuild.exe -help</code> \u200b\u6765\u770b\u200b\u3002</p> <p>FBuildWorker \u200b\u5e38\u7528\u200b\u7684\u200b\u9009\u9879\u200b\u6709\u200b\uff1a</p> <ul> <li>coordinator: \u200b\u6307\u5b9a\u200b Coordinator ip \u200b\u5730\u5740\u200b\uff08\u200b\u53ef\u4ee5\u200b\u8986\u76d6\u200b\u7cfb\u7edf\u200b\u73af\u5883\u53d8\u91cf\u200b\u7684\u200b\u503c\u200b\uff09</li> <li>brokerage: \u200b\u6307\u5b9a\u200b Brokerage \u200b\u5730\u5740\u200b\uff08\u200b\u53ef\u4ee5\u200b\u8986\u76d6\u200b\u7cfb\u7edf\u200b\u73af\u5883\u53d8\u91cf\u200b\u7684\u200b\u503c\u200b\uff09</li> <li>nocache\uff1a\u200b\u5f3a\u5236\u200b\u4e0d\u200b\u4f7f\u7528\u200b cache</li> <li>cpus: \u200b\u6307\u5b9a\u200b\u5206\u914d\u200b\u591a\u5c11\u200b\u4e2a\u200b\u6838\u200b\u53c2\u4e0e\u200b\u7f16\u8bd1\u200b</li> </ul> <p>\u200b\u66f4\u200b\u591a\u200b\u9009\u9879\u200b\u53ef\u4ee5\u200b\u8fd0\u884c\u200b <code>FBuildWorder.exe -help</code> \u200b\u6765\u770b\u200b\u3002</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#ue-fastbuildcs","title":"\u4fee\u6539\u200b UE \u200b\u81ea\u5e26\u200b\u7684\u200b FASTBuild.cs","text":"<p>UE \u200b\u81ea\u5e26\u200b\u7684\u200b FASTBuild.cs \u200b\u5e76\u200b\u6ca1\u6709\u200b\u5f88\u200b\u597d\u200b\u7684\u200b\u5904\u7406\u200b\u7cfb\u7edf\u200b\u73af\u5883\u53d8\u91cf\u200b\uff0c\u200b\u8ddf\u200b BuildConfiguration.xml \u200b\u6307\u5b9a\u200b\u7684\u200b\u53c2\u6570\u200b\u7684\u200b\u5173\u7cfb\u200b\uff0c\u200b\u5f88\u591a\u200b\u53c2\u6570\u200b\u662f\u200b\u4f18\u5148\u200b\u8bfb\u53d6\u200b\u4e86\u200b\u7cfb\u7edf\u200b\u73af\u5883\u53d8\u91cf\u200b\uff0c\u200b\u8fd9\u200b\u663e\u7136\u200b\u8ddf\u200b BuildConfiguration.xml \u200b\u7684\u200b\u4f7f\u7528\u200b\u903b\u8f91\u200b\u662f\u200b\u76f8\u53cd\u200b\u7684\u200b\u3002</p> <p>\u200b\u4e3a\u6b64\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u628a\u200b\u76f8\u5173\u200b\u7684\u200b\u4ee3\u7801\u200b\u6539\u6210\u200b\u8fd9\u6837\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4ee5\u200b UE5.3 \u200b\u4e3a\u4f8b\u200b\uff1a</p> <pre><code>private bool ExecuteBffFile(string BffFilePath, ILogger Logger)\n{\n    string CacheArgument = \"\";\n\n    if (bEnableCaching)\n    {\n        switch (CacheMode)\n        {\n            case FASTBuildCacheMode.ReadOnly:\n                CacheArgument = \"-cacheread\";\n                break;\n            case FASTBuildCacheMode.WriteOnly:\n                CacheArgument = \"-cachewrite\";\n                break;\n            case FASTBuildCacheMode.ReadWrite:\n                CacheArgument = \"-cache\";\n                break;\n        }\n    }\n    else\n    {\n        CacheArgument = \"-nocache\";\n    }\n\n    string DistArgument = bEnableDistribution ? \"-dist\" : \"\";\n    string ForceRemoteArgument = bForceRemote ? \"-forceremote\" : \"\";\n    string NoStopOnErrorArgument = bStopOnError ? \"\" : \"-nostoponerror\";\n    string IDEArgument = IsApple() ? \"\" : \"-ide\";\n    string MaxProcesses = \"-j\" + ((ParallelExecutor)LocalExecutor).NumParallelProcesses;\n\n    // Interesting flags for FASTBuild:\n    // -nostoponerror, -verbose, -monitor (if FASTBuild Monitor Visual Studio Extension is installed!)\n    // Yassine: The -clean is to bypass the FASTBuild internal\n    // dependencies checks (cached in the fdb) as it could create some conflicts with UBT.\n    // Basically we want FB to stupidly compile what UBT tells it to.\n    string FBCommandLine = $\"-monitor -summary {DistArgument} {CacheArgument} {IDEArgument} {MaxProcesses} -clean -config \\\"{BffFilePath}\\\" {NoStopOnErrorArgument} {ForceRemoteArgument}\";\n\n    Logger.LogInformation(\"FBuild Command Line Arguments: '{FBCommandLine}\", FBCommandLine);\n\n    string FBExecutable = GetExecutablePath()!;\n    Logger.LogInformation(\"FBuild Executable: '{FBExecutable}\", FBExecutable);\n\n    string WorkingDirectory = Path.GetFullPath(Path.Combine(Unreal.EngineDirectory.MakeRelativeTo(DirectoryReference.GetCurrentDirectory()), \"Source\"));\n\n    ProcessStartInfo FBStartInfo = new ProcessStartInfo(FBExecutable, FBCommandLine);\n    FBStartInfo.UseShellExecute = false;\n    FBStartInfo.WorkingDirectory = WorkingDirectory;\n    FBStartInfo.RedirectStandardError = true;\n    FBStartInfo.RedirectStandardOutput = true;\n\n    string? Coordinator = GetCoordinator();\n    if (!String.IsNullOrEmpty(Coordinator))\n    {\n        Logger.LogInformation(\"FBuild Coordinator: '{Coordinator}\", Coordinator);\n        FBStartInfo.EnvironmentVariables[\"FASTBUILD_COORDINATOR\"] = Coordinator;\n    }\n\n    string? BrokeragePath = GetBrokeragePath();\n    if (!String.IsNullOrEmpty(BrokeragePath))\n    {\n        Logger.LogInformation(\"FBuild BrokeragePath: '{BrokeragePath}\", BrokeragePath);\n        FBStartInfo.EnvironmentVariables[\"FASTBUILD_BROKERAGE_PATH\"] = BrokeragePath;\n    }\n\n    string? CachePath = GetCachePath();\n    if (!String.IsNullOrEmpty(CachePath))\n    {\n        Logger.LogInformation(\"FBuild CachePath: '{CachePath}\", CachePath);\n        FBStartInfo.EnvironmentVariables[\"FASTBUILD_CACHE_PATH\"] = CachePath;\n    }\n...\n</code></pre>","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#buildconfigurationxml","title":"BuildConfiguration.xml \u200b\u8fdb\u9636\u200b\u914d\u7f6e","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;\n&lt;Configuration xmlns=\"https://www.unrealengine.com/BuildConfiguration\"&gt;\n    &lt;ProjectFileGenerator&gt;\n        &lt;!-- \u200b\u6307\u5b9a\u200bvs\u200b\u7248\u672c\u200b --&gt;\n        &lt;Format&gt;VisualStudio2022&lt;/Format&gt;   \n    &lt;/ProjectFileGenerator&gt;\n    &lt;BuildConfiguration&gt;\n        &lt;!-- \u200b\u5f00\u542f\u200b FASTBuild --&gt;\n        &lt;bAllowFASTBuild&gt;true&lt;/bAllowFASTBuild&gt;\n        &lt;!-- \u200b\u6307\u5b9a\u200b\u672c\u200b\u673a\u200b\u53c2\u4e0e\u200b\u7f16\u8bd1\u200b\u7684\u200b cpu \u200b\u6838\u6570\u200b --&gt;\n        &lt;MaxParallelActions&gt;12&lt;/MaxParallelActions&gt;\n        &lt;!-- \u200b\u5173\u95ed\u200b Incredibuild --&gt;\n        &lt;bAllowXGE&gt;false&lt;/bAllowXGE&gt;\n    &lt;/BuildConfiguration&gt;\n    &lt;FASTBuild&gt;\n        &lt;!-- \u200b\u6307\u5b9a\u200b FBuild \u200b\u8def\u5f84\u200b --&gt;\n        &lt;FBuildExecutablePath&gt;d:\\libs\\FASTBuild\\bin\\FBuild.exe&lt;/FBuildExecutablePath&gt;\n        &lt;!-- \u200b\u5f00\u542f\u200b\u5206\u5e03\u5f0f\u200b\u7f16\u8bd1\u200b --&gt;\n        &lt;bEnableDistribution&gt;true&lt;/bEnableDistribution&gt;\n        &lt;!-- \u200b\u6307\u5b9a\u200b brokerage \u200b\u8def\u5f84\u200b --&gt;\n        &lt;FBuildBrokeragePath&gt;\\\\127.0.0.1\\Brokerage\\&lt;/FBuildBrokeragePath&gt;\n        &lt;!-- \u200b\u6307\u5b9a\u200b cache \u200b\u8def\u5f84\u200b --&gt;\n        &lt;FBuildCachePath&gt;\\\\127.0.0.1\\Cache\\&lt;/FBuildCachePath&gt;\n        &lt;!-- \u200b\u5f00\u542f\u200b cache --&gt;\n        &lt;bEnableCaching&gt;true&lt;/bEnableCaching&gt;\n        &lt;!-- cache \u200b\u7684\u200b\u8bfb\u5199\u200b\u6743\u9650\u200b Read/Write/ReadWrite --&gt;\n        &lt;CacheMode&gt;ReadWrite&lt;/CacheMode&gt;\n        &lt;!-- \u200b\u6307\u5b9a\u200b coordinator ip --&gt;\n        &lt;FBuildCoordinator&gt;127.0.0.1&lt;/FBuildCoordinator&gt;\n        &lt;!-- \u200b\u5f3a\u5236\u200b\u8fdc\u7a0b\u200b\u7f16\u8bd1\u200b --&gt;\n        &lt;!-- &lt;bForceRemote&gt;true&lt;/bForceRemote&gt; --&gt;\n    &lt;/FASTBuild&gt;\n&lt;/Configuration&gt;\n</code></pre> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"ue-%E4%BD%BF%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BD%A2%E5%BC%8F%E6%89%A9%E5%B1%95%E8%8F%9C%E5%8D%95/","title":"UE \u200b\u4f7f\u7528\u200b\u8def\u5f84\u200b\u5f62\u5f0f\u200b\u6269\u5c55\u200b\u83dc\u5355","text":"<p>\u200b\u8bb0\u5f55\u200b\u5982\u4f55\u200b\u5728\u200b UE \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u8def\u5f84\u200b\u5f62\u5f0f\u200b\u6269\u5c55\u200b\u83dc\u5355\u200b</p> <p>\u200b\u5982\u679c\u200b\u4e0d\u200b\u719f\u6089\u200b UE \u200b\u6269\u5c55\u200b\u83dc\u5355\u200b\uff0c\u200b\u5efa\u8bae\u200b\u5148\u200b\u7b80\u5355\u200b\u770b\u200b\u4e0b\u200b\uff1aUE \u200b\u6269\u5c55\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355\u200b</p> <p>\u200b\u672c\u6587\u200b\u4ee3\u7801\u200b\u57fa\u4e8e\u200b\u63d2\u4ef6\u200b\uff1aUE.EditorPlus</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E4%BD%BF%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BD%A2%E5%BC%8F%E6%89%A9%E5%B1%95%E8%8F%9C%E5%8D%95/#_1","title":"\u8282\u70b9\u200b\u7ba1\u7406","text":"<p>\u200b\u628a\u200b\u83dc\u5355\u200b\u6309\u7167\u200b\u6811\u200b\u7684\u200b\u7ed3\u6784\u200b\u6765\u200b\u7ba1\u7406\u200b\uff0c\u200b\u7236\u200b\u8282\u70b9\u200b\u53ef\u4ee5\u200b\u5305\u542b\u200b\u5b69\u5b50\u200b\uff1a</p> <pre><code>class EDITORPLUS_API FEditorPlusMenuBase: public TSharedFromThis&lt;FEditorPlusMenuBase&gt;\n{\nprotected:\n    // sub menus\n    TArray&lt;TSharedRef&lt;FEditorPlusMenuBase&gt;&gt; Children;\n}\n</code></pre> <p>\u200b\u5728\u200b\u521b\u5efa\u200b\u7236\u200b\u8282\u70b9\u200b\u7684\u200b\u540c\u65f6\u200b\u521b\u5efa\u200b\u5b50\u200b\u8282\u70b9\u200b\uff1a</p> <pre><code>void FEditorPlusMenuBase::Register(FMenuBuilder&amp; MenuBuilder)\n{\n    for (const auto Menu: Children)\n    {\n        Menu-&gt;Register(MenuBuilder);\n    }\n}\n</code></pre> <p>\u200b\u5f53\u7136\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u5177\u4f53\u200b\u521b\u5efa\u200b\u884c\u4e3a\u200b\u4f1a\u200b\u6709\u70b9\u200b\u4e0d\u540c\u200b\uff0c\u200b\u8986\u5199\u200b\u865a\u200b\u51fd\u6570\u200b\u6765\u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>// Menubar\nvoid FEditorPlusMenuBar::Register(FMenuBarBuilder&amp; MenuBarBuilder)\n{\n    MenuBarBuilder.AddPullDownMenu(\n        GetFriendlyName(),\n        GetFriendlyTips(),\n        // Delegate to call Register\n        FEditorPlusMenuManager::GetDelegate&lt;FNewMenuDelegate&gt;(GetUniqueId()),       \n        Hook);\n}\n\n// Section\nvoid FEditorPlusSection::Register(FMenuBuilder&amp; MenuBuilder)\n{\n    MenuBuilder.BeginSection(Hook, GetFriendlyName());\n    FEditorPlusMenuBase::Register(MenuBuilder);\n    MenuBuilder.EndSection();\n}\n\n// Separator\nvoid FEditorPlusSeparator::Register(FMenuBuilder&amp; MenuBuilder)\n{\n    MenuBuilder.AddMenuSeparator(Hook);\n    FEditorPlusMenuBase::Register(MenuBuilder);\n}\n\n// SubMenu\nvoid FEditorPlusSubMenu::Register(FMenuBuilder&amp; MenuBuilder)\n{\n    MenuBuilder.AddSubMenu(\n        GetFriendlyName(),\n        GetFriendlyTips(),\n        FNewMenuDelegate::CreateSP(this, &amp;FEditorPlusSubMenu::MakeSubMenu),\n        false,\n        FSlateIcon(),\n        true,\n        Hook\n    );\n}\n\n// Command\nvoid FEditorPlusCommand::Register(FMenuBuilder&amp; MenuBuilder)\n{\n    MenuBuilder.AddMenuEntry(\n        CommandInfo-&gt;Label, CommandInfo-&gt;Tips, CommandInfo-&gt;Icon,\n        CommandInfo-&gt;ExecuteAction, CommandInfo-&gt;Hook, CommandInfo-&gt;Type);\n}\n\n// ......\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E4%BD%BF%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BD%A2%E5%BC%8F%E6%89%A9%E5%B1%95%E8%8F%9C%E5%8D%95/#_2","title":"\u901a\u8fc7\u200b\u8def\u5f84\u200b\u751f\u6210\u200b\u8282\u70b9","text":"<p>\u200b\u6309\u7167\u200b\u6811\u5f62\u200b\u7ed3\u6784\u200b\u7ec4\u7ec7\u200b\u597d\u200b\u83dc\u5355\u200b\uff0c\u200b\u8def\u5f84\u200b\u683c\u5f0f\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u4e00\u6761\u200b\u83dc\u5355\u200b\u7684\u200b\u6811\u5f62\u200b\u7ed3\u6784\u200b\uff1a</p> <pre><code>\"/&lt;Hook&gt;Help/&lt;MenuBar&gt;BarTest/&lt;SubMenu&gt;SubTest/&lt;Command&gt;Action\"\n</code></pre> <p>\u200b\u4ee5\u4e0a\u200b\u8def\u5f84\u200b\u5373\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u4e00\u7cfb\u5217\u200b\u83dc\u5355\u200b\u7684\u200b\u521b\u5efa\u200b\uff1a</p> <ul> <li><code>&lt;Hook&gt;Help</code>\uff1a\u200b\u4f4d\u7f6e\u200b\u5728\u200b Hook \u200b\u540d\u5b57\u200b\u4e3a\u200b Help \u200b\u7684\u200b\u83dc\u5355\u200b\u540e\u200b</li> <li><code>&lt;MenuBar&gt;BarTest</code>\uff1a\u200b\u521b\u5efa\u200b\u7c7b\u578b\u200b MenuBar \u200b\u7684\u200b\u83dc\u5355\u200b\uff0c\u200b\u540d\u5b57\u200b\u4e3a\u200b BarTest</li> <li><code>&lt;SubMenu&gt;SubTest</code>\uff1a\u200b\u521b\u5efa\u200b\u5b50\u200b\u8282\u70b9\u200b\uff0c\u200b\u7c7b\u578b\u200b SubMenu, \u200b\u540d\u5b57\u200b SubTest</li> <li><code>&lt;Command&gt;Action</code>\uff1a\u200b\u6700\u540e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u547d\u4ee4\u200b</li> </ul> <p>\u200b\u63a5\u53e3\u200b\u8c03\u7528\u200b\u5f62\u5f0f\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u7b80\u6d01\u200b\uff1a</p> <pre><code>const FString Path = \"/&lt;Hook&gt;Help/&lt;MenuBar&gt;BarTest/&lt;SubMenu&gt;SubTest/&lt;Command&gt;Action\";\nFEditorPlusPath::RegisterPathAction(\n    Path, \n    FExecuteAction::CreateLambda([]\n    {\n        // do action\n    })\n);\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E4%BD%BF%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BD%A2%E5%BC%8F%E6%89%A9%E5%B1%95%E8%8F%9C%E5%8D%95/#_3","title":"\u81ea\u5b9a\u4e49\u200b\u5f62\u5f0f\u200b\u751f\u6210\u200b\u8282\u70b9","text":"<p>\u200b\u6211\u4eec\u200b\u4f9d\u7136\u200b\u4fdd\u7559\u200b\u4e86\u200b\u7b28\u91cd\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6765\u200b\u521b\u5efa\u200b\u83dc\u5355\u200b\uff0c\u200b\u7b28\u91cd\u200b\u7684\u200b\u65b9\u5f0f\u200b\u53ef\u4ee5\u200b\u5141\u8bb8\u200b\u6709\u200b\u66f4\u200b\u8be6\u7ec6\u200b\u7684\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u4ee3\u7801\u200b\u7684\u200b\u7ec4\u7ec7\u200b\u5f62\u5f0f\u200b\u8ddf\u200b UE \u200b\u7684\u200b SlateUI \u200b\u5199\u6cd5\u200b\u6709\u4e9b\u200b\u50cf\u200b\uff1a</p> <pre><code>EP_NEW_MENU(FEditorPlusMenuBar)(\"BarTest\")\n-&gt;RegisterPath()\n-&gt;Content({\n    EP_NEW_MENU(FEditorPlusSubMenu)(\"SubTest\")\n    -&gt;Content({\n        EP_NEW_MENU(FEditorPlusCommand)(\"Action\")\n        -&gt;BindAction(FExecuteAction::CreateLambda([]\n            {\n                // do action\n            })),\n    })\n});\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E4%BD%BF%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BD%A2%E5%BC%8F%E6%89%A9%E5%B1%95%E8%8F%9C%E5%8D%95/#_4","title":"\u6df7\u5408\u200b\u5f62\u5f0f","text":"<p>\u200b\u5f53\u7136\u200b\uff0c\u200b\u672c\u8eab\u200b\u8def\u5f84\u200b\u5f62\u5f0f\u200b\u548c\u200b\u81ea\u5b9a\u4e49\u200b\u751f\u6210\u200b\u7684\u200b\u83dc\u5355\u200b\uff0c\u200b\u90fd\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\uff0c\u200b\u5b83\u4eec\u200b\u4e4b\u95f4\u200b\u53ef\u4ee5\u200b\u6df7\u7528\u200b\uff0c\u200b\u6709\u200b\u5f88\u5927\u200b\u7684\u200b\u7075\u6d3b\u6027\u200b\uff1a</p> <pre><code>FEditorPlusPath::RegisterPath(\n    \"/&lt;MenuBar&gt;BarTest/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action1\", \n    EP_NEW_MENU(FEditorPlusCommand)(\"Action1\")\n    -&gt;BindAction(FExecuteAction::CreateLambda([]\n        {\n            // do action\n        })),\n);\n\nFEditorPlusPath::RegisterPath(\n    \"/&lt;MenuBar&gt;BarTest/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action2\", \n    EP_NEW_MENU(FEditorPlusCommand)(\"Action2\")\n    -&gt;BindAction(FExecuteAction::CreateLambda([]\n        {\n            // do action\n        })),\n);\n</code></pre> <p>\u200b\u591a\u4e2a\u200b\u5730\u65b9\u200b\u5b9a\u4e49\u200b\u7684\u200b\u83dc\u5355\u200b\uff0c\u200b\u4f1a\u200b\u5408\u5e76\u200b\u5230\u200b\u540c\u4e00\u4e2a\u200b\u6811\u5f62\u200b\u7ed3\u6784\u200b\u4e2d\u200b\uff0c\u200b\u540d\u5b57\u200b\u76f8\u540c\u200b\u7684\u200b\u8282\u70b9\u200b\u4f1a\u200b\u8ba4\u4e3a\u200b\u662f\u200b\u540c\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u3002\u200b\u6362\u8a00\u4e4b\u200b\uff0c\u200b\u8def\u5f84\u200b\u662f\u200b\u552f\u4e00\u200b\u7684\u200b\uff0c\u200b\u540c\u4e00\u4e2a\u200b\u8def\u5f84\u200b\u53ef\u4ee5\u200b\u552f\u4e00\u200b\u786e\u5b9a\u200b\u4e00\u4e2a\u200b\u83dc\u5355\u200b\u8282\u70b9\u200b\u3002 \u200b\u4e8e\u662f\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u628a\u200b\u8282\u70b9\u200b\u627e\u200b\u51fa\u6765\u200b\uff0c\u200b\u91cd\u65b0\u200b\u505a\u200b\u4e00\u4e9b\u200b\u8bbe\u7f6e\u200b\u548c\u200b\u4fee\u6539\u200b\uff1a</p> <pre><code>// set Name and Tips\nFEditorPlusPath::GetNodeByPath(\"/&lt;MenuBar&gt;BarTest\")-&gt;SetFriendlyName(LOCTEXT(\"MenuTest\", \"MenuTest\"))-&gt;SetFriendlyTips(LOCTEXT(\"MenuTestTips\", \"MenuTestTips\"));\n</code></pre> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/","title":"UE \u200b\u6269\u5c55\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#ue","title":"UE \u200b\u6269\u5c55\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355","text":"<p>\u200b\u8bb0\u5f55\u200b UE \u200b\u5982\u4f55\u200b\u6269\u5c55\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355\u200b</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#hook","title":"Hook","text":"<p>Hook \u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u6269\u5c55\u200b\u83dc\u5355\u200b\u7684\u200b\u951a\u70b9\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b\u65b0\u52a0\u200b\u7684\u200b\u83dc\u5355\u200b\u547d\u4ee4\u200b\u5728\u200b Hook \u200b\u7684\u200b\u524d\u9762\u200b\u6216\u8005\u200b\u540e\u9762\u200b\uff0cUE \u200b\u81ea\u5e26\u200b\u7684\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355\u200b\u547d\u4ee4\u200b\u57fa\u672c\u200b\u90fd\u200b\u5e26\u6709\u200b Hook\uff0cUE5 \u200b\u4e0b\u200b\u6253\u5f00\u200b <code>\u200b\u7f16\u8f91\u200b - \u200b\u7f16\u8f91\u5668\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b - \u200b\u901a\u7528\u200b - \u200b\u5176\u4ed6\u200b - \u200b\u663e\u793a\u200b UI \u200b\u6269\u5c55\u200b\u70b9\u200b</code> \u200b\u6765\u200b\u663e\u793a\u200b\u6240\u6709\u200b\u83dc\u5355\u200b\u7684\u200b Hook\uff1a</p> <p></p> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#_1","title":"\u6a21\u5757\u200b\u4f9d\u8d56","text":"<p>\u200b\u9700\u8981\u200b\u5728\u200b\u9879\u76ee\u200b .Build.cs \u200b\u6587\u4ef6\u200b\u91cc\u9762\u200b\u52a0\u4e0a\u200b\u4f9d\u8d56\u200b\u7684\u200b\u6a21\u5757\u200b LevelEditor, Slate, SlateCore, EditorStyle, EditorWidgets, UnrealEd, ToolMenus\uff1a</p> <pre><code>PrivateDependencyModuleNames.AddRange(\n    new string[]\n    {\n        \"Core\",\n        \"Engine\",\n        \"CoreUObject\",\n        \"LevelEditor\",\n        \"Slate\",\n        \"SlateCore\",\n        \"EditorStyle\",\n        \"EditorWidgets\",\n        \"UnrealEd\",\n        \"ToolMenus\",\n    }\n    );\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#_2","title":"\u6dfb\u52a0\u200b\u83dc\u5355\u680f","text":"<p>\u200b\u76f4\u63a5\u200b\u4e0a\u200b\u4ee3\u7801\u200b</p> <pre><code>auto MenuExtender = MakeShared&lt;FExtender&gt;();\n\nMenuExtender-&gt;AddMenuBarExtension(\n    \"Help\", EExtensionHook::After,      // Create After Help\n    nullptr,\n    FMenuBarExtensionDelegate::CreateLambda([](FMenuBarBuilder&amp; MenuBarBuilder)\n    {\n        MenuBarBuilder.AddPullDownMenu(\n            TEXT(\"MenuTest\"),       // Name\n            TEXT(\"MenuTest\"),       // Tips\n            FNewMenuDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n            {\n                // create sub menus\n            }),\n            TEXT(\"MenuText\"));      // New Hook\n    })\n);\nFModuleManager::LoadModuleChecked&lt;FLevelEditorModule&gt;(\"LevelEditor\").GetMenuExtensibilityManager()-&gt;AddExtender(MenuExtender);\n</code></pre> <p>\u200b\u6267\u884c\u200b\u4ee5\u4e0a\u200b\u4ee3\u7801\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u5728\u200b \u200b\u5e2e\u52a9\u200b \u200b\u540e\u9762\u200b\u52a0\u4e0a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u83dc\u5355\u680f\u200b MenuTest:</p> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#_3","title":"\u6dfb\u52a0\u200b\u547d\u4ee4","text":"<p>\u200b\u4f7f\u7528\u200b\u63a5\u53e3\u200b <code>MenuBuilder.AddMenuEntry</code>\uff1a</p> <pre><code>// Inside MenuTest Lambda\nMenuBuilder.AddMenuEntry(\n    FText::FromName(\"MenuTestAction\"), FText::FromName(\"MenuTestAction\"),\n    FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n    {\n        // do action\n    })));\n</code></pre> <p>\u200b\u628a\u200b\u4ee5\u4e0a\u200b\u4ee3\u7801\u200b\u653e\u5230\u200b CreateLambda \u200b\u91cc\u9762\u200b\uff0c\u200b\u5373\u53ef\u200b\u751f\u6210\u200b\u83dc\u5355\u200b\u547d\u4ee4\u200b\uff1a</p> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#_4","title":"\u83dc\u5355\u200b\u5206\u8282","text":"<p>\u200b\u4f7f\u7528\u200b <code>MenuBuilder.BeginSection</code> \u200b\u548c\u200b <code>MenuBuilder.EndSection</code>\uff1a</p> <pre><code>MenuBuilder.BeginSection(NAME_None, FText::FromName(\"MenuTestSection\"));\n// code to create action\nMenuBuilder.EndSection();\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#_5","title":"\u5206\u9694\u7b26","text":"<pre><code>MenuBuilder.AddMenuSeparator();\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#_6","title":"\u5b50\u200b\u83dc\u5355","text":"<p>\u200b\u5b50\u200b\u83dc\u5355\u200b\u7c7b\u4f3c\u200b\u83dc\u5355\u680f\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b Lambda \u200b\u91cc\u9762\u200b\u5b9a\u4e49\u200b\uff1a</p> <pre><code>MenuBuilder.AddSubMenu(\n    FText::FromName(\"MenuTestSub\"), \n    FText::FromName(\"MenuTestSub\"), \n    FNewMenuDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n    {\n        MenuBuilder.AddMenuEntry(\n            FText::FromName(\"MenuTestSubAction\"), FText::FromName(\"MenuTestSubAction\"),\n            FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n            {\n                // do action\n            })));\n    }));\n</code></pre> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#slateui","title":"SlateUI \u200b\u63a7\u4ef6","text":"<p>\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b UI \u200b\u63a7\u4ef6\u200b\uff1a</p> <pre><code>MenuBuilder.AddWidget(\n    SNew(SHorizontalBox)\n        + SHorizontalBox::Slot()\n        .AutoWidth()\n        [\n            SNew(SEditableTextBox)\n            .MinDesiredWidth(50)\n            .Text(FText::FromName(\"MenuTestWidget\"))\n        ]\n\n        + SHorizontalBox::Slot()\n        .AutoWidth()\n        .Padding(5, 0, 0, 0)\n        [\n        SNew(SButton)\n        .Text(FText::FromName(\"ExtendWidget\"))\n        .OnClicked(FOnClicked::CreateLambda([]()\n        {\n            // do action\n            return FReply::Handled();\n        }))\n        ],\n    FText::GetEmpty()\n);\n</code></pre> <p></p> <p>Slate UI \u200b\u76f8\u5173\u200b\u7684\u200b\u5185\u5bb9\u200b\u8fd9\u91cc\u200b\u4e0d\u200b\u8be6\u7ec6\u200b\u5c55\u5f00\u200b\uff0c\u200b\u6709\u200b\u5174\u8da3\u200b\u53ef\u4ee5\u200b\u53bb\u200b\u53e6\u5916\u200b\u627e\u200b\u6587\u7ae0\u200b\u770b\u200b\u3002</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#hook_1","title":"Hook \u200b\u589e\u52a0\u200b\u83dc\u5355","text":"<p>\u200b\u8b6c\u5982\u200b\u5728\u200b <code>\u200b\u5de5\u5177\u200b - \u200b\u7f16\u7a0b\u200b</code> \u200b\u91cc\u9762\u200b\u589e\u52a0\u200b\u4e00\u4e2a\u200b\u547d\u4ee4\u200b\uff1a</p> <pre><code>MenuExtender-&gt;AddMenuExtension(\n    \"Programming\", EExtensionHook::After,\n    nullptr,\n    FMenuExtensionDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n    {\n        MenuBuilder.AddMenuEntry(\n        FText::FromName(\"MenuTestAction\"), FText::FromName(\"MenuTestAction\"),\n        FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n        {\n            // do action\n        })));\n    })\n);\n</code></pre> <p></p> <p>\u200b\u540c\u7406\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u5176\u4ed6\u200b\u83dc\u5355\u200b\u7c7b\u578b\u200b\u3002</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#_7","title":"\u5b8c\u6574\u200b\u4ee3\u7801","text":"<pre><code>void BuildTestMenu()\n{\n    auto MenuExtender = MakeShared&lt;FExtender&gt;();\n\n    MenuExtender-&gt;AddMenuBarExtension(\n        \"Help\", EExtensionHook::After,\n        nullptr,\n        FMenuBarExtensionDelegate::CreateLambda([](FMenuBarBuilder&amp; MenuBarBuilder)\n        {\n            MenuBarBuilder.AddPullDownMenu(\n                FText::FromName(\"MenuTest\"),\n                FText::FromName(\"MenuTest\"),\n                FNewMenuDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n                {\n                    MenuBuilder.BeginSection(NAME_None, FText::FromName(\"MenuTestSection\"));\n                    MenuBuilder.AddMenuSeparator();\n                    MenuBuilder.AddMenuEntry(\n                        FText::FromName(\"MenuTestAction\"), FText::FromName(\"MenuTestAction\"),\n                        FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n                        {\n                            // do action\n                        })));\n\n                    MenuBuilder.AddSubMenu(\n                        FText::FromName(\"MenuTestSubb\"),\n                        FText::FromName(\"MenuTestSubb\"),\n                        FNewMenuDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n                        {\n                            MenuBuilder.AddMenuEntry(\n                                FText::FromName(\"MenuTestSubAction\"), FText::FromName(\"MenuTestSubAction\"),\n                                FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n                                {\n                                    // do action\n                                })));\n                        }));\n                    MenuBuilder.EndSection();\n\n                    MenuBuilder.AddWidget(\n                    SNew(SHorizontalBox)\n                         + SHorizontalBox::Slot()\n                         .AutoWidth()\n                         [\n                             SNew(SEditableTextBox)\n                             .MinDesiredWidth(50)\n                             .Text(FText::FromName(\"MenuTestWidget\"))\n                         ]\n                         + SHorizontalBox::Slot()\n                         .AutoWidth()\n                         .Padding(5, 0, 0, 0)\n                         [\n                            SNew(SButton)\n                            .Text(FText::FromName(\"ExtendWidget\"))\n                            .OnClicked(FOnClicked::CreateLambda([]()\n                            {\n                                // do action\n                                return FReply::Handled();\n                            }))\n                         ],\n                     FText::GetEmpty()\n                    );\n                }),\n                \"MenuTest\");\n        })\n    );\n\n    MenuExtender-&gt;AddMenuExtension(\n        \"Programming\", EExtensionHook::After,\n        nullptr,\n        FMenuExtensionDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n        {\n            MenuBuilder.AddMenuEntry(\n            FText::FromName(\"MenuTestAction\"), FText::FromName(\"MenuTestAction\"),\n            FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n            {\n                // do action\n            })));\n        })\n    );\n\n    FModuleManager::LoadModuleChecked&lt;FLevelEditorModule&gt;(\"LevelEditor\").GetMenuExtensibilityManager()-&gt;AddExtender(MenuExtender);\n}\n</code></pre> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/","title":"UE \u200b\u7f16\u8f91\u5668\u200b\u63d2\u4ef6\u200b EditorPlus \u200b\u8bf4\u660e\u200b\u6587\u6863","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#ue-editorplus","title":"UE \u200b\u7f16\u8f91\u5668\u200b\u63d2\u4ef6\u200b EditorPlus \u200b\u8bf4\u660e\u200b\u6587\u6863","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#_1","title":"\u63d2\u4ef6\u200b\u6e90\u7801","text":"<p>UE.EditorPlus</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#editorplus","title":"\u9879\u76ee\u200b\u6dfb\u52a0\u200b\u6e90\u7801\u200b\u63d2\u4ef6\u200b EditorPlus","text":"<p>\u200b\u53c2\u8003\u200b\u6587\u6863\u200b\uff1a</p> <ul> <li>\u200b\u4e2d\u6587\u200b\uff1aUE \u200b\u901a\u8fc7\u200b\u63d2\u4ef6\u200b\u6e90\u7801\u200b\u6dfb\u52a0\u200b\u63d2\u4ef6\u200b</li> <li>English: UE adds plugins through the plugin source code</li> </ul>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#_2","title":"\u63d2\u4ef6\u200b\u8bf4\u660e","text":"<p>EditorPlus \u200b\u662f\u200b\u4e00\u4e2a\u200b UE \u200b\u7f16\u8f91\u5668\u200b\u63d2\u4ef6\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u65b9\u4fbf\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6765\u200b\u6269\u5c55\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355\u200b\uff0c\u200b\u5e76\u200b\u652f\u6301\u200b\u9ad8\u7ea7\u200b\u65b9\u5f0f\u200b\u6765\u200b\u6269\u5c55\u200b\uff0c\u200b\u540c\u65f6\u200b\u5305\u542b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5b9e\u7528\u200b\u7684\u200b\u7f16\u8f91\u5668\u200b\u5de5\u5177\u200b\u3002\u200b\u672c\u200b\u63d2\u4ef6\u200b\u652f\u6301\u200b UE5.2+\u3002</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#_3","title":"\u6269\u5c55\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#_4","title":"\u8bf4\u660e","text":"<p>\u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u65b9\u5f0f\u200b\u6269\u5c55\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355\u200b\uff1a</p> <ul> <li>\u200b\u8def\u5f84\u200b\u65b9\u5f0f\u200b\uff1a<code>RegisterPathAction(\"/&lt;MenuBar&gt;Bar/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action\")</code></li> <li>\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u65b9\u5f0f\u200b\uff1a<code>EP_NEW_MENU(FEditorPlusMenuBar)(\"Bar\")</code></li> <li>\u200b\u6df7\u5408\u200b\u65b9\u5f0f\u200b\uff1a<code>RegisterPath(\"/&lt;MenuBar&gt;Bar/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action\",EP_NEW_MENU(FEditorPlusCommand)(\"Action\")</code></li> </ul>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#_5","title":"\u8def\u5f84\u200b\u65b9\u5f0f","text":"<p>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8fd9\u6837\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6765\u200b\u6ce8\u518c\u200b\u4e00\u4e2a\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355\u200b\u6307\u4ee4\u200b\uff1a</p> <pre><code>FEditorPlusPath::RegisterPathAction(\n    \"/&lt;MenuBar&gt;Bar/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action\",\n    FExecuteAction::CreateLambda([]\n        {\n            // do action\n        })\n);\n</code></pre> <p>\u200b\u8fd9\u6837\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355\u680f\u200b Help \u200b\u540e\u9762\u200b\u589e\u52a0\u200b\u4e00\u4e2a\u200b\u83dc\u5355\u680f\u200b Bar\uff0cBar \u200b\u91cc\u9762\u200b\u589e\u52a0\u200b\u4e00\u4e2a\u200b\u5b50\u200b\u83dc\u5355\u200b SubMenu\uff0c SubMenu \u200b\u91cc\u9762\u200b\u589e\u52a0\u200b\u4e00\u4e2a\u200b\u547d\u4ee4\u200b Action\u3002</p> <p>\u200b\u5b8c\u6574\u200b\u7684\u200b\u8def\u5f84\u200b\u683c\u5f0f\u200b\u4f1a\u200b\u662f\u200b\u8fd9\u6837\u200b\u7684\u200b\uff1a<code>/&lt;Hook&gt;HookName/&lt;Type1&gt;Name1/&lt;Type2&gt;Name2</code>\uff0c\u200b\u7b2c\u4e00\u4e2a\u200b\u8def\u5f84\u200b\u5fc5\u987b\u200b\u662f\u200b <code>&lt;Hook&gt;</code>\uff0c\u200b\u76ee\u524d\u200b\u652f\u6301\u200b\u7684\u200b\u7c7b\u578b\u200b\u548c\u200b\u9650\u5236\u200b\uff1a</p> <ul> <li><code>&lt;Hook&gt;</code>\uff1a\u200b\u540e\u7eed\u200b\u8def\u5f84\u200b\u4e0d\u80fd\u200b\u6709\u200b <code>&lt;Hook&gt;</code></li> <li><code>&lt;MenuBar&gt;</code>\uff1a\u200b\u540e\u9762\u200b\u8def\u5f84\u200b\u4e0d\u80fd\u200b\u6709\u200b <code>&lt;Hook&gt;, &lt;MenuBar&gt;</code></li> <li><code>&lt;Section&gt;</code>\uff1a\u200b\u540e\u9762\u200b\u8def\u5f84\u200b\u4e0d\u80fd\u200b\u6709\u200b <code>&lt;Hook&gt;, &lt;MenuBar&gt;, &lt;Section&gt;</code></li> <li><code>&lt;Separator&gt;</code>\uff1a\u200b\u540e\u9762\u200b\u8def\u5f84\u200b\u4e0d\u80fd\u200b\u6709\u200b <code>&lt;Hook&gt;, &lt;MenuBar&gt;</code></li> <li><code>&lt;SubMenu&gt;</code>\uff1a\u200b\u540e\u9762\u200b\u8def\u5f84\u200b\u4e0d\u80fd\u200b\u6709\u200b <code>&lt;Hook&gt;, &lt;MenuBar&gt;</code></li> <li><code>&lt;Command&gt;</code>\uff1a\u200b\u540e\u9762\u200b\u4e0d\u80fd\u200b\u6709\u200b\u4efb\u4f55\u200b\u8def\u5f84\u200b</li> <li><code>&lt;Widget&gt;</code>\uff1a\u200b\u540e\u9762\u200b\u4e0d\u80fd\u200b\u6709\u200b\u4efb\u4f55\u200b\u8def\u5f84\u200b</li> </ul> <p>\u200b\u66f4\u200b\u7b80\u6613\u200b\u7684\u200b\u8def\u5f84\u200b\u5f62\u5f0f\u200b\uff1a<code>/BarName/SubMenuName1/SubMenuName2/CommandName</code>\uff0c\u200b\u5982\u679c\u200b\u4e0d\u200b\u6307\u5b9a\u200b\u7c7b\u578b\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u8def\u5f84\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u662f\u200b <code>&lt;MenuBar&gt;</code>\uff0c\u200b\u4e2d\u95f4\u200b\u7684\u200b\u662f\u200b <code>&lt;SubMenu&gt;</code>\uff0c\u200b\u6700\u540e\u200b\u7684\u200b\u662f\u200b <code>&lt;Command&gt;</code>\u3002</p> <p>\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u6307\u5b9a\u200b <code>&lt;Hook&gt;</code> \u200b\u5219\u200b\u81ea\u52a8\u200b\u6700\u200b\u524d\u9762\u200b\u52a0\u4e0a\u200b <code>&lt;Hook&gt;Help</code>\uff0c\u200b\u8868\u793a\u200b\u5728\u200b Help \u200b\u83dc\u5355\u200b\u540e\u9762\u200b\u6dfb\u52a0\u200b\u83dc\u5355\u680f\u200b\u3002</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#_6","title":"\u5b9e\u4f8b\u200b\u5316\u200b\u65b9\u5f0f","text":"<p>\u200b\u8def\u5f84\u200b\u65b9\u5f0f\u200b\u662f\u200b\u81ea\u52a8\u200b\u628a\u200b\u6240\u6709\u200b\u8282\u70b9\u200b\u6839\u636e\u200b\u7c7b\u578b\u200b\u548c\u200b\u9ed8\u8ba4\u200b\u53c2\u6570\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u51fa\u6765\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u81ea\u5df1\u200b\u63a7\u5236\u200b\u5b9e\u4f8b\u200b\u5316\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u66f4\u200b\u7ec6\u81f4\u200b\u63a7\u5236\u200b\u6269\u5c55\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002</p> <pre><code>EP_NEW_MENU(FEditorPlusMenuBar)(\"MyBar\", \"MyBar\", LOCTEXT(\"MyBar\", \"MyBar\"), LOCTEXT(\"MyBarTips\", \"MyBarTips\"))\n-&gt;RegisterPath()\n-&gt;Content({\n    EP_NEW_MENU(FEditorPlusSubMenu)(\"MySubMenu\")\n    -&gt;Content({\n        EP_NEW_MENU(FEditorPlusCommand)(\"MyAction\")\n        -&gt;BindAction(FExecuteAction::CreateLambda([]\n            {\n                // do action\n            })),\n    })\n});\n``\n\n\u200b\u5b9e\u4f8b\u200b\u5316\u200b `MyBar` \u200b\u7684\u200b\u65f6\u5019\u200b\u53ef\u4ee5\u200b\u4f20\u5165\u200b Hook \u200b\u540d\u5b57\u200b\uff0c\u200b\u672c\u5730\u5316\u200b\u540d\u5b57\u200b\uff0c\u200b\u672c\u5730\u5316\u200b\u63d0\u793a\u200b\u53c2\u6570\u200b\uff08`\"MyBar\", LOCTEXT(\"MyBar\", \"MyBar\"), LOCTEXT(\"MyBarTips\", \"MyBarTips\")`\uff09\u3002\u200b\u4e0a\u9762\u200b\u4ee3\u7801\u200b\u5c31\u200b\u76f8\u5f53\u4e8e\u200b\u8def\u5f84\u200b\u65b9\u5f0f\u200b `/&lt;Hook&gt;Help/&lt;MenuBar&gt;MyBar/&lt;SubMenu&gt;MySubMenu/&lt;Command&gt;MyAction`\u3002\n\n## \u200b\u6df7\u5408\u200b\u65b9\u5f0f\u200b\n\n\u200b\u5f53\u7136\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u4e24\u79cd\u200b\u65b9\u5f0f\u200b\u6df7\u5408\u200b\u4f7f\u7528\u200b\uff1a\n\n```cpp\nFEditorPlusPath::RegisterPath(\n    \"/&lt;MenuBar&gt;Bar/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action\",\n    EP_NEW_MENU(FEditorPlusCommand)(\"Action\")\n    -&gt;BindAction(FExecuteAction::CreateLambda([]\n        {\n            // do action\n        })),\n);\n</code></pre> <p>\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u63d2\u4ef6\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u4e2d\u95f4\u200b\u8def\u5f84\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u6700\u540e\u200b\u7684\u200b\u8def\u5f84\u200b\u4f7f\u7528\u200b\u7528\u6237\u200b\u81ea\u5df1\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u7684\u200b\u8282\u70b9\u200b\u3002</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#_7","title":"\u66f4\u200b\u591a\u7528\u200b\u4f8b","text":"<p>\u200b\u5934\u6587\u4ef6\u200b:</p> <pre><code>#include &lt;EditorPlusPath.h&gt;\n</code></pre> <p>\u200b\u8def\u5f84\u200b\u65b9\u5f0f\u200b\u6307\u5b9a\u200b\u672c\u5730\u5316\u200b\u8bed\u8a00\u200b\uff0c<code>EP_FNAME_HOOK_AUTO</code> \u200b\u8868\u793a\u200b\u81ea\u52a8\u200b\u4f7f\u7528\u200b\u8def\u5f84\u200b\u540d\u5b57\u200b\u4f5c\u4e3a\u200b <code>Hook</code> \u200b\u540d\u5b57\u200b\uff1a</p> <pre><code>FEditorPlusPath::RegisterPathAction(\n        \"/Bar/Action\",\n        FExecuteAction::CreateLambda([]\n        {\n            // do action\n        }),\n        EP_FNAME_HOOK_AUTO,\n        LOCTEXT(\"Action\", \"Action\"),\n        LOCTEXT(\"ActionTips\", \"ActionTips\"));\n</code></pre> <p>\u200b\u901a\u8fc7\u200b\u8def\u5f84\u200b\u83b7\u53d6\u200b\u8282\u70b9\u200b\u5e76\u200b\u8bbe\u7f6e\u200b\u672c\u5730\u5316\u200b\u6587\u672c\u200b\uff1a</p> <pre><code>FEditorPlusPath::GetNodeByPath(\"/MenuTest\")\n    -&gt;SetFriendlyName(LOCTEXT(\"MenuTest\", \"MenuTest\"))\n    -&gt;SetFriendlyTips(LOCTEXT(\"MenuTestTips\", \"MenuTestTips\"));\n</code></pre> <p>\u200b\u8def\u5f84\u200b\u672b\u7aef\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b Slate UI \u200b\u63a7\u4ef6\u200b</p> <pre><code>FEditorPlusPath::RegisterPath(\n    \"/&lt;MenuBar&gt;Bar/&lt;SubMenu&gt;SubMenu/&lt;Widget&gt;Widget\",\n    EP_NEW_MENU(FEditorPlusWidget)(\"Widget\", LOCTEXT(\"Widget\", \"Widget\"))\n        -&gt;BindWidget(SNew(SHorizontalBox)));\n);\n</code></pre> <p>\u200b\u5728\u200b UE \u200b\u81ea\u5e26\u200b\u7684\u200b Hook \u200b\u91cc\u9762\u200b\u6dfb\u52a0\u200b\u65b0\u200b\u7684\u200b\u8282\u70b9\u200b</p> <pre><code>FEditorPlusPath::RegisterPath(\"&lt;Hook&gt;EpicGamesHelp/&lt;Separator&gt;ExtendSeparator\")\n</code></pre> <p>\u200b\u591a\u6b21\u200b\u58f0\u660e\u200b\u76f8\u540c\u200b\u7684\u200b\u8def\u5f84\u200b\uff0c\u200b\u90fd\u200b\u88ab\u200b\u8bc6\u522b\u200b\u6210\u200b\u540c\u4e00\u4e2a\u200b\u8def\u5f84\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u4e0d\u65ad\u200b\u6269\u5c55\u200b\u76f8\u540c\u200b\u7684\u200b\u8def\u5f84\u200b</p> <pre><code>FEditorPlusPath::RegisterPathAction(\"/MenuTest/SubMenu1/SubMenu1/Path1\", Action, EP_FNAME_HOOK_AUTO, LOCTEXT(\"Path1\", \"Path1\"), LOCTEXT(\"Path1Tips\", \"Path1Tips\"));\nFEditorPlusPath::RegisterPathAction(\"/MenuTest/SubMenu1/SubMenu1/Path2\", Action, EP_FNAME_HOOK_AUTO, LOCTEXT(\"Path2\", \"Path2\"), LOCTEXT(\"Path2Tips\", \"Path2Tips\"));\n</code></pre> <p>\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u7ee7\u7eed\u200b\u6269\u5c55\u200b\u8def\u5f84\u200b</p> <pre><code>auto node = FEditorPlusPath::GetNodeByPath(\"/MenuTest\");\nFEditorPlusPath::RegisterChildPath(node, \"&lt;SubMenu&gt;Sub/&lt;Separator&gt;Sep\");\n</code></pre> <p>\u200b\u5220\u9664\u200b\u4e00\u4e2a\u200b\u8def\u5f84\u200b</p> <pre><code>FEditorPlusPath::UnregisterPath(\"/MenuTest/SubMenu1/SubMenu1/Path1\");\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#_8","title":"\u63a5\u53e3\u200b\u8bf4\u660e","text":"<pre><code>class EDITORPLUS_API FEditorPlusPath\n{\npublic:\n\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterPath(const FString&amp; Path, const TSharedPtr&lt;FEditorPlusMenuBase&gt;&amp; Menu=nullptr);\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterPath(const FString&amp; Path, const FText&amp; FriendlyName, const FText&amp; FriendlyTips);\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterPathAction(\n        const FString&amp; Path, const FExecuteAction&amp; ExecuteAction, const FName&amp; Hook=EP_FNAME_HOOK_AUTO,\n        const FText&amp; FriendlyName=FText::GetEmpty(), const FText&amp; FriendlyTips=FText::GetEmpty());\n\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterChildPath(\n        const TSharedRef&lt;FEditorPlusMenuBase&gt;&amp; InParent, const FString&amp; Path, const TSharedPtr&lt;FEditorPlusMenuBase&gt;&amp; Menu=nullptr);\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterChildPath(\n        const TSharedRef&lt;FEditorPlusMenuBase&gt;&amp; InParent, const FString&amp; Path, const FText&amp; FriendlyName, const FText&amp; FriendlyTips);\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterChildPathAction(\n        const TSharedRef&lt;FEditorPlusMenuBase&gt;&amp; InParent, const FString&amp; Path, const FExecuteAction&amp; ExecuteAction,\n        const FName&amp; Hook=EP_FNAME_HOOK_AUTO, const FText&amp; FriendlyName=FText::GetEmpty(), const FText&amp; FriendlyTips=FText::GetEmpty());\n\n    static bool UnregisterPath(\n        const FString&amp; Path, const TSharedPtr&lt;FEditorPlusMenuBase&gt;&amp; Leaf=nullptr);\n\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; GetNodeByPath(const FString&amp; Path);\n};\n</code></pre> <ul> <li><code>RegisterPath</code>\uff1a\u200b\u751f\u6210\u200b\u8def\u5f84\u200b\u83dc\u5355\u200b</li> <li><code>RegisterPathAction</code>\uff1a\u200b\u751f\u6210\u200b\u8def\u5f84\u200b\u83dc\u5355\u200b\uff0c\u200b\u5e76\u200b\u81ea\u52a8\u200b\u4e3a\u200b\u672b\u7aef\u200b <code>&lt;Command&gt;</code> \u200b\u8282\u70b9\u200b\u7ed1\u5b9a\u200b\u64cd\u4f5c\u200b</li> <li><code>RegisterChildPath</code>\uff1a\u200b\u4e3a\u200b\u6307\u5b9a\u200b\u8282\u70b9\u200b\u7ee7\u7eed\u200b\u751f\u6210\u200b\u5b50\u200b\u8def\u5f84\u200b</li> <li><code>RegisterChildPathAction</code>\uff1a\u200b\u4e3a\u200b\u6307\u5b9a\u200b\u8282\u70b9\u200b\u7ee7\u7eed\u200b\u751f\u6210\u200b\u5b50\u200b\u8def\u5f84\u200b\uff0c\u200b\u5e76\u200b\u81ea\u52a8\u200b\u7ed1\u5b9a\u200b\u64cd\u4f5c\u200b</li> <li><code>UnregisterPath</code>\uff1a\u200b\u5220\u9664\u200b\u8def\u5f84\u200b\uff0c<code>Leaf</code> \u200b\u5728\u200b\u6709\u200b\u591a\u4e2a\u200b\u540c\u540d\u200b\u7684\u200b\u672b\u7aef\u200b\u8282\u70b9\u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200b\u4e25\u683c\u200b\u5339\u914d\u200b\u3002\u200b\u5220\u9664\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u4f1a\u200b\u56de\u6eaf\u200b\u4e2d\u95f4\u200b\u8282\u70b9\u200b\uff0c\u200b\u4e00\u65e6\u200b\u4e2d\u95f4\u200b\u8282\u70b9\u200b\u6ca1\u6709\u200b\u4efb\u4f55\u200b\u5b50\u200b\u8282\u70b9\u200b\u4e5f\u200b\u4f1a\u200b\u88ab\u200b\u5220\u9664\u200b</li> <li><code>GetNodeByPath</code>\uff1a\u200b\u6839\u636e\u200b\u8def\u5f84\u200b\u83b7\u53d6\u200b\u8282\u70b9\u200b</li> </ul> <p>\u200b\u8282\u70b9\u200b\u7c7b\u578b\u200b</p> <pre><code>// base class of all node\nclass EDITORPLUS_API FEditorPlusMenuBase: public TSharedFromThis&lt;FEditorPlusMenuBase&gt; {}\n\nclass EDITORPLUS_API FEditorPlusHook: public TEditorPlusMenuBaseRoot {}\n\nclass EDITORPLUS_API FEditorPlusMenuBar: public TEditorPlusMenuBaseNode {}\n\nclass EDITORPLUS_API FEditorPlusSection: public TEditorPlusMenuBaseNode {}\n\nclass EDITORPLUS_API FEditorPlusSeparator: public TEditorPlusMenuBaseNode{}\n\nclass EDITORPLUS_API FEditorPlusSubMenu: public TEditorPlusMenuBaseNode {}\n\nclass EDITORPLUS_API FEditorPlusCommand: public TEditorPlusMenuBaseLeaf {}\n\nclass EDITORPLUS_API FEditorPlusWidget: public TEditorPlusMenuBaseLeaf {}\n</code></pre> <p>\u200b\u66f4\u200b\u591a\u6837\u200b\u4f8b\u200b\u548c\u200b\u63a5\u53e3\u200b\u8bf4\u660e\u200b\u8bf7\u200b\u53c2\u8003\u200b\u6e90\u7801\u200b UE.EditorPlus\uff0c\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b MenuTest.cpp</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#_9","title":"\u6a21\u5757\u5316\u200b\u7ba1\u7406","text":"<p>UE.EditorPlus \u200b\u8fd8\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6a21\u5757\u5316\u200b\u7ba1\u7406\u200b\u6269\u5c55\u200b\u83dc\u5355\u200b\u7684\u200b\u6846\u67b6\u200b\uff0c\u200b\u652f\u6301\u200b\u63d2\u4ef6\u200b\u52a0\u8f7d\u200b\u548c\u200b\u5378\u8f7d\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u81ea\u52a8\u200b\u52a0\u8f7d\u200b\u548c\u200b\u5378\u8f7d\u200b\u6269\u5c55\u200b\u7684\u200b\u83dc\u5355\u200b</p> <p>\u200b\u8ba9\u200b\u83dc\u5355\u200b\u7c7b\u200b\u7ee7\u627f\u200b <code>IEditorPlusToolInterface</code>\uff0c\u200b\u5e76\u200b\u8986\u5199\u200b <code>OnStartup</code> \u200b\u548c\u200b <code>OnShutdown</code> \u200b\u51fd\u6570\u200b\u3002<code>OnStartup</code> \u200b\u8d1f\u8d23\u200b\u521b\u5efa\u200b\u83dc\u5355\u200b\uff0c<code>OnShutdown</code> \u200b\u8d1f\u8d23\u200b\u8c03\u7528\u200b\u8282\u70b9\u200b\u7684\u200b <code>Destroy</code> \u200b\u51fd\u6570\u200b\u6e05\u7406\u200b\u83dc\u5355\u200b\u3002\u200b\u5355\u200b\u8282\u70b9\u200b\u7684\u200b\u5f15\u7528\u200b\u6570\u5f52\u200b0\uff0c\u200b\u5219\u200b\u4f1a\u200b\u6267\u884c\u200b\u81ea\u52a8\u200b\u6e05\u7406\u200b\u3002</p> <pre><code>class FMenuTest: public IEditorPlusToolInterface\n{\npublic:\n    virtual void OnStartup() override;\n    virtual void OnShutdown() override;\n}\n\nvoid FMenuTest::OnStartup()\n{\n    BuildPathMenu();\n    BuildCustomMenu();\n    BuildMixMenu();\n    BuildExtendMenu();\n}\n\nvoid FMenuTest::OnShutdown()\n{\n    for(auto Menu: Menus)\n    {\n        if(Menu.IsValid()) Menu-&gt;Destroy();\n    }\n    Menus.Empty();\n}\n</code></pre> <p>\u200b\u83dc\u5355\u200b\u7ba1\u7406\u200b\u7c7b\u200b\u7ee7\u627f\u200b <code>IEditorPlusToolManagerInterface</code>\uff0c\u200b\u5e76\u200b\u8986\u5199\u200b <code>AddTools</code> \u200b\u51fd\u6570\u200b\uff0c\u200b\u5728\u200b <code>AddTools</code> \u200b\u91cc\u9762\u200b\u6dfb\u52a0\u200b\u83dc\u5355\u200b\u7c7b\u200b</p> <pre><code>class FEditorPlusToolsImpl: public IEditorPlusToolManagerInterface\n{\npublic:\n    virtual void AddTools() override;\n}\n\nvoid FEditorPlusToolsImpl::AddTools()\n{\n    if (!Tools.Num())\n    {\n        Tools.Emplace(MakeShared&lt;FMenuTest&gt;());\n    }\n\n}\n</code></pre> <p>\u200b\u63d2\u4ef6\u200b\u52a0\u8f7d\u200b\u548c\u200b\u5378\u8f7d\u200b\u7684\u200b\u65f6\u5019\u200b\u5206\u522b\u200b\u8c03\u7528\u200b\u7ba1\u7406\u200b\u7c7b\u200b\u7684\u200b <code>StartupTools</code> \u200b\u548c\u200b <code>ShutdownTools</code> \u200b\u51fd\u6570\u200b</p> <pre><code>void FEditorPlusToolsModule::StartupModule()\n{\n    Impl = FEditorPlusToolsImpl::Get();\n    Impl-&gt;StartupTools();\n\n}\nvoid FEditorPlusToolsModule::ShutdownModule()\n{\n    Impl-&gt;ShutdownTools();\n}\n</code></pre> <p>\u200b\u5b8c\u6210\u200b\u4ee5\u4e0a\u200b\u9002\u914d\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u81ea\u52a8\u200b\u5728\u200b\u52a0\u8f7d\u200b\u548c\u200b\u5378\u8f7d\u200b\u63d2\u4ef6\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u81ea\u52a8\u200b\u52a0\u8f7d\u200b\u548c\u200b\u5378\u8f7d\u200b\u6269\u5c55\u200b\u7684\u200b\u83dc\u5355\u200b\u3002</p> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/","title":"UE \u200b\u8bbe\u7f6e\u200b\u672c\u5730\u5316\u200b\u591a\u200b\u8bed\u8a00","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#ue","title":"UE \u200b\u8bbe\u7f6e\u200b\u672c\u5730\u5316\u200b\u591a\u200b\u8bed\u8a00","text":"<p>\u200b\u8bb0\u5f55\u200b\u5982\u4f55\u200b\u5728\u200b UE \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u672c\u5730\u5316\u200b\u591a\u200b\u8bed\u8a00\u200b</p> <p>\u200b\u5982\u679c\u200b\u4e0d\u200b\u719f\u6089\u200b UE \u200b\u6269\u5c55\u200b\u83dc\u5355\u200b\uff0c\u200b\u5efa\u8bae\u200b\u5148\u200b\u7b80\u5355\u200b\u770b\u200b\u4e0b\u200b\uff1aUE \u200b\u6269\u5c55\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355\u200b\uff0cue-\u200b\u4f7f\u7528\u200b\u8def\u5f84\u200b\u5f62\u5f0f\u200b\u6269\u5c55\u200b\u83dc\u5355\u200b</p> <p>\u200b\u672c\u6587\u200b\u4ee3\u7801\u200b\u57fa\u4e8e\u200b\u63d2\u4ef6\u200b\uff1aUE.EditorPlus</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#_1","title":"\u529f\u80fd\u200b\u4ecb\u7ecd","text":"<p>UE \u200b\u81ea\u5e26\u200b\u5de5\u5177\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u672c\u5730\u5316\u200b\u591a\u200b\u8bed\u8a00\u200b\uff0c\u200b\u8b6c\u5982\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u7f16\u8f91\u5668\u200b\u83dc\u5355\u200b\u5b9e\u73b0\u200b\u672c\u5730\u5316\u200b\uff1a</p> <p>\u200b\u4e2d\u6587\u200b\u83dc\u5355\u200b\uff1a</p> <p></p> <p>\u200b\u82f1\u6587\u200b\u83dc\u5355\u200b\uff1a</p> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#_2","title":"\u4ee3\u7801\u200b\u58f0\u660e","text":"<p>\u200b\u4e3a\u4e86\u200b\u5b9e\u73b0\u200b\u83dc\u5355\u200b\u672c\u5730\u5316\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5728\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u660e\u786e\u200b\u58f0\u660e\u200b\u9700\u8981\u200b UE \u200b\u5904\u7406\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u4f7f\u7528\u200b UE \u200b\u5b9a\u4e49\u200b\u597d\u200b\u7684\u200b\u5b8f\u200b <code>LOCTEXT</code> \u200b\u548c\u200b <code>NSLOCTEXT</code>\uff1a</p> <ul> <li>\u200b\u6587\u4ef6\u200b\u5168\u5c40\u200b\u5b9a\u4e49\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5148\u200b\u5f00\u59cb\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u53eb\u505a\u200b <code>LOCTEXT_NAMESPACE</code> \u200b\u7684\u200b\u5b8f\u200b\uff0c\u200b\u5185\u5bb9\u200b\u662f\u200b\u5f53\u524d\u200b\u591a\u200b\u8bed\u8a00\u200b\u6587\u672c\u200b\u6240\u5728\u200b\u7684\u200b\u540d\u5b57\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u4e4b\u540e\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u6587\u672c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u7528\u200b <code>LOCTEXT</code> \u200b\u6765\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u6587\u4ef6\u200b\u6700\u540e\u200b\u53d6\u6d88\u200b\u5b8f\u200b <code>LOCTEXT_NAMESPACE</code>\uff1a</li> </ul> <pre><code>// #define LOCTEXT(InKey, InTextLiteral)\n\n#define LOCTEXT_NAMESPACE \"EditorPlusTools\"\nLOCTEXT(\"Key\", \"Content\");\n#undef LOCTEXT_NAMESPACE\n</code></pre> <ul> <li>\u200b\u5c40\u90e8\u200b\u5b9a\u4e49\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>NSLOCTEXT</code>\uff0c\u200b\u5b9a\u4e49\u200b\u6587\u672c\u200b\u7684\u200b\u65f6\u5019\u200b\u5e26\u4e0a\u200b\u540d\u5b57\u200b\u7a7a\u95f4\u200b\u53c2\u6570\u200b\uff1a</li> </ul> <pre><code>// #define NSLOCTEXT(InNamespace, InKey, InTextLiteral)\n\nNSLOCTEXT(\"EditorPlusTools\", \"Key\", \"Content\");\n</code></pre> <p>UE \u200b\u5de5\u5177\u200b\u901a\u8fc7\u200b\u67e5\u627e\u200b\u5b8f\u200b <code>LOCTEXT</code> \u200b\u548c\u200b <code>NSLOCTEXT</code> \u200b\u7684\u200b\u51fa\u73b0\u200b\u6765\u200b\u6536\u96c6\u200b\u51fa\u200b\u6240\u6709\u200b\u9700\u8981\u200b\u7ffb\u8bd1\u200b\u7684\u200b\u6587\u672c\u200b\u3002</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#_3","title":"\u4f7f\u7528\u200b\u5de5\u5177\u200b\u7ffb\u8bd1\u200b\u6587\u672c","text":"<p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u5982\u4e0b\u200b\u4ee3\u7801\u200b\u5b9a\u4e49\u200b\u6587\u672c\u200b\uff1a</p> <pre><code>#define LOCTEXT_NAMESPACE \"EditorPlusTools\"\n// register path node loctext\nFEditorPlusPath::GetNodeByPath(\"/MenuTest\")-&gt;SetFriendlyName(LOCTEXT(\"MenuTest\", \"MenuTest\"))-&gt;SetFriendlyTips(LOCTEXT(\"MenuTestTips\", \"MenuTestTips\"));\nFEditorPlusPath::GetNodeByPath(\"/MenuTest/&lt;SubMenu&gt;SubMenu1\")-&gt;SetFriendlyName(LOCTEXT(\"SubMenu1\", \"SubMenu1\"))-&gt;SetFriendlyTips(LOCTEXT(\"SubMenu1Tips\", \"SubMenu1Tips\"));\nFEditorPlusPath::GetNodeByPath(\"/MenuTest/&lt;SubMenu&gt;SubMenu1/&lt;SubMenu&gt;SubMenu1\")-&gt;SetFriendlyName(LOCTEXT(\"SubMenu1\", \"SubMenu1\"))-&gt;SetFriendlyTips(LOCTEXT(\"SubMenu1Tips\", \"SubMenu1Tips\"));\nFEditorPlusPath::GetNodeByPath(\"/&lt;Hook&gt;Help/&lt;MenuBar&gt;MenuTest/&lt;SubMenu&gt;SubMenu1/&lt;Section&gt;Section1\")-&gt;SetFriendlyName(LOCTEXT(\"Section1\", \"Section1\"))-&gt;SetFriendlyTips(LOCTEXT(\"Section1Tips\", \"Section1Tips\"));\n#undef LOCTEXT_NAMESPACE\n</code></pre> <p>\u200b\u9996\u5148\u200b\u5f00\u542f\u200b\u7ffb\u8bd1\u200b\u5de5\u5177\u200b\uff0c\u200b\u6253\u5f00\u200b\u7f16\u8f91\u5668\u200b\u8bbe\u7f6e\u200b <code>\u200b\u7f16\u8f91\u200b - \u200b\u7f16\u8f91\u5668\u200b\u504f\u597d\u200b\u8bbe\u7f6e\u200b</code>\uff0c\u200b\u52fe\u9009\u200b <code>\u200b\u901a\u7528\u200b - \u200b\u8bd5\u9a8c\u200b\u6027\u529f\u80fd\u200b - Tools - \u200b\u7ffb\u8bd1\u200b\u9009\u53d6\u200b\u5668\u200b</code>\uff1a</p> <p></p> <p>\u200b\u7136\u540e\u200b\u6253\u5f00\u200b\u7ffb\u8bd1\u200b\u5de5\u5177\u200b <code>\u200b\u5de5\u5177\u200b - \u200b\u672c\u5730\u5316\u200b\u63a7\u5236\u677f\u200b</code>\uff1a</p> <p></p> <p>\u200b\u65b0\u5efa\u200b\u4e00\u4e2a\u200b\u76ee\u6807\u200b\uff08\u200b\u5728\u200b\u9ed8\u8ba4\u200b\u7684\u200b Game \u200b\u4e0b\u9762\u200b\u4e5f\u200b\u884c\u200b\uff0c\u200b\u65b0\u5efa\u200b\u4e00\u4e2a\u200b\u662f\u200b\u4e3a\u4e86\u200b\u65b9\u4fbf\u7ba1\u7406\u200b\u548c\u200b\u79fb\u52a8\u200b\u8fd9\u4e9b\u200b\u7ffb\u8bd1\u200b\u6587\u672c\u200b\uff09</p> <p></p> <p>\u200b\u914d\u7f6e\u200b\u76ee\u6807\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u6211\u200b\u8fd9\u91cc\u200b\u540d\u5b57\u200b\u6539\u4e3a\u200b <code>EditorPlusTools</code>\uff0c\u200b\u52a0\u8f7d\u200b\u653f\u7b56\u200b\u662f\u200b <code>\u200b\u7f16\u8f91\u5668\u200b</code>\uff0c\u200b\u4ece\u200b\u6587\u672c\u200b\u6536\u96c6\u200b\uff0c\u200b\u5e76\u200b\u52a0\u4e0a\u200b\u63d2\u4ef6\u200b\u76ee\u5f55\u200b\uff0c\u200b\u76ee\u6807\u200b\u4f9d\u8d56\u6027\u200b\u662f\u200b <code>Engine, Editor</code>\uff0c\u200b\u5176\u4ed6\u200b\u914d\u7f6e\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\uff1a</p> <p></p> <p>\u200b\u6dfb\u52a0\u200b\u8bed\u7cfb\u200b\uff0c\u200b\u4fdd\u8bc1\u200b\u6709\u200b\u4e2d\u6587\u200b\uff08\u200b\u7b80\u4f53\u200b\uff09\u200b\u548c\u200b\u82f1\u6587\u200b\u4e24\u4e2a\u200b\u8bed\u7cfb\u200b\uff0c\u200b\u786e\u8ba4\u200b\u9f20\u6807\u200b\u653e\u5728\u200b\u8bed\u8a00\u200b\u540d\u5b57\u200b\u4e0a\u200b\u5206\u522b\u200b\u663e\u793a\u200b <code>zh-Hans</code> \u200b\u548c\u200b <code>en</code>\uff0c\u200b\u5e76\u200b\u9009\u4e2d\u200b\u82f1\u8bed\u200b\uff08\u200b\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u4ee3\u7801\u200b\u91cc\u9762\u200b\u662f\u200b\u7528\u200b\u82f1\u6587\u200b\u5b9a\u4e49\u200b\u7684\u200b\u6587\u672c\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd9\u91cc\u200b\u9700\u8981\u200b\u6536\u96c6\u200b\u8fd9\u4e9b\u200b\u82f1\u8bed\u200b\u6587\u672c\u200b\uff09\uff1a</p> <p></p> <p>\u200b\u70b9\u51fb\u200b\u6536\u96c6\u200b\u6587\u672c\u200b\uff1a</p> <p></p> <p>\u200b\u4f1a\u5f39\u200b\u51fa\u200b\u6536\u96c6\u200b\u8fdb\u5ea6\u200b\u6846\u200b\uff0c\u200b\u7b49\u5f85\u200b\u6536\u96c6\u200b\u6210\u529f\u200b\uff0c\u200b\u4f1a\u200b\u663e\u793a\u200b\u7eff\u8272\u200b\u5bf9\u200b\u94a9\u200b\uff1a</p> <p></p> <p>\u200b\u5173\u6389\u200b\u6536\u96c6\u200b\u8fdb\u5ea6\u200b\u6846\u200b\uff0c\u200b\u56de\u5230\u200b\u7ffb\u8bd1\u200b\u5de5\u5177\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u82f1\u6587\u200b\u4e00\u884c\u200b\u6709\u200b\u663e\u793a\u200b\u6536\u96c6\u200b\u5230\u200b\u7684\u200b\u6570\u91cf\u200b\uff0c\u200b\u672c\u8eab\u200b\u82f1\u6587\u200b\u7684\u200b\u6211\u4eec\u200b\u4e0d\u200b\u9700\u8981\u200b\u7ffb\u8bd1\u200b\uff0c\u200b\u70b9\u5f00\u200b\u4e2d\u6587\u200b\u4e00\u884c\u200b\u7684\u200b\u7ffb\u8bd1\u200b\u6309\u94ae\u200b\uff1a</p> <p></p> <p>\u200b\u6253\u5f00\u200b\u540e\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u672a\u200b\u7ffb\u8bd1\u200b\u4e00\u680f\u200b\u6709\u200b\u5185\u5bb9\u200b\uff0c\u200b\u5728\u200b\u82f1\u6587\u200b\u6587\u672c\u200b\u7684\u200b\u53f3\u8fb9\u200b\u4e00\u680f\u200b\u8f93\u5165\u200b\u7ffb\u8bd1\u200b\u540e\u200b\u7684\u200b\u5185\u5bb9\u200b\uff0c\u200b\u7ffb\u8bd1\u200b\u5185\u5bb9\u200b\u90fd\u200b\u5b8c\u6210\u200b\u4e4b\u540e\u200b\uff0c\u200b\u4fdd\u5b58\u200b\u9000\u51fa\u200b\u7a97\u53e3\u200b\uff1a</p> <p></p> <p>\u200b\u70b9\u51fb\u200b\u7edf\u8ba1\u200b\u5b57\u6570\u200b\uff0c\u200b\u7ed3\u675f\u200b\u540e\u80fd\u200b\u770b\u5230\u200b\u4e2d\u6587\u200b\u4e00\u680f\u200b\u663e\u793a\u200b\u4e86\u200b\u7ffb\u8bd1\u200b\u7684\u200b\u6570\u91cf\u200b\uff1a</p> <p></p> <p>\u200b\u6700\u540e\u200b\u7f16\u8bd1\u200b\u6587\u672c\u200b\uff1a</p> <p></p> <p>\u200b\u7ffb\u8bd1\u200b\u7684\u200b\u6570\u636e\u200b\u4f1a\u200b\u653e\u5728\u200b <code>Content\\Localization\\EditorPlusTools</code> \u200b\u91cc\u9762\u200b\uff0c\u200b\u6bcf\u79cd\u200b\u8bed\u8a00\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u5939\u200b\uff0c\u200b\u5728\u200b zh-Hans \u200b\u91cc\u9762\u200b\u80fd\u200b\u770b\u5230\u200b\u4e24\u4e2a\u200b\u6587\u4ef6\u200b\uff0c<code>.archive</code> \u200b\u662f\u200b\u6536\u96c6\u200b\u548c\u200b\u7ffb\u8bd1\u200b\u7684\u200b\u6587\u672c\u200b\uff0c<code>.locres</code> \u200b\u5219\u200b\u662f\u200b\u7f16\u8bd1\u200b\u4e4b\u540e\u200b\u7684\u200b\u6570\u636e\u200b\uff1a</p> <p></p> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#_4","title":"\u7ffb\u8bd1\u200b\u597d\u200b\u7684\u200b\u6587\u672c\u200b\u653e\u5165\u200b\u63d2\u4ef6\u200b\u76ee\u5f55\u200b\u4e2d","text":"<p>\u200b\u6211\u4eec\u200b\u4e0a\u9762\u200b\u7ed9\u200b\u63d2\u4ef6\u200b\u751f\u6210\u200b\u7684\u200b\u7ffb\u8bd1\u200b\u6587\u672c\u200b\u653e\u5728\u200b\u4e86\u200b\u9879\u76ee\u200b\u76ee\u5f55\u200b\u4e0b\u9762\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u628a\u200b\u8fd9\u4e9b\u200b\u6587\u672c\u200b\u79fb\u52a8\u200b\u5230\u200b\u63d2\u4ef6\u200b\u91cc\u9762\u200b\uff0c\u200b\u65b9\u4fbf\u200b\u968f\u7740\u200b\u63d2\u4ef6\u200b\u4e00\u8d77\u200b\u53d1\u5e03\u200b\u3002</p> <p>\u200b\u628a\u200b <code>Content\\Localization\\EditorPlusTools</code> \u200b\u76ee\u5f55\u200b\u79fb\u52a8\u200b\u5230\u200b\u63d2\u4ef6\u200b\u76ee\u5f55\u200b Content \u200b\u4e0b\u9762\u200b\uff0c\u200b\u6211\u200b\u8fd9\u91cc\u200b\u662f\u200b <code>Plugins\\UE.EditorPlus\\Content\\Localization\\EditorPlusTools</code>\u3002</p> <p>\u200b\u4fee\u6539\u200b\u9879\u76ee\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b <code>DefaultEditor.ini</code>\uff0c\u200b\u52a0\u4e0a\u200b\u65b0\u200b\u8def\u5f84\u200b\uff1a</p> <pre><code>[Internationalization]\n+LocalizationPaths=%GAMEDIR%Plugins/UE.EditorPlus/Content/Localization/EditorPlusTools\n</code></pre> <p>\u200b\u8fd9\u6837\u200b\uff0c\u200b\u5176\u4ed6\u200b\u9879\u76ee\u200b\u62ff\u5230\u200b\u63d2\u4ef6\u200b\u540e\u200b\uff0c\u200b\u53ea\u8981\u200b\u4fee\u6539\u200b <code>DefaultEditor.ini</code> \u200b\u5219\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u7ffb\u8bd1\u200b\u6587\u672c\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u91cd\u65b0\u914d\u7f6e\u200b\u7ffb\u8bd1\u200b\u3002</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#_5","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>\u200b\u5728\u200b\u751f\u6210\u200b\u7ffb\u8bd1\u200b\u6570\u636e\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u9047\u5230\u200b\u8fc7\u200b\u4e00\u4e9b\u200b\u95ee\u9898\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u603b\u7ed3\u200b\u51fa\u6765\u200b\u6ce8\u610f\u200b\u7684\u200b\u4e8b\u9879\u200b\uff1a</p> <ul> <li>\u200b\u4ee3\u7801\u200b\u91cc\u9762\u200b\u5b9a\u4e49\u200b\u6587\u672c\u200b\u5fc5\u987b\u200b\u8981\u200b\u7528\u5b8f\u200b <code>LOCTEXT</code> \u200b\u548c\u200b <code>NSLOCTEXT</code>\uff0c\u200b\u6587\u672c\u200b\u9700\u8981\u200b\u662f\u200b\u5b57\u7b26\u4e32\u200b\u5e38\u91cf\u200b\uff0c\u200b\u8fd9\u6837\u200b UE \u200b\u624d\u200b\u662f\u200b\u6536\u96c6\u200b\u51fa\u6765\u200b\u3002</li> <li>\u200b\u7ffb\u8bd1\u200b\u76ee\u6807\u200b\u540d\u5b57\u200b\u4e0d\u80fd\u200b\u5e26\u6709\u200b\u7b26\u53f7\u200b <code>.</code>\uff0c<code>Content\\Localiztion\\</code> \u200b\u4e0b\u200b\u7684\u200b\u76ee\u5f55\u200b\u540d\u5b57\u200b\u4e0d\u80fd\u200b\u5e26\u6709\u200b <code>.</code>\uff0cUE \u200b\u53ea\u4f1a\u200b\u622a\u53d6\u200b <code>.</code> \u200b\u524d\u9762\u200b\u7684\u200b\u540d\u5b57\u200b\u3002\u200b\u4f1a\u200b\u5bfc\u81f4\u200b UE \u200b\u5728\u200b\u8bfb\u53d6\u200b\u7ffb\u8bd1\u200b\u6587\u672c\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u7531\u4e8e\u200b\u540d\u5b57\u200b\u9519\u8bef\u200b\uff0c\u200b\u8bfb\u53d6\u200b\u5931\u8d25\u200b\u3002</li> <li>\u200b\u5bf9\u4e8e\u200b\u7f16\u8f91\u5668\u200b\u63d2\u4ef6\u200b\uff0c\u200b\u9700\u8981\u200b\u5224\u65ad\u200b\u5982\u679c\u200b\u662f\u200b\u547d\u4ee4\u884c\u200b\u6a21\u5f0f\u200b <code>IsRunningCommandlet()</code> \u200b\u5219\u200b\u4e0d\u200b\u751f\u6210\u200b\u83dc\u5355\u200b\u548c\u200b SlateUI \uff0c\u200b\u56e0\u4e3a\u200b\u547d\u4ee4\u884c\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\u6ca1\u6709\u200b Slate \u200b\u6a21\u5757\u200b\uff0c\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6536\u96c6\u200b\u6587\u672c\u200b\u7684\u200b\u65f6\u5019\u200b\u62a5\u9519\u200b <code>Assertion failed: CurrentApplication.IsValid()</code>\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u4e5f\u200b\u9047\u5230\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u62a5\u9519\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c1d\u8bd5\u200b\u52a0\u4e0a\u200b\u8fd9\u4e2a\u200b\u5224\u65ad\u200b\u3002\u200b\u5177\u4f53\u200b\u62a5\u9519\u200b\u4fe1\u606f\u200b\uff1a <p>Assertion failed: CurrentApplication.IsValid() [File:E:\\UE\\ue5.3_git\\Engine\\Source\\Runtime\\Slate\\Public\\Framework\\Application\\SlateApplication.h] [Line: 255] </p> <p></p> </li> </ul> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E9%80%9A%E8%BF%87%E6%8F%92%E4%BB%B6%E6%BA%90%E7%A0%81%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/","title":"UE \u200b\u901a\u8fc7\u200b\u63d2\u4ef6\u200b\u6e90\u7801\u200b\u6dfb\u52a0\u200b\u63d2\u4ef6","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E9%80%9A%E8%BF%87%E6%8F%92%E4%BB%B6%E6%BA%90%E7%A0%81%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/#ue","title":"UE \u200b\u901a\u8fc7\u200b\u63d2\u4ef6\u200b\u6e90\u7801\u200b\u6dfb\u52a0\u200b\u63d2\u4ef6","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E9%80%9A%E8%BF%87%E6%8F%92%E4%BB%B6%E6%BA%90%E7%A0%81%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/#_1","title":"\u6dfb\u52a0\u200b\u63d2\u4ef6","text":"<p>\u200b\u7b80\u5355\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b\u5982\u4f55\u200b\u5728\u200b\u62e5\u6709\u200b\u63d2\u4ef6\u200b\u6e90\u7801\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u6dfb\u52a0\u200b\u63d2\u4ef6\u200b.</p> <p>\u200b\u4ee5\u200b\u63d2\u4ef6\u200b UE.EditorPlus \u200b\u4e3a\u4f8b\u200b</p> <ul> <li>\u200b\u628a\u200b\u6e90\u7801\u200b\u653e\u5230\u200b Plugins \u200b\u76ee\u5f55\u200b\u4e0b\u200b</li> <li>\uff08\u200b\u8fd9\u200b\u4e00\u6b65\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u6267\u884c\u200b\uff09\u200b\u4fee\u6539\u200b\u9879\u76ee\u200b .uproject \u200b\u6587\u4ef6\u200b\uff0cPlugins \u200b\u5b57\u6bb5\u200b\u4e0b\u200b\u589e\u52a0\u200b\uff1a     <pre><code>    \"Plugins\": [\n    {\n        \"Name\": \"EditorPlus\",\n        \"Enabled\": true,\n        \"TargetAllowList\": [\n            \"Editor\"\n        ]\n    }\n</code></pre></li> <li>\u200b\u53f3\u952e\u200b uproject \u200b\u6587\u4ef6\u200b\uff0c\u200b\u6267\u884c\u200b \"Generate Visual Studio Project Files\"\uff0c\u200b\u66f4\u65b0\u200b sln \u200b\u9879\u76ee\u200b\u6587\u4ef6\u200b</li> <li>\u200b\u6253\u5f00\u200b sln \u200b\u6587\u4ef6\u200b\uff0c\u200b\u7f16\u8bd1\u200b\u9879\u76ee\u200b</li> </ul>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"ue-%E9%80%9A%E8%BF%87%E6%8F%92%E4%BB%B6%E6%BA%90%E7%A0%81%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/#_2","title":"\u8bbe\u7f6e\u200b\u591a\u200b\u8bed\u8a00","text":"<p>\u200b\u4fee\u6539\u200b\u9879\u76ee\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b <code>DefaultEditor.ini</code>\uff0c\u200b\u52a0\u4e0a\u200b\u65b0\u200b\u8def\u5f84\u200b\uff1a</p> <pre><code>[Internationalization]\n+LocalizationPaths=%GAMEDIR%Plugins/UE.EditorPlus/Content/Localization/EditorPlusTools\n</code></pre> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/","title":"Unity\u200b\u4eba\u7269\u200b\u63a7\u5236","text":"<p>\u200b\u4eba\u7269\u200b\u7684\u200b\u52a8\u4f5c\u200b\u63a7\u5236\u200b\u662f\u200b\u6e38\u620f\u200b\u91cc\u9762\u200b\u5f88\u200b\u91cd\u8981\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\uff0c\u200b\u64cd\u4f5c\u6027\u200b\u5f3a\u200b\u7684\u200b\u6e38\u620f\u200b\u80fd\u591f\u200b\u5f88\u200b\u597d\u200b\u7684\u200b\u5438\u5f15\u200b\u73a9\u5bb6\u200b\u3002\u200b\u8fd9\u91cc\u200b\u6211\u200b\u5c31\u200b\u5c1d\u8bd5\u200b\u505a\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u4eba\u7269\u200b\u64cd\u4f5c\u63a7\u5236\u200b\uff0c\u200b\u4eba\u7269\u200b\u80fd\u591f\u200b\u5b8c\u6210\u200b\u57fa\u672c\u200b\u7684\u200b\u79fb\u52a8\u200b\uff0c\u200b\u5305\u62ec\u200b\u884c\u8d70\u200b\uff0c\u200b\u8df3\u8dc3\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/#_1","title":"\u9700\u6c42","text":"<p>\u200b\u5148\u200b\u6765\u200b\u8003\u8651\u4e00\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u4eba\u7269\u200b\u64cd\u4f5c\u200b\u5177\u4f53\u200b\u7684\u200b\u9700\u6c42\u200b\uff1a</p> <ol> <li>\u200b\u884c\u8d70\u200b\uff0c\u200b\u80fd\u591f\u200b\u5728\u200b\u521a\u4f53\u200b\u7684\u200b\u8868\u9762\u200b\u884c\u8d70\u200b\uff0c\u200b\u7531\u200b\u6309\u952e\u200b\u4e0a\u4e0b\u5de6\u53f3\u200b\u8f93\u5165\u200b\u6765\u200b\u63a7\u5236\u200b\uff0c\u200b\u6682\u200b\u4e0d\u200b\u8003\u8651\u200b\u52a0\u901f\u200b\u51cf\u901f\u200b\u8fc7\u7a0b\u200b</li> <li>\u200b\u884c\u8d70\u200b\u7684\u200b\u901f\u5ea6\u200b\u5728\u200b\u4e0d\u540c\u200b\u65b9\u5411\u200b\u4e0a\u200b\u53ef\u4ee5\u200b\u4e0d\u540c\u200b\uff0c\u200b\u4f8b\u5982\u200b\u540e\u9000\u200b\u5e94\u8be5\u200b\u6bd4\u200b\u524d\u8fdb\u200b\u6162\u200b</li> <li>\u200b\u8df3\u8dc3\u200b\uff0c\u200b\u7531\u200bjump\u200b\u6309\u952e\u200b\u63a7\u5236\u200b\uff0c\u200b\u4eba\u7269\u200b\u4ee5\u200b\u4e00\u5b9a\u200b\u521d\u901f\u5ea6\u200b\u4ece\u200b\u4e0a\u200b\u79bb\u5f00\u200b\u5730\u9762\u200b\uff0c\u200b\u5e76\u200b\u6162\u6162\u200b\u56de\u843d\u200b\u5230\u200b\u5730\u9762\u200b</li> </ol> <p>\u200b\u90a3\u4e48\u200b\u5927\u81f4\u200b\u7684\u200b\u601d\u8def\u200b\u5c31\u662f\u200b\uff1a\u200b\u7528\u200b\u901f\u5ea6\u200b\u6765\u200b\u63cf\u8ff0\u200b\u4eba\u7269\u200b\u7684\u200b\u8fd0\u52a8\u200b\uff0c\u200b\u901f\u5ea6\u200b\u6bcf\u4e2a\u200b\u65b9\u5411\u200b\u4e0a\u200b\u7684\u200b\u5206\u91cf\u200b\u53ef\u4ee5\u200b\u5206\u522b\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u6700\u540e\u200b\u901f\u5ea6\u200b\u4e58\u4ee5\u200b\u65f6\u95f4\u200b\u5c31\u662f\u200b\u4eba\u7269\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u504f\u79fb\u200b\u4e86\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/#_2","title":"\u4eba\u7269\u200b\u7ec4\u4ef6\u200b\u8bbe\u7f6e","text":"<p>\u200b\u5728\u200b\u4e3a\u200b\u4eba\u7269\u200b\u5199\u200b\u811a\u672c\u200b\u6765\u200b\u64cd\u4f5c\u63a7\u5236\u200b\u524d\u200b\uff0c\u200b\u9700\u8981\u200b\u4e00\u4e9b\u200b\u51c6\u5907\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u628a\u200b\u4eba\u7269\u200b\u7684\u200b\u76f8\u5173\u200b\u7ec4\u4ef6\u200b\u5148\u200b\u914d\u7f6e\u200b\u597d\u200b\uff1a</p> <ol> <li>\u200b\u4e3a\u4e86\u200b\u63a7\u5236\u200b\u4eba\u7269\u200b\u5e76\u200b\u4f7f\u200b\u4eba\u7269\u200b\u6709\u200b\u4e00\u4e9b\u200b\u521a\u6027\u200b\u7269\u7406\u200b\u4e0a\u200b\u7684\u200b\u8868\u73b0\u200b\u9700\u8981\u200b\u4e3a\u200b\u4eba\u7269\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b<code>Character Controller Component</code></li> <li>\u200b\u4e3a\u4e86\u200b\u7ed3\u6784\u200b\u66f4\u200b\u5206\u660e\u200b\u4e00\u4e9b\u200b\uff0c\u200b\u5148\u200b\u628a\u200b\u5173\u4e8e\u200b\u4eba\u7269\u200b\u7684\u200b\u64cd\u4f5c\u200b\u8f93\u5165\u200b\u5206\u200b\u51fa\u6765\u200b\uff0c\u200b\u8bfb\u53d6\u200b\u8f93\u5165\u200b\u5e76\u200b\u521d\u6b65\u200b\u5904\u7406\u200b\u540e\u200b\u628a\u200b\u7ed3\u679c\u200b\u4f20\u7ed9\u200b\u4eba\u7269\u200b\u63a7\u5236\u5668\u200b\uff0c\u200b\u628a\u200b\u8fd9\u90e8\u5206\u200b\u7684\u200b\u811a\u672c\u200b\u547d\u540d\u200b\u4e3a\u200b<code>MyThirdPersonInput.cs</code>\uff1b</li> <li>\u200b\u771f\u6b63\u200b\u63a7\u5236\u200b\u4eba\u7269\u200b\u79fb\u52a8\u200b\u7684\u200b\u811a\u672c\u200b\u547d\u540d\u200b\u4e3a\u200b<code>MyThirdPersonController.cs</code></li> </ol> <p>\u200b\u914d\u7f6e\u200b\u540e\u200b\u7684\u200b\u7ed3\u679c\u200b\u662f\u200b\u8fd9\u6837\u200b\uff1a </p>","tags":["dev"]},{"location":"unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/#_3","title":"\u8f93\u5165","text":"<p>\u200b\u8f93\u5165\u200b\u5c31\u662f\u200b\u4e0a\u4e0b\u5de6\u53f3\u200b\u548c\u200b\u8df3\u8dc3\u200b\uff0c\u200b\u65b9\u5411\u200b\u9700\u8981\u200b\u505a\u200b\u4e00\u4e2a\u200b\u5f52\u4e00\u5316\u200b\u7684\u200b\u5904\u7406\u200b\uff1a</p> <pre><code>// get movement from input\nvar direction = new Vector3(Input.GetAxis(\"Horizontal\"), 0, \n    Input.GetAxis(\"Vertical\"));\nif (direction != Vector3.zero)\n{\n    // constrain length to [0, 1]\n    var directionLength = direction.magnitude;\n    directionLength = Math.Min(1, directionLength);\n    direction = direction.normalized * directionLength;\n}\nperson.inputMoveDirction = direction;\nperson.inputJump = Input.GetButton(\"Jump\");\n````\n\n##\u200b\u63cf\u8ff0\u200b\u79fb\u52a8\u200b\u548c\u200b\u8df3\u8dc3\u200b\n\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u7528\u200b\u4e00\u4e9b\u200b\u53d8\u91cf\u200b\u6765\u200b\u63cf\u8ff0\u200b\u4eba\u7269\u200b\u7684\u200b\u52a8\u4f5c\u200b\uff0c\u200b\u4f8b\u5982\u200b\u79fb\u52a8\u200b\u901f\u5ea6\u200b\uff0c\u200b\u8df3\u8dc3\u200b\u901f\u5ea6\u200b\u7b49\u200b\uff0c\u200b\u79fb\u52a8\u200b\u7528\u200b\u4e0b\u9762\u200b\u53d8\u91cf\u200b\u63cf\u8ff0\u200b\uff1a\n\n```c#    \n[System.Serializable]\npublic class Movement\n{\n    public float forwardSpeed = 5F;\n    public float backwardSpeed = 5F;\n    public float sidewardSpeed = 5F;\n}\npublic Movement movement = new Movement();\n</code></pre> <p><code>[System.Serializable]</code>\u200b\u662f\u200b\u4e3a\u4e86\u200b\u8ba9\u200b\u8fd9\u4e9b\u200b\u53c2\u6570\u200b\u66b4\u9732\u200b\u5230\u200bInspector\u200b\u4e0a\u200b\u3002\u200b\u8df3\u8dc3\u200b\u7684\u200b\u63cf\u8ff0\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>[System.Serializable]\npublic class Jumping \n{\n    public bool enable = true;      // true if can jump\n    public float jumpSpeed = 5F;    // original speed when jump\n    public float gravity = 10F;\n    public float maxFallSpeed = 20F;\n    public bool jumping = false;    // true if now in the air\n}\npublic Jumping jumping = new Jumping();\n</code></pre>","tags":["dev"]},{"location":"unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/#_4","title":"\u5206\u89e3\u200b\u901f\u5ea6","text":"<p>\u200b\u4e3a\u4e86\u200b\u65b9\u4fbf\u200b\u63cf\u8ff0\u200b\u4e0d\u540c\u200b\u65b9\u5411\u200b\u7684\u200b\u79fb\u52a8\u200b\uff0c\u200b\u628a\u200b\u65b9\u5411\u200b\u5206\u6210\u200b\u4e09\u4e2a\u200b\u5206\u91cf\u200b\uff1a\u200b\u524d\u540e\u200b\u3001\u200b\u5de6\u53f3\u200b\u3001\u200b\u4e0a\u4e0b\u200b\uff0c\u200b\u5206\u522b\u200b\u6c42\u89e3\u200b\u3002</p> <p>\u200b\u524d\u540e\u200b\u901f\u5ea6\u200b\u4e0d\u540c\u200b\uff0c\u200b\u6839\u636e\u200b\u6570\u503c\u200b\u7684\u200b\u6b63\u8d1f\u200b\u5224\u65ad\u200b\uff1a</p> <pre><code>if (velocity.z &gt; 0)\n    velocity.z *= movement.forwardSpeed;\nelse\n    velocity.z *= movement.backwardSpeed;\n</code></pre> <p>\u200b\u5de6\u53f3\u200b\u901f\u5ea6\u200b\u4e00\u81f4\u200b\uff1a</p> <pre><code>velocity.x = inputMoveDirction.x * movement.sidewardSpeed;\n</code></pre> <p>\u200b\u8df3\u8dc3\u200b\u9ebb\u70e6\u200b\u4e00\u70b9\u200b\uff0c\u200b\u8981\u200b\u5224\u65ad\u200b\u5f53\u524d\u200b\u4eba\u7269\u200b\u7684\u200b\u72b6\u6001\u200b\uff1a</p> <ul> <li>\u200b\u5982\u679c\u200b\u5df2\u7ecf\u200b\u5728\u200b\u7a7a\u4e2d\u200b\uff0c\u200b\u7528\u200b\u91cd\u529b\u200b\u8ba1\u7b97\u901f\u5ea6\u200b</li> <li>\u200b\u5982\u679c\u200b\u5728\u200b\u5730\u4e0a\u200b\uff1a</li> <li> <ul> <li>\u200b\u5982\u679c\u200b\u6309\u4e0b\u200b\u8df3\u8dc3\u952e\u200b\uff0c\u200b\u901f\u5ea6\u200b\u4e3a\u200b\u8df3\u8dc3\u200b\u521d\u59cb\u200b\u901f\u5ea6\u200b</li> </ul> </li> <li> <ul> <li>\u200b\u5426\u5219\u200by\u200b\u65b9\u5411\u200b\u901f\u5ea6\u200b\u4e3a\u200b0</li> </ul> </li> </ul> <pre><code>if (!isOnGround)\n{\n    yVelocity = Math.Max(yVelocity - jumping.gravity * Time.deltaTime, \n        -jumping.maxFallSpeed);\n}\nelse\n{\n    if (jumping.enable &amp;&amp; inputJump)\n    {\n        yVelocity = jumping.jumpSpeed;\n    }\n    else\n        yVelocity = 0F;\n}\n</code></pre>","tags":["dev"]},{"location":"unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/#_5","title":"\u66f4\u65b0\u200b\u4eba\u7269\u200b\u4f4d\u7f6e","text":"<p>\u200b\u8ba1\u7b97\u51fa\u6765\u200b\u7684\u200b\u901f\u5ea6\u200b\u5047\u5b9a\u200b\u4e3a\u200b\u4ece\u200b\u672c\u200b\u5e27\u200b\u5f00\u59cb\u200b\u7684\u200b\u901f\u5ea6\u200b\uff0c\u200b\u90a3\u4e48\u200b\u672c\u5e27\u200b\u8ba1\u7b97\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u901f\u5ea6\u200b\u5e94\u8be5\u200b\u662f\u200b\u524d\u200b\u4e00\u5e27\u200b\u8ba1\u7b97\u51fa\u6765\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u66f4\u65b0\u200b\u901f\u5ea6\u200b\u524d\u200b\uff0c\u200b\u5148\u200b\u8ba1\u7b97\u200b\u4eba\u7269\u200b\u7684\u200b\u65b0\u200b\u4f4d\u7f6e\u200b\uff1a</p> <pre><code>// move to new position\nvar collisionFlag = controller.Move(velocity * Time.deltaTime);\nisOnGround = (collisionFlag &amp; CollisionFlags.CollidedBelow) != 0;\n</code></pre> <p><code>controller.Move</code>\u200b\u4f1a\u200b\u8fd4\u56de\u200b<code>CollisionFlags</code>\u200b\u6765\u200b\u8868\u793a\u200b\u78b0\u649e\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u901a\u8fc7\u200b\u8fd9\u4e2a\u200b\u72b6\u6001\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u77e5\u9053\u200b\u4eba\u7269\u200b\u662f\u4e0d\u662f\u200b\u7ad9\u200b\u5728\u200b\u5730\u9762\u200b\u4e0a\u200b\u3002</p> <p>\u200b\u5b8c\u6574\u200b\u4ee3\u7801\u200b\uff1a</p> <p>MyThirdPersonInput.cs:</p> <pre><code>using UnityEngine;\nusing System;\nusing System.Collections;\n[RequireComponent(typeof(MyThirdPersonController))]\n\npublic class MyThirdPersonInput : MonoBehaviour {\n\n    private MyThirdPersonController person;\n\n    void Awake()\n    {\n        person = GetComponent&lt;MyThirdPersonController&gt;();\n    }\n\n    // Update is called once per frame\n    void Update () \n    {\n        // get movement from input\n        var direction = new Vector3(Input.GetAxis(\"Horizontal\"), 0, \n            Input.GetAxis(\"Vertical\"));\n\n        if (direction != Vector3.zero)\n        {\n            // constrain length to [0, 1]\n            var directionLength = direction.magnitude;\n\n            directionLength = Math.Min(1, directionLength);\n\n            direction = direction.normalized * directionLength;\n\n        }\n\n        person.inputMoveDirction = direction;\n        person.inputJump = Input.GetButton(\"Jump\");\n\n    }\n}\n</code></pre> <p>MyThirdPersonController.cs:</p> <pre><code>using UnityEngine;\nusing System;\nusing System.Collections;\n\npublic class MyThirdPersonController : MonoBehaviour {\n\n    // The current global direction we want the character to move in.\n    [System.NonSerialized]\n    public Vector3 inputMoveDirction = Vector3.zero;\n\n    // Is the jump button held down? We use this interface instead of checking\n    // for the jump button directly so this script can also be used by AIs.\n    [System.NonSerialized]\n    public bool inputJump = false;\n\n    [System.Serializable]\n    public class Movement\n    {\n        public float forwardSpeed = 5F;\n        public float backwardSpeed = 5F;\n        public float sidewardSpeed = 5F;\n    }\n    public Movement movement = new Movement();\n\n    [System.Serializable]\n    public class Jumping \n    {\n        public bool enable = true;      // true if can jump\n        public float jumpSpeed = 5F;    // original speed when jump\n        public float gravity = 10F;     \n        public float maxFallSpeed = 20F;\n        public bool jumping = false;    // true if now in the air\n    }\n    public Jumping jumping = new Jumping();\n\n    private CharacterController controller;\n    private Vector3 velocity = Vector3.zero;\n    private bool isOnGround = true;\n    // Use this for initialization\n    void Start () \n    {\n        controller = GetComponent&lt;CharacterController&gt;();\n    }\n\n    // Update is called once per frame\n    void FixedUpdate() \n    {\n        // move to new position\n        var collisionFlag = controller.Move(velocity * Time.deltaTime);\n        isOnGround = (collisionFlag &amp; CollisionFlags.CollidedBelow) != 0;\n\n        // update velocity\n        float yVelocity = velocity.y;\n        velocity = Vector3.zero;\n\n        // x-z plane velocity\n        if (inputMoveDirction != Vector3.zero)\n        {\n            velocity.z = inputMoveDirction.z;\n            if (velocity.z &gt; 0)\n                velocity.z *= movement.forwardSpeed;\n            else\n                velocity.z *= movement.backwardSpeed;\n\n            velocity.x = inputMoveDirction.x * movement.sidewardSpeed;\n        }\n\n        // y velocity\n        if (!isOnGround)\n        {\n            yVelocity = Math.Max(yVelocity - jumping.gravity * Time.deltaTime, \n                -jumping.maxFallSpeed);\n        }\n        else\n        {\n            if (jumping.enable &amp;&amp; inputJump)\n            {\n                yVelocity = jumping.jumpSpeed;\n            }\n            else\n                yVelocity = 0F;\n        }\n\n        velocity = transform.rotation * velocity;\n        velocity.y = yVelocity;\n    }\n}\n</code></pre> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev"]},{"location":"unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/","title":"Unity\u200b\u5b9e\u73b0\u200b\u4f53\u79ef\u200b\u5149\u7167\u200b\u6563\u5c04\u200b (Volumetric Light Scattering\uff0c\u200b\u4e91\u9699\u200b\u5149\u200b)","text":"","tags":["dev"]},{"location":"unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/#_1","title":"\u539f\u7406","text":"<p>Volumetric Light Scattering \u200b\u7684\u200b\u539f\u7406\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u300aGPU Gems 3\u300b\u200b\u7b2c\u200b13\u200b\u7ae0\u200b\uff0c\u200b\u4e66\u4e0a\u200b\u6709\u200b\u6548\u679c\u56fe\u200b\uff1a</p> <p></p> <p>\u200b\u597d\u770b\u200b\u5427\u200b\uff0c\u200b\u90a3\u597d\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u76ee\u6807\u200b\u5c31\u662f\u200b\u5b9e\u73b0\u200b\u8fd9\u79cd\u200b\u6548\u679c\u200b\u3002</p> <p>\u200b\u4e66\u4e0a\u200b\u4ecb\u7ecd\u200b\u4e86\u200b\u539f\u7406\u200b\uff0c\u200b\u4e00\u6761\u200b\u5173\u952e\u200b\u7684\u200b\u516c\u5f0f\u200b\u662f\u200b\uff1a</p> <p>\\[ L(s, \\theta, \\phi) = exposure \\times \\sum_{i=0}^n decay^i \\times weight \\times \\frac{L( s_i, \\theta_i )}{n} \\]</p> <p>\u200b\u6211\u200b\u7684\u200b\u7406\u89e3\u200b\u662f\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u56fe\u50cf\u200b\u4e0a\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u50cf\u7d20\u200b\uff0c\u200b\u5149\u7ebf\u200b\u90fd\u200b\u6709\u200b\u53ef\u80fd\u200b\u7167\u5c04\u5230\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5bf9\u200b\u8be5\u200b\u50cf\u7d20\u200b\u5230\u200b\u5149\u6e90\u200b(\u200b\u5728\u200b\u6295\u5f71\u200b\u5230\u200b\u56fe\u50cf\u200b\u4e0a\u200b\u7684\u200b\u4f4d\u7f6e\u200b)\u200b\u7684\u200b\u8fde\u7ebf\u200b\u8fdb\u884c\u200b\u91c7\u6837\u200b(\u200b\u5bf9\u5e94\u200b\u516c\u5f0f\u200b\u4e0a\u200b\\(i\\))\uff0c\u200b\u91c7\u6837\u200b\u51fa\u200b\u7684\u200b\u7ed3\u679c\u200b\u8fdb\u884c\u200b\u52a0\u6743\u200b\u5e73\u5747\u200b(\u200b\u5bf9\u5e94\u200b\u516c\u5f0f\u200b\u4e0a\u200b\\(\\sum\\))\u200b\u5e76\u200b\u4f5c\u4e3a\u200b\u8be5\u200b\u50cf\u7d20\u200b\u7684\u200b\u65b0\u200b\u7684\u200b\u989c\u8272\u200b\u503c\u200b\u3002\u200b\u53e6\u5916\u200b\u8fd8\u6709\u200b\u5173\u952e\u200b\u7684\u200b\u540e\u7f6e\u200b\u50cf\u7d20\u200b\u7740\u8272\u5668\u200b\uff0c\u200b\u4f46\u662f\u200b\u5982\u679c\u200b\u53ea\u662f\u200b\u7528\u200b\u90a3\u4e2a\u200b\u7740\u8272\u5668\u200b\u6765\u200b\u5bf9\u200b\u76f8\u673a\u200b\u6e32\u67d3\u200b\u7684\u200b\u7ed3\u679c\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\uff0c\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u660e\u663e\u200b\u7684\u200b\u4eba\u5de5\u200b\u75d5\u8ff9\u200b\uff0c\u200b\u6709\u200b\u8bb8\u591a\u200b\u7684\u200b\u6761\u7eb9\u200b\uff1a</p> <p></p> <p>\u200b\u90a3\u4e48\u200b\u4e66\u4e0a\u200b\u7684\u200b\u6548\u679c\u200b\u662f\u200b\u600e\u4e48\u200b\u505a\u200b\u51fa\u6765\u200b\u7684\u200b\uff1f\u200b\u5176\u5b9e\u200b\u4e66\u4e0a\u200b\u5df2\u7ecf\u200b\u7ed9\u51fa\u200b\u4e86\u200b\u7b54\u6848\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4e00\u7ec4\u200b\u56fe\u6765\u200b\u9610\u8ff0\u200b\uff1a</p> <p></p> <p>\u200b\u56fe\u200ba \u200b\u5c31\u662f\u200b\u7c97\u7cd9\u200b\u7684\u200b\u6548\u679c\u200b\uff0c\u200b\u7ec6\u5fc3\u5730\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u6709\u200b\u8bb8\u591a\u200b\u6761\u7eb9\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6ca1\u6709\u200b\u906e\u6321\u200b\u4e0d\u591f\u200b\u771f\u5b9e\u200b\uff0cb\u3001c\u3001 d\u200b\u5c31\u662f\u200b\u4e3a\u4e86\u200b\u83b7\u5f97\u200b\u597d\u200b\u7684\u200b\u6548\u679c\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u7684\u200b\u6b65\u9aa4\u200b\uff1a</p> <p>b. \u200b\u628a\u200b\u706f\u5149\u200b\u8f90\u5c04\u200b\u6548\u679c\u200b\u6e32\u67d3\u200b\u5230\u200b\u56fe\u50cf\u200b\u4e0a\u200b\uff0c\u200b\u5e76\u200b\u52a0\u4e0a\u200b\u7269\u4f53\u200b\u7684\u200b\u906e\u6321\u200b</p> <p>c. \u200b\u5bf9\u200bb\u200b\u6267\u884c\u200b Volumetric Light Scattering \u200b\u50cf\u7d20\u200b\u7740\u8272\u5668\u200b\uff0c\u200b\u5f97\u5230\u200b\u906e\u6321\u200b\u540e\u200b\u7684\u200b\u6548\u679c\u200b</p> <p>d. \u200b\u6dfb\u52a0\u200b\u4e0a\u200b\u628a\u200b\u771f\u5b9e\u200b\u573a\u666f\u200b\u7684\u200b\u989c\u8272\u200b</p> <p>\u200b\u90a3\u4e48\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u5c31\u200b\u6765\u200b\u4e00\u6b65\u200b\u4e00\u6b65\u200b\u5730\u200b\u5b9e\u73b0\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/#_2","title":"\u753b\u200b\u906e\u6321\u200b\u7269\u4f53","text":"<p>\u200b\u5728\u200b\u5b9e\u9645\u200b\u7684\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\uff0c\u200b\u6211\u200b\u5148\u7528\u200b<code>RenderWithShader</code>\u200b\u6765\u200b\u628a\u200b\u4f1a\u200b\u53d1\u751f\u200b\u906e\u6321\u200b\u7684\u200b\u7269\u4f53\u200b\u753b\u6210\u200b\u9ed1\u8272\u200b\uff0c\u200b\u5176\u4ed6\u200b\u5730\u65b9\u200b\u4e3a\u200b\u767d\u8272\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u200b\u9700\u8981\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u9762\u7247\u200b\u8fdb\u884c\u200b\u6e32\u67d3\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5bf9\u4e8e\u200b\u590d\u6742\u200b\u7684\u200b\u573a\u666f\u200b\uff0c\u200b\u4f1a\u200b\u5e26\u6765\u200b\u4e00\u5b9a\u200b\u7684\u200b\u6027\u80fd\u200b\u6d88\u8017\u200b\u3002\u200b\u573a\u666f\u200b\u4e2d\u200b\u7684\u200b\u7269\u4f53\u200b\u6709\u200b\u4e0d\u200b\u900f\u660e\u200b\u548c\u200b\u900f\u660e\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u4e0d\u200b\u900f\u660e\u200b\u7684\u200b\u7269\u4f53\u200b\u4ea7\u751f\u200b\u5b8c\u5168\u200b\u7684\u200b\u5149\u7ebf\u200b\u906e\u6321\u200b\uff0c\u200b\u800c\u200b\u900f\u660e\u200b\u7684\u200b\u7269\u4f53\u200b\u5e94\u8be5\u200b\u4ea7\u751f\u200b\u90e8\u5206\u200b\u7684\u200b\u906e\u6321\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u5c31\u200b\u9700\u8981\u200b\u9488\u5bf9\u200b\u4e0d\u540c\u200bRenderType\u200b\u7684\u200b\u7269\u4f53\u200b\u5199\u200b\u4e0d\u540c\u200b\u7684\u200bShader\uff0cRenderType\u200b\u662f\u200bSubShader\u200b\u7684\u200bTag\uff0c\u200b\u4e0d\u200b\u6e05\u695a\u200b\u7684\u8bdd\u200b\u53ef\u4ee5\u200b\u770b\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u5199\u200b\u597d\u200b\u4e4b\u540e\u200b\u8c03\u7528\u200b\uff1a</p> <p><pre><code>camera.RenderWithShader(objectOcclusionShader, \"RenderType\");\n</code></pre> <code>RenderWithShader</code>\u200b\u7684\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u5c31\u662f\u200b\u8981\u6c42\u200b\u6839\u636e\u200bRenderType\u200b\u6765\u200b\u66ff\u6362\u200bShader\uff0c\u200b\u7b80\u5355\u200b\u6765\u8bf4\u200b\uff0c\u200b\u540c\u4e00\u4e2a\u200b\u7269\u4f53\u200b\u7684\u200b\u66ff\u6362\u200b\u7684\u200bShader\u200b\u7684\u200bRenderType\u200b\u8981\u200b\u8ddf\u200b\u66ff\u6362\u200b\u524d\u200b\u4e00\u81f4\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u4e0d\u540c\u200b\u7684\u200bRenderType\u200b\u7684\u200b\u7269\u4f53\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u7684\u200bShader\uff1a</p> <pre><code>Shader \"Custom/ObjectOcclusion\" \n{\n    Properties \n    {\n        _MainTex (\"Base (RGB)\", 2D) = \"white\" {}\n    }\n    SubShader \n    {\n        Tags \n        {\n            \"Queue\" = \"Geometry\"\n            \"RenderType\" = \"Opaque\"\n        }\n        LOD 200\n        Pass\n        {\n            Lighting Off\n            ZTest Always Cull Off ZWrite Off\n            Fog { Mode off }\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n\n            uniform sampler2D _MainTex;\n\n            v2f_img vert(appdata_img i)\n            {\n                v2f_img o;\n                o.pos = mul (UNITY_MATRIX_MVP, i.vertex);\n                return o;\n            }\n\n            half4 frag(v2f_img i): COLOR\n            {\n                return half4(0, 0, 0, 1);\n            }\n            ENDCG\n        }\n\n    }\n        SubShader \n    {\n        Tags \n        {\n            \"Queue\" = \"Geometry\"\n            \"RenderType\" = \"Transparent\"\n        }\n        LOD 200\n        Pass\n        {\n            Lighting Off\n            ZTest Always Cull Off ZWrite Off\n            Fog { Mode off }\n            Blend SrcAlpha OneMinusSrcAlpha     // blend for transparent objects\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n\n            uniform sampler2D _MainTex;\n\n            v2f_img vert(appdata_img i)\n            {\n                v2f_img o;\n                o.pos = mul (UNITY_MATRIX_MVP, i.vertex);\n                o.uv = MultiplyUV( UNITY_MATRIX_TEXTURE0, i.texcoord );\n                return o;\n            }\n\n            half4 frag(v2f_img i): COLOR\n            {\n                half3 output = (1, 1, 1);\n                half4 color = tex2D(_MainTex, i.uv);\n                half alpha = color.a;\n                return half4(output *(1-alpha), alpha);\n            }\n            ENDCG\n        }\n\n    }\n\n    FallBack \"Diffuse\"\n}\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\u4e0d\u200b\u900f\u660e\u200b\u548c\u200b\u900f\u660e\u200b\u7269\u4f53\u200b\u7684\u200bShader\u200b\u95f4\u200b\u7684\u200b\u5dee\u522b\u200b\uff1a\u200b\u4e0d\u200b\u900f\u660e\u200b\u7684\u200b\u7269\u4f53\u200b\u76f4\u63a5\u200b\u753b\u6210\u200b\u9ed1\u8272\u200b\uff1b\u200b\u4e0d\u200b\u900f\u660e\u200b\u7269\u4f53\u200b\u9700\u8981\u200b\u6267\u884c\u200bblending\uff0c\u200b\u83b7\u53d6\u200b\u7269\u4f53\u200b\u7eb9\u7406\u200b\u4e0a\u200b\u7684\u200balpha\u200b\u901a\u9053\u200b\uff0c\u200b\u5e76\u200b\u57fa\u4e8e\u200b\u8fd9\u4e2a\u200balpha\u200b\u8fdb\u884c\u200bblending\u3002\u200b\u4e0a\u9762\u200b\u4ee3\u7801\u200b\u53ea\u662f\u200b\u5217\u4e3e\u200b\u4e86\u200bOpaque\u200b\u548c\u200bTransparent\uff0c\u200b\u53e6\u5916\u200b\u8fd8\u6709\u200bTreeOpaque (Shader\u200b\u8ddf\u200bOpaque\u200b\u4e00\u6837\u200b\uff0c\u200b\u53ea\u662f\u200b\u6539\u53d8\u200bRenderType) \uff0cTreeTransparentCutout (\u200b\u540c\u200bTransparent) \u200b\u7b49\u200b\u3002\u200b\u7531\u4e8e\u200b\u6307\u5b9a\u200b\u4e86\u200bRenderType\uff0c\u200b\u6240\u4ee5\u200b\u4e3a\u4e86\u200b\u5168\u9762\u200b\uff0c\u200b\u9700\u8981\u200b\u5c3d\u53ef\u80fd\u200b\u7a77\u5c3d\u200b\u573a\u666f\u200b\u4e2d\u200b\u7684\u200b\u4f1a\u200b\u53d1\u751f\u200b\u906e\u6321\u200b\u7684\u200b\u7269\u4f53\u200b\uff0c\u200b\u6211\u200b\u8fd9\u91cc\u200b\u5c31\u200b\u53ea\u6709\u200b\u524d\u9762\u200b\u63d0\u5230\u200b\u7684\u200b\u56db\u79cd\u200b\u3002\u200b\u7ed3\u679c\u200b\u5927\u81f4\u200b\u5982\u4e0b\u200b\uff1a</p> <p></p>","tags":["dev"]},{"location":"unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/#_3","title":"\u7ed3\u5408\u200b\u7269\u4f53\u200b\u906e\u6321\u200b\u753b\u200b\u5149\u6e90\u200b\u8f90\u5c04","text":"<p>\u200b\u753b\u200b\u5149\u6e90\u200b\u7684\u200b\u8f90\u5c04\u200b\u4e0d\u96be\u200b\uff0c\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u5c4f\u5e55\u200b\u7684\u200b\u5927\u5c0f\u200b\u505a\u200b\u4e00\u4e9b\u200b\u5904\u7406\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u5149\u6e90\u200b\u7684\u200b\u8f90\u5c04\u72b6\u200b\u662f\u200b\u5706\u5f62\u200b\u7684\u200b\uff1a</p> <pre><code>Shader \"Custom/LightRadiate\" \n{\n    Properties \n    {\n        _MainTex (\"Base (RGB)\", RECT) = \"white\" {}\n        _LightPos (\"Light Pos In Screen Space(XY)\", Vector) = (0, 0, 0, 1)\n        _LightRadius (\"Light radiation radius (Pixel)\", Float) = 50\n    }\n    SubShader \n    {\n        Tags { \"RenderType\"=\"Opaque\" }\n        LOD 200\n        Pass\n        {\n            ZTest Always Cull Off ZWrite Off\n            Fog { Mode off }\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n\n            uniform sampler2D _MainTex;\n            float4 _LightPos;\n            float _LightRadius;\n\n            v2f_img vert(appdata_img i)\n            {\n                v2f_img o;\n                o.pos = mul (UNITY_MATRIX_MVP, i.vertex);\n                o.uv = MultiplyUV( UNITY_MATRIX_TEXTURE0, i.texcoord );\n                return o;\n            }\n\n            half4 frag(v2f_img i): COLOR\n            {\n                half2 deltaTexCoord = (i.uv - _LightPos.xy) * half2(_ScreenParams.x, _ScreenParams.y);\n                float dis = dot(deltaTexCoord, deltaTexCoord);\n                const float maxDis = _LightRadius * _LightRadius;\n                dis = saturate((maxDis-dis) / maxDis * 0.5);\n                return half4(dis, dis, dis, 1) * half4(tex2D(_MainTex, i.uv).rgb, 1);               \n            }\n\n            ENDCG\n        }\n    } \n    FallBack \"Diffuse\"\n}\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200bShader\u200b\u9700\u8981\u200b\u8f93\u5165\u200b\u5149\u6e90\u200b\u5728\u200b\u5c4f\u5e55\u200b\u4e0a\u200b\u7684\u200b\u4f4d\u7f6e\u200b(\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>camera.WorldToViewportPoint</code>\u200b\u6765\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u5f97\u5230\u200b\u7684\u200b\u662f\u200buv\u200b\u5750\u6807\u200b)\uff0c\u200b\u7136\u540e\u200b\u6839\u636e\u200b\u6307\u5b9a\u200b\u7684\u200b\u534a\u5f84\u200b\u753b\u200b\u4e00\u4e2a\u200b\u4eae\u5ea6\u200b\u5f80\u5916\u200b\u8870\u51cf\u200b\u7684\u200b\u5706\u200b\uff0c\u200b\u5e76\u200b\u628a\u200b\u7ed3\u679c\u200b\u8ddf\u200b\u524d\u9762\u200b\u5f97\u5230\u200b\u7684\u200b\u7269\u4f53\u200b\u906e\u6321\u200b\u56fe\u50cf\u200b(\u200b\u653e\u5728\u200b<code>_MainTex</code>\u200b\u91cc\u200b)\u200b\u7ed3\u5408\u200b\uff0c\u200b\u7ed3\u679c\u200b\u5927\u81f4\u200b\u4e3a\u200b\uff1a</p> <p></p>","tags":["dev"]},{"location":"unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/#light-scattering","title":"Light Scattering\u200b\u5904\u7406\u200b\uff0c\u200b\u5e76\u200b\u7ed3\u5408\u200b\u771f\u5b9e\u200b\u989c\u8272","text":"<p>\u200b\u8fd9\u91cc\u200b\u5c31\u8981\u200b\u7528\u5230\u200b\u4e66\u4e0a\u200b\u63d0\u4f9b\u200b\u7684\u200bPixel Shader\uff0c\u200b\u6211\u200b\u7684\u200b\u7248\u672c\u200b\uff1a</p> <pre><code>Shader \"Custom/LightScattering\" \n{\n    Properties \n    {\n        _MainTex (\"Base (RGB)\", 2D) = \"white\" {}\n        _LightRadTex(\"Light Radiate Tex (RGB)\", 2D) = \"white\" {}\n        _LightPos (\"Light Pos In Screen Space(XY)\", Vector) = (0, 0, 0, 1)\n        _Params(\"Density Weight Decay Exposure\", Vector) = (1.0, 1.0, 1.0, 1.0)\n    }\n    SubShader \n    {\n        LOD 200\n        Pass\n        {\n            ZTest Always Cull Off ZWrite Off\n            Fog { Mode off }    \n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #pragma target 3.0\n            #include \"UnityCG.cginc\"\n\n            uniform sampler2D _MainTex;\n            uniform sampler2D _LightRadTex;\n            uniform float4 _LightPos;\n            uniform float4 _Params;\n\n            v2f_img vert(appdata_img i)\n            {\n                v2f_img o;\n                o.pos = mul (UNITY_MATRIX_MVP, i.vertex);\n                o.uv = MultiplyUV( UNITY_MATRIX_TEXTURE0, i.texcoord );\n                return o;\n            }\n\n            half4 frag(v2f_img i): COLOR\n            {   \n                // Calculate vector from pixel to light source in screen space\n                float2 deltaTexCoord = (i.uv - _LightPos.xy);\n\n                // Divide by number of samples and scale by control factor, here I use 32 samples\n                deltaTexCoord *= 1.0f / 32 * _Params.x; //density;\n\n                // Store color.\n                half3 color = tex2D(_MainTex, i.uv).rgb;\n\n                // Store initial sample.\n                half3 light = tex2D(_LightRadTex, i.uv).rgb;\n\n                // Set up illumination decay factor.\n                half illuminationDecay = 1.0f;\n\n                for(int j = 0; j &lt; 31; ++j)\n                {\n                    // Step sample location along ray.\n                    i.uv -= deltaTexCoord;\n\n                    // Retrieve sample at new location.\n                    half3 sample = tex2D(_LightRadTex, i.uv).rgb;\n\n                    // Apply sample attenuation scale/decay factors.\n                    sample *= illuminationDecay * 0.03125 * _Params.y ; //weight;\n\n                    // Accumulate combined light.\n                    light += sample;\n\n                    // Update exponential decay factor.\n                    illuminationDecay *= _Params.z;             //decay;\n                }\n\n                // Output final color with a further scale control factor.\n                return half4(color+(light * _Params.w), 1); // exposure\n            }\n\n            ENDCG       \n        }\n\n    } \n    FallBack \"Diffuse\"\n}\n</code></pre> <p>\u200b\u5927\u4f53\u4e0a\u200b\u8ddf\u200b\u4e66\u4e0a\u200b\u7684\u200b\u4e00\u81f4\u200b\uff0c\u200b\u53ea\u662f\u200b\u6211\u200b\u7684\u200b\u53c2\u6570\u200b\u9700\u8981\u200b\u5728\u200b\u7a0b\u5e8f\u200b\u4e2d\u4f20\u200b\u8fdb\u6765\u200b\uff0c\u200b\u5e76\u4e14\u200b\u7ed3\u5408\u200b\u4e86\u200b\u771f\u5b9e\u200b\u7684\u200b\u989c\u8272\u200b\u56fe\u200b\u548c\u200bLight Scattering\u200b\u56fe\u200b\uff0c\u200b\u7ed3\u679c\u200b\uff1a</p> <p></p>","tags":["dev"]},{"location":"unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/#_4","title":"\u5b8c\u6574\u200b\u4ee3\u7801","text":"<p>\u200b\u4ee3\u7801\u200b\u5728\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u628a\u200b<code>cs</code>\u200b\u811a\u672c\u200b\u6dfb\u52a0\u200b\u5230\u200b\u76f8\u673a\u200b\u4e0a\u200b\u3002</p> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev"]},{"location":"unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/","title":"Unity\u200b\u753b\u200b\u6df1\u5ea6\u56fe\u200b(Depth Map)\u200b\u548c\u200b\u8fb9\u7f18\u200b\u68c0\u6d4b\u200b(Edge Detection)","text":"<p>\u200b\u521a\u200b\u63a5\u89e6\u200bUnity\u200b\u6ca1\u591a\u4e45\u200b\uff0c\u200b\u5bf9\u200bUnity\u200b\u7684\u200bShaderLab\u200b\u4e00\u76f4\u200b\u5f88\u611f\u5174\u8da3\u200b\uff0c\u200b\u611f\u89c9\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u5feb\u901f\u200b\u5730\u200b\u5b9e\u73b0\u200b\u5404\u79cd\u5404\u6837\u200b\u7684\u200b\u663e\u793a\u200b\u6548\u679c\u200b\uff0c\u200b\u5f88\u200b\u6709\u610f\u601d\u200b\u3002\u200b\u561b\u200b\uff0c\u200b\u4f5c\u4e3a\u200b\u4e00\u4e2a\u200b\u95e8\u200b\u90fd\u200b\u8fd8\u200b\u6ca1\u5165\u200b\u7684\u200b\u4eba\u200b\uff0c\u200b\u6211\u200b\u5c31\u200b\u6765\u200b\u641e\u200b\u4e00\u200b\u641e\u200b\u6df1\u5ea6\u56fe\u200b\u548c\u200b\u8fb9\u7f18\u200b\u68c0\u6d4b\u200b\u5427\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#_1","title":"\u5c0f\u200b\u5730\u56fe\u200b\u8bbe\u7f6e","text":"<p>\u200b\u56e0\u4e3a\u200b\u6211\u200b\u53ea\u662f\u200b\u505a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5c0f\u200b\u96cf\u5f62\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u200b\u4e0d\u200b\u6253\u7b97\u200b\u8be6\u7ec6\u200b\u5730\u200b\u8bb2\u200b\u5982\u4f55\u200b\u53bb\u200b\u5728\u200b\u573a\u666f\u200b\u4e0a\u753b\u200b\u5c0f\u200b\u5730\u56fe\u200b\uff0c\u200b\u5927\u81f4\u200b\u4e0a\u200b\u8bf4\u200b\u6211\u200b\u505a\u200b\u4e86\u200b\u4ee5\u4e0b\u200b\u4e00\u4e9b\u200b\u4e8b\u60c5\u200b\uff1a</p> <ol> <li>\u200b\u83b7\u53d6\u200b\u573a\u666f\u200b\u7684\u200b bounding box\uff0c\u200b\u8fd9\u4e2a\u200b\u5728\u200b\u8bbe\u7f6e\u200b\u76f8\u673a\u200b\u7684\u200b\u53c2\u6570\u200b\u548c\u200b\u4f4d\u7f6e\u200b\u65f6\u200b\u6709\u7528\u200b</li> <li>\u200b\u628a\u200b\u5c0f\u200b\u5730\u56fe\u200b\u76f8\u673a\u200b\u914d\u7f6e\u200b\u6210\u200b\u6b63\u4ea4\u6295\u5f71\u200b\uff0c\u200b\u6839\u636e\u200b bounding box \u200b\u8bbe\u7f6e\u200b\u76f8\u673a\u200b\u7684\u200b\u8fd1\u200b\u5e73\u9762\u200b\u548c\u200b\u8fdc\u200b\u5e73\u9762\u200b</li> <li>\u200b\u4e3a\u200b\u8be5\u200b\u76f8\u673a\u200b\u589e\u52a0\u200b\u4e00\u4e2a\u200b\u4eba\u7269\u200b\u76ee\u6807\u200b\uff0c\u200b\u76ee\u6807\u200b\u4f1a\u200b\u663e\u793a\u200b\u5728\u200b\u5730\u56fe\u200b\u7684\u200b\u4e2d\u5fc3\u200b</li> <li>\u200b\u6bcf\u6b21\u200b\u66f4\u65b0\u200b\u76f8\u673a\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u6839\u636e\u200b\u76ee\u6807\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u8fd8\u6709\u200b\u573a\u666f\u200b\u7684\u200b\u6700\u5927\u200b y \u200b\u503c\u200b</li> </ol> <p>\u200b\u5177\u4f53\u200b\u7684\u200b\u914d\u7f6e\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u540e\u9762\u200b\u7ed9\u51fa\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#_2","title":"\u83b7\u53d6\u200b\u6df1\u5ea6\u56fe","text":"","tags":["dev"]},{"location":"unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#depthtexturemode","title":"depthTextureMode \u200b\u6765\u200b\u83b7\u53d6\u200b\u6df1\u5ea6\u56fe","text":"<p>\u200b\u76f8\u673a\u200b\u81ea\u5df1\u200b\u53ef\u4ee5\u200b\u4fdd\u5b58\u200bDepthBuffer\u200b\u6216\u8005\u200b\u4e00\u4e2a\u200bDepthNormalBuffer(\u200b\u53ef\u7528\u200b\u6765\u200b\u505a\u200b\u8fb9\u7f18\u200b\u68c0\u6d4b\u200b)\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u8bbe\u7f6e\u200b</p> <pre><code>Camera.depthTextureMode = DepthTextureMode.DepthNormals;\n</code></pre> <p>\u200b\u7136\u540e\u200b\u5728\u200bShader\u200b\u91cc\u9762\u200b\u5f15\u7528\u200b</p> <pre><code>sampler2D _CameraDepthNormalsTexture;\n</code></pre> <p>\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\u505a\u6cd5\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u6211\u200b\u540e\u9762\u200b\u7ed9\u51fa\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002\u200b\u5173\u4e8e\u200b\u5728\u200bZ-Buffer\u200b\u91cc\u9762\u200b\u4fdd\u5b58\u200b\u7684\u200b\u6df1\u5ea6\u200b\u503c\u200b\u8ddf\u200b\u771f\u5b9e\u4e16\u754c\u200b\u7684\u200b\u6df1\u5ea6\u200b\u7684\u200b\u5173\u7cfb\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u8fd9\u200b\u4e24\u7bc7\u200b\u6587\u7ae0\u200b\uff1a Learning to Love your Z-buffer,Linearize depth\u3002\u200b\u53e6\u5916\u200b Unity \u200b\u4e5f\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u51fd\u6570\u200b\u6765\u200b\u8ba1\u7b97\u200b\u6df1\u5ea6\u200b: <code>Linear01Depth</code>, <code>LinearEyeDepth</code> \u200b\u7b49\u200b\u3002</p> <p>\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u6211\u200b\u8fd9\u91cc\u200b\u8ba8\u8bba\u200b\u7684\u200b\u91cd\u70b9\u200b\uff0c\u200b\u6211\u200b\u60f3\u200b\u8bf4\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u672c\u6765\u200b\u6211\u200b\u7684\u200b\u76f8\u673a\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u6b63\u4ea4\u6295\u5f71\u200b\uff0c\u200b\u6df1\u5ea6\u200b\u5e94\u8be5\u200b\u662f\u200b\u7ebf\u6027\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u6211\u200b\u6d4b\u8bd5\u200b\u51fa\u6765\u200b\u5374\u200b\u4e0d\u662f\u200b\u7ebf\u6027\u200b\u3002\u200b\u7136\u540e\u200b\u6211\u7528\u200b\u4e0a\u9762\u200b\u94fe\u63a5\u200b\u4ecb\u7ecd\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6765\u200b\u8ba1\u7b97\u200b\u771f\u5b9e\u4e16\u754c\u200b\u7684\u200b\u6df1\u5ea6\u200b\uff0c\u200b\u4e5f\u200b\u4e00\u76f4\u200b\u90fd\u200b\u4e0d\u200b\u6b63\u786e\u200b\uff0c\u200b\u4ee5\u81f3\u4e8e\u200b\u4e00\u76f4\u200b\u8ba1\u7b97\u200b\u4e0d\u200b\u51fa\u200b\u771f\u5b9e\u200b\u7684\u200b\u7ebf\u6027\u200b\u6df1\u5ea6\u200b\uff0c\u200b\u4e0d\u200b\u77e5\u9053\u200b\u662f\u200bUnity\u200b\u7684\u200bZ_Buffer\u200b\u7684\u200b\u95ee\u9898\u200b\u8fd8\u662f\u200b\u4ec0\u4e48\u200b\uff0c\u200b\u90a3\u4f4d\u200b\u670b\u53cb\u200b\u77e5\u9053\u200b\u7684\u200b\u8bf7\u6559\u200b\u6559\u200b\u6211\u200b\u3002\u200b\u5f53\u7136\u200b\uff0c\u200b\u5982\u679c\u200b\u4e0d\u200b\u9700\u8981\u200b\u771f\u5b9e\u200b\u7684\u200b\u6df1\u5ea6\u200b\u503c\u200b\uff0c\u200b\u5355\u5355\u662f\u200b\u6bd4\u8f83\u200b\u6df1\u5ea6\u200b\u7684\u200b\u5927\u5c0f\u200b\u4e4b\u7c7b\u200b\u7684\u200b\uff0c\u200b\u7528\u200b\u4e0a\u9762\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5c31\u200b\u8db3\u591f\u200b\u4e86\u200b\uff0c\u200b\u800c\u4e14\u200b\u5f88\u200b\u7b80\u5355\u200b\u3002\u200b\u4f46\u662f\u200b\u5bf9\u4e8e\u200b\u6211\u200b\u8fd9\u91cc\u200b\u6765\u8bf4\u200b\uff0c\u200b\u6211\u200b\u60f3\u8981\u200b\u628a\u200b\u771f\u5b9e\u200b\u6df1\u5ea6\u200b\u6620\u5c04\u200b\u4e3a\u200b\u989c\u8272\u200b\u503c\u200b\uff0c\u200b\u9700\u8981\u200b\u83b7\u5f97\u200b\u771f\u5b9e\u200b\u7684\u200b\u7ebf\u6027\u200b\u7684\u200b\u6df1\u5ea6\u200b\u503c\u200b\uff08\u200b\u867d\u7136\u200b\u4e5f\u200b\u662f\u200b[0, 1]\uff09\uff0c\u200b\u6211\u200b\u53ea\u597d\u200b\u7528\u200b\u53e6\u5916\u200b\u4e00\u79cd\u200b\u7528\u200b RenderWithShader \u200b\u65b9\u6cd5\u200b\u4e86\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#renderwithshader","title":"RenderWithShader \u200b\u6765\u200b\u83b7\u53d6\u200b\u6df1\u5ea6\u56fe","text":"<p>\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u7528\u200bUnity Reference\u200b\u91cc\u9762\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b\uff1aRendering with Replaced Shaders\u3002\u200b\u9700\u8981\u200b\u7406\u89e3\u200b\u7684\u200b\u662f\u200b\uff0c<code>RenderWithShader</code>\u200b\u4f1a\u200b\u628a\u200b\u573a\u666f\u200b\u4e2d\u200b\u7684\u200b\u76f8\u5e94\u200b\u7684\u200bMesh\u200b\u753b\u200b\u4e00\u904d\u200b\u3002</p> <p>\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b Shader :</p> <pre><code>Shader \"Custom/DepthByReplaceShader\" \n{\nSubShader \n{\n    Tags { \"RenderType\"=\"Opaque\" }\n    Pass {\n        Fog { Mode Off }\n        CGPROGRAM\n        #pragma vertex vert\n        #pragma fragment frag\n        #include \"UnityCG.cginc\"\n\n        struct v2f {\n            float4 pos : SV_POSITION;\n            float2 depth : TEXCOORD0;\n        };\n\n        v2f vert (appdata_base v) {\n            v2f o;\n            o.pos = mul (UNITY_MATRIX_MVP, v.vertex);\n            UNITY_TRANSFER_DEPTH(o.depth);\n            return o;\n        }\n\n        float4 frag(v2f i) : COLOR {\n            //UNITY_OUTPUT_DEPTH(i.depth);\n            float d = i.depth.x/i.depth.y;\n            return float4(d, d, d, 1);\n        }\n        ENDCG\n    }\n}\n}\n</code></pre> <p>\u200b\u4e3a\u200b\u4f60\u200b\u7684\u200b\u5c0f\u200b\u5730\u56fe\u200b\u76f8\u673a\u200b(\u200b\u6ca1\u6709\u200b\u7684\u8bdd\u200b\u521b\u5efa\u200b\u4e4b\u200b)\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u811a\u672c\u200b\uff0c\u200b\u628a\u200b\u76f8\u673a\u200b\u914d\u7f6e\u200b\u6210\u200b\u6b63\u4ea4\u6295\u5f71\u200b\u7b49\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5728\u200b <code>Update()</code> \u200b\u91cc\u9762\u200b\u4f7f\u7528\u200b\u8fd9\u4e2a\u200b Shader \u200b\u6765\u200b\u6e32\u67d3\u200b\u573a\u666f\u200b\uff1a</p> <pre><code>camera.targetTexture = depthTexture;\ncamera.RenderWithShader(depthShader, \"\");\n</code></pre> <p>\u200b\u6e32\u67d3\u200b\u7684\u200b\u7ed3\u679c\u200b\u5c31\u200b\u4f1a\u200b\u4fdd\u5b58\u200b\u5728\u200b <code>depthTexture</code>\u200b\u91cc\u9762\u200b\uff0c\u200b\u5f88\u200b\u7b80\u5355\u200b\u5427\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#_3","title":"\u628a\u200b\u6df1\u5ea6\u200b\u6620\u5c04\u200b\u6210\u200b\u989c\u8272","text":"<p>\u200b\u8981\u200b\u5b8c\u6210\u200b\u8fd9\u4e2a\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u4e00\u5f20\u200b\u989c\u8272\u200b\u56fe\u200b\uff0c\u200b\u8fd9\u200b\u5f20\u56fe\u200b\u53ef\u4ee5\u200b\u7528\u200b Matlab \u200b\u5f88\u200b\u7b80\u5355\u200b\u5730\u200b\u751f\u6210\u200b\uff0c\u200b\u4f8b\u5982\u200b\u6211\u7528\u200b\u7684\u200b\u662f\u200b Matlab \u200b\u91cc\u9762\u200b\u7684\u200b jet \u200b\u56fe\u200b\uff1a</p> <p></p> <p>\u200b\u628a\u200b\u8fd9\u200b\u5f20\u56fe\u200b\u653e\u5230\u200b\u9879\u76ee\u200b\u76ee\u5f55\u200b <code>Assets\\Resources</code> \u200b\u91cc\u9762\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7a0b\u5e8f\u200b\u4e2d\u200b\u8bfb\u53d6\u200b\uff1a</p> <pre><code>colorMap = Resources.Load&lt;Texture2D&gt;(\"colormap\");\n</code></pre> <p>\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u8fd9\u5f20\u200b\u56fe\u7247\u200b\u7684\u200b <code>Wrap Mode</code> \u200b\u5e94\u8be5\u200b\u662f\u200b <code>Clamp</code>\uff0c\u200b\u9632\u6b62\u200b\u5728\u200b\u4e24\u200b\u8fb9\u7f18\u200b\u7684\u200b\u989c\u8272\u200b\u503c\u200b\u4e4b\u95f4\u200b\u8fdb\u884c\u200b\u63d2\u503c\u200b\u3002</p> <p>\u200b\u4e4b\u540e\u200b\u5c31\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b <code>OnRenderImage</code> \u200b\u548c\u200b <code>Graphics.Blit</code> \u200b\u51fd\u6570\u200b\uff0c\u200b\u51fd\u6570\u200b\u7684\u200b\u539f\u578b\u200b\u4e3a\u200b\uff1a</p> <pre><code>void OnRenderImage(RenderTexture src, RenderTexture dst);\nstatic void Blit(Texture source, RenderTexture dest, Material mat, int pass = -1);\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b src \u200b\u662f\u200b\u76f8\u673a\u200b\u6e32\u67d3\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0cdst \u200b\u662f\u200b\u5904\u7406\u200b\u540e\u200b\u4f20\u56de\u200b\u7ed9\u200b\u76f8\u673a\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u901a\u5e38\u200b\u662f\u200b\u7528\u6765\u200b\u5728\u200b\u76f8\u673a\u200b\u6e32\u67d3\u200b\u5b8c\u6210\u200b\u540e\u200b\u505a\u200b\u56fe\u7247\u200b\u7684\u200b\u4e00\u4e9b\u200b\u6548\u679c\u200b\uff0c\u200b\u4f8b\u5982\u200b\u6211\u4eec\u200b\u8fd9\u91cc\u200b\u7684\u200b\u5bf9\u200b\u6df1\u5ea6\u200b\u505a\u200b\u989c\u8272\u200b\u6620\u5c04\u200b\uff0c\u200b\u8fd8\u6709\u200b\u8fb9\u7f18\u200b\u68c0\u6d4b\u200b\u3002\u200b\u505a\u6cd5\u200b\u5c31\u662f\u200b\u5728\u200b<code>OnRenderImage</code>\u200b\u4e2d\u200b\u8c03\u7528\u200b<code>Graphics.Blit</code>\uff0c\u200b\u4f20\u5165\u200b\u7279\u5b9a\u200b\u7684\u200b<code>Material</code>\uff1a</p> <pre><code>depthEdgeMaterial.SetTexture(\"_DepthTex\", src);\nGraphics.Blit(src, dst, depthEdgeMaterial);\nreturn;\n</code></pre> <p>\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b\uff0c<code>Graphics.Blit</code>\u200b\u5b9e\u9645\u4e0a\u200b\u505a\u200b\u4e86\u200b\u8fd9\u6837\u200b\u4e00\u4ef6\u200b\u4e8b\u60c5\u200b\uff1a\u200b\u5728\u200b\u76f8\u673a\u200b\u524d\u9762\u200b\u753b\u200b\u4e00\u4e2a\u200b\u8ddf\u200b\u5c4f\u5e55\u200b\u5927\u5c0f\u200b\u4e00\u6837\u200b\u7684\u200b\u5e73\u9762\u200b\uff0c\u200b\u628a\u200b<code>src</code>\u200b\u4f5c\u4e3a\u200b\u8fd9\u4e2a\u200b\u5e73\u9762\u200b\u7684\u200b<code>_MainTex</code>\u200b\u4f20\u8fdb\u200b<code>Shader</code>\u200b\u4e2d\u200b\uff0c\u200b\u7136\u540e\u200b\u628a\u200b\u7ed3\u679c\u200b\u653e\u5230\u200b<code>dst</code>\u200b\u91cc\u9762\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u628a\u200b\u5b9e\u9645\u200b\u573a\u666f\u200b\u4e2d\u200b\u7684\u200bMesh\u200b\u91cd\u65b0\u200b\u753b\u200b\u4e00\u904d\u200b\u3002</p> <p>\u200b\u5bf9\u200b\u989c\u8272\u200b\u6620\u5c04\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u628a\u200b\u6df1\u5ea6\u200b [0, 1] \u200b\u770b\u6210\u200b\u56fe\u7247\u200b\u7684\u200b uv\uff0c\u200b\u56e0\u4e3a\u200b\u6211\u200b\u60f3\u200b\u8ddd\u79bb\u200b\u76f8\u673a\u200b\u8fd1\u200b\u7684\u200b\u4e3a\u200b\u7ea2\u8272\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u200b\u5bf9\u200b\u6df1\u5ea6\u200b\u53d6\u200b\u4e86\u200b\u53cd\u200b\uff1a</p> <pre><code>half4 color = tex2D(_ColorMap, float2(saturate(1-depth), 0.5));\n</code></pre>","tags":["dev"]},{"location":"unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#_4","title":"\u8fb9\u7f18\u200b\u68c0\u6d4b","text":"<p>\u200b\u8fb9\u7f18\u200b\u68c0\u6d4b\u200b\u9700\u8981\u200b\u7528\u5230\u200b\u4e86\u200b\u76f8\u673a\u200b\u81ea\u5df1\u200b\u7684\u200b <code>_CameraDepthNormalsTexture</code>\uff0c\u200b\u4e3b\u8981\u200b\u662f\u200b\u7528\u200b Normal \u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u6df1\u5ea6\u200b\u8fd8\u662f\u200b\u7528\u200b\u4e4b\u524d\u200b\u8ba1\u7b97\u51fa\u6765\u200b\u7684\u200b\u3002\u200b\u5728\u200b <code>_CameraDepthNormalsTexture</code> \u200b\u7684\u200b\u6bcf\u4e2a\u200b\u50cf\u7d20\u200b (x, y, z, w) \u200b\u4e2d\u200b\uff0c(x, y) \u200b\u662f\u200b\u6cd5\u5411\u200b\uff0c(z, w)\u200b\u662f\u200b\u6df1\u5ea6\u200b\uff0c\u200b\u6cd5\u5411\u200b\u662f\u200b\u7528\u200b\u4e86\u200b\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\u6765\u200b\u5b58\u653e\u200b\u7684\u200b\uff0c\u200b\u6709\u200b\u5174\u8da3\u200b\u53ef\u4ee5\u200b\u81ea\u5df1\u200b\u641c\u7d22\u200b\u3002</p> <p>\u200b\u4ee3\u7801\u200b\u662f\u200b\u53c2\u8003\u200b\u4e86\u200b Unity \u200b\u81ea\u5e26\u200b\u7684\u200b Image Effect \u200b\u91cc\u9762\u200b\u7684\u200b\u8fb9\u7f18\u200b\u68c0\u6d4b\u200b\uff0c\u200b\u9700\u8981\u200b\u505a\u200b\u7684\u200b\u4e8b\u60c5\u200b\u5c31\u662f\u200b\uff0c\u200b\u6bd4\u8f83\u200b\u5f53\u524d\u200b\u50cf\u7d20\u200b\u7684\u200b\u6cd5\u5411\u200b\u6df1\u5ea6\u200b\u548c\u200b\u90bb\u8fd1\u200b\u50cf\u7d20\u200b\u7684\u200b\u5dee\u522b\u200b\uff0c\u200b\u8db3\u591f\u200b\u5927\u200b\u6211\u4eec\u200b\u5c31\u200b\u8ba4\u4e3a\u200b\u5b58\u5728\u200b\u8fb9\u7f18\u200b\uff1a</p> <pre><code>inline half CheckSame (half2 centerNormal, half2 sampleNormal, float centerDepth, float sampleDepth)\n{\n    // difference in normals\n    // do not bother decoding normals - there's no need here\n    half2 diff = abs(centerNormal - sampleNormal);\n    half isSameNormal = (diff.x + diff.y) &lt; 0.5;\n\n    // difference in depth\n    float zdiff = abs(centerDepth-sampleDepth);\n    // scale the required threshold by the distance\n    half isSameDepth = (zdiff &lt; 0.09 * centerDepth) || (centerDepth &lt; 0.1);\n\n    // return:\n    // 1 - if normals and depth are similar enough\n    // 0 - otherwise\n    return isSameNormal * isSameDepth;\n}\n</code></pre> <p>\u200b\u5b8c\u6574\u200b\u7684\u200b Shader \u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>Shader \"Custom/DepthColorEdge\" {\n\nProperties \n{\n    _DepthTex (\"Depth Tex\", 2D) = \"white\" {}\n    _ColorMap (\"Color Map\", 2D) = \"white\" {}\n}\n    SubShader \n    {\n        Tags { \"RenderType\"=\"Opaque\" }\n        LOD 200\n        Pass\n        {\n            ZTest Always Cull Off ZWrite Off\n            Fog { Mode off }\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n            sampler2D _CameraDepthNormalsTexture;\n            sampler2D _DepthTex;\n            uniform float4 _DepthTex_TexelSize;\n            sampler2D _ColorMap;\n            float _ZNear;\n            float _ZFar;\n\n            struct v2f \n            {\n                float4 pos : SV_POSITION;\n                float2 uv[3] : TEXCOORD0;\n            };\n\n            v2f vert (appdata_base v)\n            {\n                v2f o;\n                o.pos = mul (UNITY_MATRIX_MVP, v.vertex);\n                o.uv[0] = MultiplyUV( UNITY_MATRIX_TEXTURE0, v.texcoord );\n                o.uv[1] = o.uv[0] + float2(-_DepthTex_TexelSize.x, -_DepthTex_TexelSize.y);\n                o.uv[2] = o.uv[0] + float2(+_DepthTex_TexelSize.x, -_DepthTex_TexelSize.y);\n                return o;\n            }\n\n\n            inline half CheckSame (half2 centerNormal, half2 sampleNormal, float centerDepth, float sampleDepth)\n            {\n                // difference in normals\n                // do not bother decoding normals - there's no need here\n                half2 diff = abs(centerNormal - sampleNormal);\n                half isSameNormal = (diff.x + diff.y) &lt; 0.5;\n\n                // difference in depth\n                float zdiff = abs(centerDepth-sampleDepth);\n                // scale the required threshold by the distance\n                half isSameDepth = (zdiff &lt; 0.09 * centerDepth) || (centerDepth &lt; 0.1);\n\n                // return:\n                // 1 - if normals and depth are similar enough\n                // 0 - otherwise\n                return isSameNormal * isSameDepth;\n            }\n\n            half4 frag(v2f i) : COLOR \n            {\n                // get color based on depth\n                float depth = tex2D (_DepthTex, i.uv[0]).r;\n                half4 color = tex2D(_ColorMap, float2(saturate(1-depth), 0.5));\n\n                // detect normal diff\n                half2 centerNormal = tex2D(_CameraDepthNormalsTexture, i.uv[0]).xy;\n                half2 sampleNormal1 = tex2D (_CameraDepthNormalsTexture, i.uv[1]).xy;\n                half2 sampleNormal2 = tex2D (_CameraDepthNormalsTexture, i.uv[2]).xy;\n                float sampleDepth1 = tex2D (_DepthTex, i.uv[1]).r;\n                float sampleDepth2 = tex2D (_DepthTex, i.uv[2]).r;\n                color *= CheckSame(centerNormal, sampleNormal1, depth, sampleDepth1);\n                color *= CheckSame(centerNormal, sampleNormal2, depth, sampleDepth2);\n\n                return color;\n            }\n            ENDCG\n        }\n\n    }\n    FallBack \"Diffuse\"\n}\n</code></pre> <p>\u200b\u7ed3\u679c\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u8fd9\u4e2a\u200b\uff1a</p> <p></p>","tags":["dev"]},{"location":"unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#_5","title":"\u6df7\u5408\u200b\u771f\u5b9e\u4e16\u754c\u200b\u56fe\u50cf","text":"<p>\u200b\u5355\u5355\u662f\u200b\u6df1\u5ea6\u200b\u7684\u200b\u989c\u8272\u200b\u56fe\u200b\u53ef\u80fd\u200b\u6709\u70b9\u200b\u65e0\u8da3\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6df7\u5408\u200b\u4e0a\u200b\u771f\u5b9e\u200b\u573a\u666f\u200b\u7684\u200b\u989c\u8272\u200b\u56fe\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u518d\u5efa\u200b\u4e00\u4e2a\u200b Shader\uff0c\u200b\u4f20\u5165\u200b\u524d\u9762\u200b\u7684\u200b\u56fe\u50cf\u200b\u548c\u200b\u76f8\u673a\u200b\u7684\u200b\u771f\u5b9e\u200b\u56fe\u50cf\u200b\uff0c\u200b\u5728\u200b <code>OnRenderImage</code> \u200b\u4e2d\u200b\u8fdb\u884c\u200b\u6df7\u5408\u200b\uff1a</p> <pre><code>Shader \"Custom/ColorMixDepth\" {\n    Properties {\n        _MainTex (\"Base (RGBA)\", 2D) = \"white\" {}\n        _DepthTex (\"Depth (RGBA)\", 2D) = \"white\" {}\n    }\n    SubShader {\n        Tags { \"RenderType\"=\"Opaque\" }\n        LOD 200\n\n        CGPROGRAM\n        #pragma surface surf Lambert\n\n        sampler2D _MainTex;\n        sampler2D _DepthTex;\n\n        struct Input {\n            float2 uv_MainTex;\n            float2 uv_DepthTex;\n        };\n\n        void surf (Input IN, inout SurfaceOutput o) {\n            half4 c = tex2D (_MainTex, IN.uv_MainTex);\n            half4 d = tex2D (_DepthTex, IN.uv_DepthTex);\n            //d = d.x == 1? 0 : d;\n            o.Albedo = c.rgb*0.1 + d.rgb*0.9;\n            o.Alpha = 1;\n        }\n        ENDCG\n    } \n    FallBack \"Diffuse\"\n}\n</code></pre> <p><pre><code>void OnRenderImage(RenderTexture src, RenderTexture dst)\n{\n    // if now rendering depth map\n    if (isRenderDepth)\n    {\n        depthEdgeMaterial.SetTexture(\"_DepthTex\", src);\n        if(isUseColorMap)\n            Graphics.Blit(src, dst, depthEdgeMaterial);\n        else\n            Graphics.Blit(src, dst);\n        return;\n    }\n    // else rendering real color scene, mix the real color with depth map\n    else\n    {\n        mixMaterial.SetTexture(\"_MainTex\", src);\n        mixMaterial.SetTexture(\"_DepthTex\", depthTexture);\n        Graphics.Blit(src, dst, mixMaterial);\n        ReleaseTexture();\n    }\n}\n</code></pre> \u200b\u4e0a\u9762\u200b\u7684\u200b\u4ee3\u7801\u200b\u5c31\u662f\u200b\u5b8c\u6210\u200b\u8fd9\u4e2a\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u9700\u8981\u200b\u7406\u89e3\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u8c03\u7528\u200b <code>RenderWithShader</code> \u200b\u7684\u200b\u65f6\u5019\u200b\uff0c<code>OnRenderImage</code> \u200b\u4e5f\u200b\u4f1a\u200b\u88ab\u200b\u8c03\u7528\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u88ab\u200b\u8c03\u7528\u200b\u4e86\u200b\u4e24\u6b21\u200b\uff0c\u200b\u800c\u200b\u4e24\u6b21\u200b\u8c03\u7528\u200b\u9700\u8981\u200b\u5b8c\u6210\u200b\u7684\u200b\u529f\u80fd\u200b\u662f\u200b\u4e0d\u540c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u200b\u8fd9\u91cc\u200b\u7528\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u6765\u200b\u6307\u793a\u200b\u5f53\u524d\u200b\u7684\u200b\u6e32\u67d3\u200b\u72b6\u6001\u200b\u662f\u200b\u505a\u200b\u6df1\u5ea6\u56fe\u200b\u8fd8\u662f\u200b\u6df7\u5408\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#_6","title":"\u5b8c\u6574\u200b\u7684\u200b\u4ee3\u7801","text":"<p>\u200b\u4ee3\u7801\u200b\u6587\u4ef6\u200b\u6709\u70b9\u200b\u591a\u200b\uff0c\u200b\u5c31\u200b\u653e\u5230\u200b\u8fd9\u91cc\u200b\u4e86\u200bdepth-minimap\u3002</p> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/","title":"Unity\u200b\u7b2c\u4e09\u4eba\u79f0\u200b\u76f8\u673a\u200b\u6784\u5efa\u200b(\u200b\u4e0a\u200b)","text":"<p>\u200b\u6211\u200b\u60f3\u200b\u5728\u200bUnity\u200b\u4e2d\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u7b2c\u4e09\u4eba\u79f0\u200b\u76f8\u673a\u200b\uff0c\u200b\u76f8\u673a\u200b\u7684\u200b\u884c\u4e3a\u200b\u53c2\u8003\u200b\u300a\u200b\u9b54\u517d\u200b\u4e16\u754c\u200b\u300b\u200b\u7684\u200b\u7b2c\u4e09\u4eba\u79f0\u200b\u76f8\u673a\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\u9700\u6c42\u200b\u662f\u200b\uff1a</p> <ol> <li>\u200b\u9f20\u6807\u200b\u5de6\u952e\u200b\uff1a\u200b\u63a7\u5236\u200b\u76f8\u673a\u200b\u56f4\u7ed5\u200b\u4eba\u7269\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u4eba\u7269\u200b\u4e0d\u200b\u65cb\u8f6c\u200b</li> <li>\u200b\u9f20\u6807\u200b\u53f3\u952e\u200b\uff1a\u200b\u63a7\u5236\u200b\u76f8\u673a\u200b\u56f4\u7ed5\u200b\u4eba\u7269\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u4eba\u7269\u200b\u7684\u200b\u524d\u200b\u65b9\u5411\u200b(Unity\u200b\u4e2d\u200b\u7684\u200btranform.forward)\u200b\u76f8\u5e94\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u4eba\u7269\u200b\u4e0a\u200b\u65b9\u5411\u200b\u4e0d\u53d8\u200b</li> <li>\u200b\u9f20\u6807\u200b\u5de6\u952e\u200b\u65cb\u8f6c\u200b\u540e\u200b\uff0c\u200b\u518d\u200b\u53f3\u952e\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u89d2\u8272\u200b\u524d\u200b\u65b9\u5411\u200b\u9a6c\u4e0a\u200b\u6839\u636e\u200b\u5de6\u952e\u200b\u7684\u200b\u65cb\u8f6c\u200b\u505a\u200b\u8c03\u6574\u200b\uff0c\u200b\u518d\u200b\u6839\u636e\u200b\u53f3\u952e\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u6b64\u65f6\u200b\u7b49\u4ef7\u200b\u4e8e\u200b\u4e24\u6b21\u200b\u90fd\u200b\u662f\u200b\u53f3\u952e\u200b\u65cb\u8f6c\u200b</li> <li>\u200b\u9f20\u6807\u200b\u6eda\u8f6e\u200b\uff1a\u200b\u63a7\u5236\u200b\u76f8\u673a\u200b\u8fdc\u8fd1\u200b</li> <li>\u200b\u76f8\u673a\u200b\u4e0d\u80fd\u200b\u7a7f\u8fc7\u200b\u4efb\u4f55\u200b\u521a\u6027\u200b\u7269\u4f53\u200b</li> <li>\u200b\u76f8\u673a\u200b\u5728\u200b\u79bb\u5f00\u200b\u78b0\u649e\u200b\u7684\u200b\u521a\u6027\u200b\u7269\u4f53\u200b\u540e\u200b\uff0c\u200b\u6162\u6162\u200b\u56de\u5230\u200b\u539f\u6765\u200b\u7684\u200b\u8ddd\u79bb\u200b\u4e0a\u200b</li> <li>\u200b\u5982\u679c\u200b\u76f8\u673a\u200b\u5728\u200b\u78b0\u5230\u200b\u7269\u4f53\u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u9f20\u6807\u200b\u6eda\u8f6e\u200b\u64cd\u4f5c\u200b\u76f8\u673a\u200b\u62c9\u8fd1\u200b\uff0c\u200b\u76f8\u673a\u200b\u9700\u8981\u200b\u9a6c\u4e0a\u200b\u53cd\u5e94\u200b\uff0c\u200b\u6b64\u540e\u200b\u7b2c\u200b6\u200b\u70b9\u200b\u4e0d\u518d\u200b\u53d1\u751f\u200b</li> <li>\u200b\u76f8\u673a\u200b\u5728\u200b\u65cb\u8f6c\u200b\u4e2d\u200b\u78b0\u5230\u200b\u5730\u9762\u200b\uff0c\u200b\u505c\u6b62\u200b\u56f4\u7ed5\u200b\u4eba\u7269\u200b\u4e0a\u4e0b\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u6539\u4e3a\u200b\u56f4\u7ed5\u200b\u81ea\u8eab\u200b\u4e0a\u4e0b\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u5de6\u53f3\u200b\u65cb\u8f6c\u200b\u4f9d\u7136\u200b\u662f\u200b\u56f4\u7ed5\u200b\u4eba\u7269\u200b</li> </ol> <p>\u200b\u8fd9\u4e2a\u200b\u9700\u6c42\u200b\u53ef\u4ee5\u200b\u5148\u200b\u5206\u6210\u200b\u4e24\u200b\u90e8\u5206\u200b\uff1a\u200b\u76f8\u673a\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u76f8\u673a\u200b\u521a\u6027\u200b\u3002\u200b\u7b80\u5355\u200b\u8d77\u200b\u89c1\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u5148\u200b\u6765\u200b\u89e3\u51b3\u200b\u76f8\u673a\u200b\u65cb\u8f6c\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u9700\u6c42\u200b\u7684\u200b\u524d\u200b3\u200b\u70b9\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#_1","title":"\u76f8\u673a\u200b\u4f4d\u7f6e\u200b\u8868\u793a","text":"<p>\u200b\u5728\u200b\u6b63\u5f0f\u200b\u89e3\u51b3\u200b\u76f8\u673a\u200b\u64cd\u4f5c\u524d\u200b\uff0c\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200b\u95ee\u9898\u200b\u9700\u8981\u200b\u89e3\u51b3\u200b\uff1a\u200b\u76f8\u673a\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u8868\u793a\u200b\u3002\u200b\u8fd9\u200b\u53ef\u4ee5\u200b\u7528\u200b\u591a\u79cd\u200b\u65b9\u5f0f\u200b\uff1a</p> <ul> <li>\u200b\u76f8\u673a\u200b\u7684\u200b\u4e16\u754c\u5750\u6807\u200b</li> <li>\u200b\u76f8\u673a\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u4eba\u7269\u200b\u7684\u200b\u5750\u6807\u200b</li> <li>\u200b\u76f8\u673a\u200b\u5728\u200b\u4eba\u7269\u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b\u7684\u200b\u65b9\u5411\u200b\u548c\u200b\u8ddd\u79bb\u200b</li> </ul> <p>\u200b\u56e0\u4e3a\u200b\u5728\u200b\u6211\u4eec\u200b\u7684\u200b\u9700\u6c42\u200b\u4e2d\u200b\uff0c\u200b\u76f8\u673a\u200b\u662f\u200b\u6839\u636e\u200b\u4eba\u7269\u200b\u4f4d\u7f6e\u200b\u8fdb\u884c\u200b\u53d8\u6362\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u200b\u8fd9\u91cc\u200b\u4f7f\u7528\u200b\u7b2c\u4e09\u79cd\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u800c\u4e14\u200b\u5728\u200b\u63a7\u5236\u200b\u4e2d\u200b\u76f8\u673a\u200b\u4e00\u76f4\u200b\u7784\u51c6\u200b\u4eba\u7269\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5728\u200b\u76f8\u673a\u200b\u5185\u200b\u53ea\u200b\u9700\u8981\u200b\u4fdd\u5b58\u200b\u8ddd\u79bb\u200b\u4fe1\u606f\u200b\uff1a</p> <pre><code>float curDistance = 5F;\n</code></pre>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#_2","title":"\u76f8\u673a\u200b\u65cb\u8f6c","text":"<p>\u200b\u7ee7\u7eed\u200b\u7ec6\u5206\u200b\u76f8\u673a\u200b\u65cb\u8f6c\u200b\u7684\u200b\u884c\u4e3a\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5206\u6210\u200b\u5de6\u952e\u200b\u65cb\u8f6c\u200b\u548c\u200b\u53f3\u952e\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u6765\u200b\u4e00\u6b65\u200b\u4e00\u6b65\u200b\u5730\u200b\u5b8c\u6210\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u65cb\u8f6c\u200b\u3002\u200b\u9996\u5148\u200b\u6211\u200b\u628a\u200b\u76f8\u673a\u200b\u8bbe\u200b\u4e3a\u200b\u4eba\u7269\u200b\u7684\u200b\u5b50\u200b\u7269\u4f53\u200b(children)\uff0c\u200b\u8fd9\u6837\u200b\u4eba\u7269\u200b\u7684\u200b\u4e00\u4e9b\u200b\u57fa\u672c\u200b\u7684\u200b\u79fb\u52a8\u200b\u76f8\u673a\u200b\u90fd\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u7684\u200b\u8ddf\u8e2a\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#_3","title":"\u5de6\u952e\u200b\u65cb\u8f6c","text":"<p>\u200b\u5355\u5355\u200b\u770b\u200b\u5de6\u952e\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u9700\u6c42\u200b\u5f88\u200b\u7b80\u5355\u200b\uff1a\u200b\u76f8\u673a\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u4eba\u7269\u200b\u4e0d\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u8fd9\u200b\u5c31\u200b\u76f8\u5f53\u4e8e\u200b\u4e00\u4e2a\u200b\u89c2\u5bdf\u200b\u6a21\u578b\u200b\u7684\u200b\u76f8\u673a\u200b\uff0c\u200b\u76f8\u673a\u200b\u53ef\u4ee5\u200b\u4efb\u610f\u200b\u89d2\u5ea6\u89c2\u5bdf\u200b\u4e2d\u5fc3\u200b\u7269\u4f53\u200b\u3002</p> <p>\u200b\u5728\u200bUnity\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u9f20\u6807\u200b\u5de6\u952e\u200b\u72b6\u6001\u200b\u4f7f\u7528\u200b\u8bed\u53e5\u200b\uff1a<code>Input.GetMouseButton(0)</code>\uff08\u200b\u6ce8\u200b\uff1a\u200b\u540e\u9762\u200b\u6d89\u53ca\u200b\u5230\u200b\u4ee3\u7801\u200b\u7684\u200b\u5730\u65b9\u200b\uff0c\u200b\u90fd\u200b\u662f\u200b\u4f7f\u7528\u200bC#\uff09\uff0c\u200b\u660e\u663e\u200b\uff0c\u200b\u53f3\u952e\u200b\u5c31\u662f\u200b<code>Input.GetMouseButton(1)</code>\u3002\u200b\u83b7\u53d6\u200b\u9f20\u6807\u200b\u5149\u6807\u200b\u7684\u200b\u79fb\u52a8\u200b\u4f4d\u7f6e\u200b\uff08\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u5e27\u200b\u4e4b\u95f4\u200b\u5149\u6807\u200b\u5728\u200bX-Y\u200b\u4e0a\u200b\u7684\u200b\u504f\u79fb\u91cf\u200b\uff09\u200b\u4fe1\u606f\u200b\u662f\u200b\uff1a<code>Input.GetAxis(\"Mouse X\"); Input.GetAxis(\"Mouse Y\")</code>\u3002\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5148\u200b\u6765\u200b\u83b7\u53d6\u200b\u9f20\u6807\u200b\u5de6\u952e\u200b\u6309\u4e0b\u200b\u540e\u200b\u5149\u6807\u200b\u7684\u200b\u79fb\u52a8\u4fe1\u606f\u200b\uff1a</p> <pre><code>if (Input.GetMouseButton(0))\n{\n    float x = Input.GetAxis(\"Mouse X\");\n    float y = Input.GetAxis(\"Mouse Y\");\n}\n</code></pre> <p>\u200b\u4ee3\u7801\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u90a3\u200b\u4e0b\u9762\u200b\u5c31\u662f\u200b\u5173\u952e\u200b\u7684\u200b\u5730\u65b9\u200b\uff1a\u200b\u5982\u4f55\u200b\u63a7\u5236\u200b\u76f8\u673a\u200b\u6765\u200b\u65cb\u8f6c\u200b\u3002\u200b\u8981\u200b\u7406\u89e3\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u9700\u8981\u200b\u4e00\u4e9b\u200b\u5173\u4e8e\u200b\u56db\u5143\u200b\u6570\u200b\u7684\u200b\u77e5\u8bc6\u200b\uff08\u200b\u7f51\u4e0a\u200b\u8d44\u6599\u200b\u5f88\u591a\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u5c31\u200b\u4e0d\u200b\u5217\u4e3e\u200b\u4e86\u200b\uff09\uff0c\u200b\u56db\u5143\u200b\u6570\u200b\u91cd\u8981\u200b\u7684\u200b\u4e00\u70b9\u200b\u662f\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u7b80\u5355\u200b\u5730\u200b\u6784\u9020\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u56f4\u7ed5\u200b\u67d0\u4e2a\u200b\u5411\u91cf\u200b\u7684\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u7406\u89e3\u200b\u56db\u5143\u200b\u6570\u540e\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u76f8\u673a\u200b\u56f4\u7ed5\u200b\u4eba\u7269\u200b\u7684\u200b\u65cb\u8f6c\u200b\u5c31\u200b\u4e0d\u96be\u200b\u4e86\u200b\u3002</p> <p>\u200b\u53e6\u5916\u200b\u8fd8\u6709\u200b\u4e00\u70b9\u200b\u8981\u200b\u6ce8\u610f\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u56db\u5143\u200b\u6570\u200b\u65cb\u8f6c\u8f74\u200b\u53ea\u662f\u200b\u4e00\u4e2a\u200b\u5411\u91cf\u200b\uff0c\u200b\u4ee5\u200b\u539f\u70b9\u200b\u4e3a\u200b\u51fa\u53d1\u70b9\u200b\uff0c\u200b\u5982\u679c\u200b\u8981\u200b\u4ee5\u200b\u4e16\u754c\u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b\u7684\u200b\u67d0\u70b9\u200b<code>O</code>\u200b\u4e3a\u200b\u539f\u70b9\u200b\uff0c\u200b\u4ee5\u8be5\u200b\u70b9\u200b\u4e3a\u200b\u51fa\u53d1\u70b9\u200b\u7684\u200b\u5411\u91cf\u200b<code>V</code>\u200b\u4e3a\u200b\u65cb\u8f6c\u8f74\u200b\uff0c\u200b\u5c31\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u5750\u6807\u7cfb\u200b\u7684\u200b\u53d8\u6362\u200b\uff0c\u200b\u7b80\u5355\u200b\u5730\u8bf4\u200b\uff0c\u200b\u5c31\u662f\u200b\u628a\u200b\u9700\u8981\u200b\u65cb\u8f6c\u200b\u7684\u200b\u70b9\u200b<code>P</code>\u200b\u53d8\u6362\u200b\u5230\u200b\uff0c\u200b\u4ee5\u200b<code>O</code>\u200b\u4e3a\u200b\u539f\u70b9\u200b\u7684\u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b\uff0c\u200b\u6839\u636e\u200b<code>V</code>\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u518d\u200b\u53d8\u6362\u200b\u4f1a\u200b\u4e16\u754c\u200b\u5750\u6807\u7cfb\u200b\u3002\u200b\u6839\u636e\u200b\u8fd9\u4e9b\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5199\u51fa\u200b\u4e00\u4e2a\u200b\u529f\u80fd\u200b\u51fd\u6570\u200b\uff1a</p> <p><pre><code>Vector3 MyRotate(Vector3 oldPosition, float angle, Vector3 axis, Vector3 axisPosition)\n{\n    // \u200b\u6784\u9020\u200b\u4e00\u4e2a\u200b\u56db\u5143\u200b\u6570\u200b\uff0c\u200b\u4ee5\u200baxis\u200b\u4e3a\u200b\u65cb\u8f6c\u8f74\u200b\uff0c\u200b\u8fd9\u200b\u662f\u200b\u5728\u200b\u4eba\u7269\u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b\u7684\u200b\u65cb\u8f6c\u200b\n    Quaternion rotation = Quaternion.AngleAxis(angle, axis);\n    // \u200b\u8fd9\u91cc\u200b\u505a\u200b\u7684\u200b\u5c31\u662f\u200b\u5750\u6807\u7cfb\u200b\u7684\u200b\u53d8\u6362\u200b\uff0c\u200b\u628a\u200b\u76f8\u673a\u200b\u7684\u200b\u4e16\u754c\u5750\u6807\u200b\u53d8\u6362\u200b\u5230\u200b\u4eba\u7269\u200b\u5750\u6807\u7cfb\u200b\u4e0b\u200b\u7684\u200b\u5750\u6807\u200b\n    Vector3 offset = oldPosition - axisPosition;\n    // \u200b\u8ba1\u7b97\u200b\u65cb\u8f6c\u200b\u5e76\u200b\u53d8\u6362\u200b\u56de\u200b\u4e16\u754c\u200b\u5750\u6807\u7cfb\u200b\u4e2d\u200b\n    return axisPosition + (rotation * offset);\n}\n</code></pre> <code>Quaternion</code>\u200b\u662f\u200bUnity\u200b\u4e2d\u200b\u8868\u793a\u200b\u56db\u5143\u200b\u6570\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u52a0\u4e0a\u200b\u4e4b\u524d\u200b\u9f20\u6807\u200b\u5de6\u952e\u200b\u7684\u200b\u68c0\u6d4b\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5b8c\u6210\u200b\u5de6\u952e\u200b\u63a7\u5236\u200b\u76f8\u673a\u200b\u5de6\u53f3\u200b\u65cb\u8f6c\u200b\u3002</p> <p>\u200b\u9f20\u6807\u200b\u5de6\u53f3\u200b\u79fb\u52a8\u200b\u63a7\u5236\u200b\u76f8\u673a\u200b\u5de6\u53f3\u200b\u65cb\u8f6c\u200b\u7684\u200b\u4ee3\u7801\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u7ed9\u51fa\u200b\uff1a</p> <p><pre><code>newForward = MyRotate(newForward, x, up, Vector3.zero);\n</code></pre> \u200b\u56e0\u4e3a\u200b\u8fd9\u91cc\u200b\u53ea\u6709\u200b\u524d\u200b\u5411\u91cf\u200b\u505a\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u6ca1\u6709\u200b\u6d89\u53ca\u200b\u5230\u200b\u5750\u6807\u7cfb\u200b\u7684\u200b\u8f6c\u6362\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7b2c\u56db\u4e2a\u200b\u53c2\u6570\u200b\u4e3a\u200b<code>Vector3.zero</code>\u3002</p> <p>\u200b\u63a7\u5236\u200b\u4e0a\u4e0b\u200b\u65cb\u8f6c\u200b\u6bd4\u200b\u5de6\u53f3\u200b\u65cb\u8f6c\u200b\u96be\u200b\u7406\u89e3\u200b\u4e00\u70b9\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6b64\u65f6\u200b\u7684\u200b\u65cb\u8f6c\u8f74\u200b\u662f\u200b\u4f1a\u200b\u4e00\u76f4\u200b\u53d8\u5316\u200b\u7684\u200b(\u200b\u8fd9\u91cc\u200b\u5047\u8bbe\u200b\u4eba\u7269\u200b\u7684\u200bup\u200b\u4e00\u76f4\u200b\u662f\u200bY\u200b\u8f74\u200b\u7684\u200b\u6b63\u200b\u65b9\u5411\u200b)\u3002\u200b\u6ce8\u610f\u200b\u7684\u200b\u76f8\u673a\u200b\u4e5f\u200b\u662f\u200b\u4e00\u76f4\u200b\u5728\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u5e76\u4e14\u200b\u89c6\u70b9\u200b\u4e2d\u5fc3\u200b\u4e00\u76f4\u200b\u5bf9\u51c6\u200b\u4eba\u7269\u200b\uff0c\u200b\u90a3\u4e48\u200b\u76f8\u673a\u200b\u7684\u200b\u53f3\u200b\u65b9\u5411\u200b(right)\u200b\u5c31\u662f\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u56f4\u7ed5\u200b\u7740\u200b\u65cb\u8f6c\u200b\u7684\u200b\u8f74\u200b\u4e86\u200b(\u200b\u628a\u200b\u76f8\u673a\u200bright\u200b\u60f3\u8c61\u200b\u6210\u200b\u4eba\u7269\u200b\u7684\u200bright)\uff0c\u200b\u8fd9\u6837\u200b\u7406\u89e3\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4e0a\u4e0b\u200b\u65cb\u8f6c\u200b\u7684\u200b\u4ee3\u7801\u200b\u4e5f\u200b\u5f88\u200b\u7b80\u5355\u200b\u4e86\u200b\uff1a</p> <pre><code>newForward = MyRotate(newForward, -y, transform.right, Vector3.zero);\n</code></pre>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#_4","title":"\u53f3\u952e\u200b\u65cb\u8f6c","text":"<p>\u200b\u505a\u200b\u4e86\u200b\u5de6\u952e\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u53f3\u952e\u200b\u65cb\u8f6c\u200b\u5c31\u200b\u5f88\u200b\u7b80\u5355\u200b\u4e86\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u5728\u200b\u5de6\u53f3\u200b\u65cb\u8f6c\u200b\u7684\u200b\u65f6\u5019\u200b\u8bbe\u7f6e\u200b\u4eba\u7269\u200b\u7684\u200b\u524d\u200b\u65b9\u5411\u200b\uff1a</p> <pre><code>player.forward = Vector3.Normalize(new Vector3(oldForward.x, 0, oldForward.z));\n</code></pre> <p>\u200b\u4e0a\u4e0b\u200b\u65cb\u8f6c\u200b\u8ddf\u200b\u5de6\u952e\u200b\u7684\u200b\u4ee3\u7801\u200b\u4e00\u6837\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#_5","title":"\u5148\u200b\u5de6\u952e\u200b\uff0c\u200b\u540e\u200b\u53f3\u952e","text":"<p>\u200b\u4e0a\u9762\u200b\u867d\u7136\u200b\u53ef\u4ee5\u200b\u5206\u522b\u200b\u5de6\u952e\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u53f3\u952e\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u4f46\u662f\u200b\u4e00\u65e6\u200b\u5148\u200b\u7528\u200b\u5de6\u952e\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u518d\u7528\u200b\u53f3\u952e\u200b\u64cd\u4f5c\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u95ee\u9898\u200b\u5c31\u200b\u4f1a\u200b\u51fa\u73b0\u200b\uff1a\u200b\u4eba\u7269\u200b\u7684\u200b\u524d\u200b\u65b9\u5411\u200b\u548c\u200b\u76f8\u673a\u200b\u7684\u200b\u524d\u200b\u65b9\u5411\u4e0d\u540c\u200b\u4e86\u200b\uff01\u200b\u90a3\u4e48\u200b\u76f8\u673a\u200b\u548c\u200b\u4eba\u7269\u200b\u7684\u200b\u6b63\u200b\u65b9\u5411\u200b\u5c31\u200b\u4ece\u6b64\u200b\u5206\u79bb\u200b\uff0c\u200b\u5b9e\u9645\u64cd\u4f5c\u200b\u8d77\u6765\u200b\u5f88\u200b\u5947\u602a\u200b\u3002\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u5728\u200b\u7528\u200b\u53f3\u952e\u200b\u65cb\u8f6c\u200b\u7684\u200b\u65f6\u5019\u200b\u5c31\u8981\u200b\u5148\u200b\u628a\u200b\u4eba\u7269\u200b\u8c03\u6574\u200b\u4e3a\u200b\u8ddf\u200b\u76f8\u673a\u200b\u7684\u200b\u6b63\u200b\u65b9\u5411\u200b\u4e00\u81f4\u200b\uff1a</p> <pre><code>player.forward = Vector3.Normalize(new Vector3(oldForward.x, 0, oldForward.z));\n</code></pre>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#_6","title":"\u6b27\u62c9\u89d2\u200b\u4e07\u5411\u200b\u9501","text":"<p>\u200b\u81f3\u6b64\u200b\uff0c\u200b\u76f8\u673a\u200b\u7684\u200b\u65cb\u8f6c\u200b\u5dee\u4e0d\u591a\u200b\u5c31\u200b\u5b8c\u6210\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200b\u95ee\u9898\u200b\u8981\u200b\u6ce8\u610f\u200b\uff1a\u200b\u6b27\u62c9\u89d2\u200b\u4e07\u5411\u200b\u9501\u200b\u3002\u200b\u539f\u7406\u200b\u8fd9\u91cc\u200b\u5c31\u200b\u4e0d\u7ec6\u200b\u8bb2\u200b\uff0c\u200b\u6709\u200b\u5174\u8da3\u200b\u7684\u200b\u670b\u53cb\u200b\u53ef\u4ee5\u200b\u81ea\u884c\u200b\u641c\u7d22\u200b\uff0c\u200b\u9488\u5bf9\u200b\u8fd9\u91cc\u200b\u76f8\u673a\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u5c31\u662f\u200b\u5f53\u200b\u76f8\u673a\u200b\u4e0a\u4e0b\u200b\u65cb\u8f6c\u200b\u5230\u200b\u8ddf\u200b\u4eba\u7269\u200b\u7684\u200b\u4e0a\u200b\u65b9\u5411\u200b\u91cd\u5408\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u76f8\u673a\u200b\u7684\u200b\u89c6\u89d2\u200b\u4f1a\u200b\u53d1\u751f\u200b\u7a81\u53d8\u200b\u3002\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u76f8\u673a\u200b\u5230\u8fbe\u200b\u4eba\u7269\u200b\u7684\u200b\u5934\u9876\u200b\u6216\u8005\u200b\u811a\u5e95\u200b\uff0c\u200b\u76f8\u673a\u200b\u7684\u200b\u4e0a\u200b\u65b9\u5411\u200b\u4f1a\u200b\u53d1\u751f\u200b\u7a81\u53d8\u200b(\u200b\u56e0\u4e3a\u200b\u76f8\u673a\u200b\u7684\u200b\u4e0a\u200b\u65b9\u5411\u200b\u7684\u200bY\u200b\u503c\u200b\u4e00\u76f4\u200b\u90fd\u200b\u8981\u200b\u5927\u4e8e\u200b\u96f6\u200b)\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u9650\u5236\u200b\u76f8\u673a\u200b\u7684\u200b\u4e0a\u4e0b\u200b\u65cb\u8f6c\u200b\u8303\u56f4\u200b\uff0c\u200b\u9632\u6b62\u200b\u53d1\u751f\u200b\u4e07\u5411\u200b\u9501\u200b\u3002\u200b\u64cd\u4f5c\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u5c31\u662f\u200b\u9650\u5236\u200b\u76f8\u673a\u200b\u7684\u200b\u524d\u200b\u65b9\u5411\u200b\u4e0e\u200b\u4eba\u7269\u200b\u7684\u200b\u4e0a\u200b\u65b9\u5411\u200b\u7684\u200b\u5939\u89d2\u200b\u7684\u200b\u8303\u56f4\u200b\uff1a</p> <pre><code>if ((Vector3.Dot(transform.forward, transform.parent.up) &gt;= -0.95F || y &gt; 0) &amp;&amp;\n    (Vector3.Dot(transform.forward, transform.parent.up) &lt;= 0.95F || y &lt; 0))\n</code></pre>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#_7","title":"\u5b8c\u6574\u200b\u4ee3\u7801","text":"<pre><code>// rotate oldPosition around a axis starting at axisPosition\nVector3 MyRotate(Vector3 oldPosition, float angle, Vector3 axis, Vector3 axisPosition)\n{\n    Quaternion rotation = Quaternion.AngleAxis(angle, axis);\n    Vector3 offset = oldPosition - axisPosition;\n    return axisPosition + (rotation * offset);\n}\n\n// rotate oldForward, player forward may change when use mouse RB\nVector3 RotateIt(Vector3 oldForward, Vector3 up, Vector3 right, Transform player)\n{\n    Vector3 newForward = -oldForward;\n    // mouse LB RB rotate camera and character\n    if (Input.GetMouseButton(0) ^ Input.GetMouseButton(1))\n    {\n        float x = Input.GetAxis(\"Mouse X\") * rotateSpeed;\n        float y = Input.GetAxis(\"Mouse Y\") * rotateSpeed;\n\n        if (x != 0F)\n        {\n            newForward = MyRotate(newForward, x, up, Vector3.zero);\n\n            // mouse RB, character rotate together\n            if (Input.GetMouseButton(1))\n            {\n                player.forward = Vector3.Normalize(new Vector3(oldForward.x, 0, \n                    oldForward.z));\n            }\n        }\n\n        if (y != 0F)\n        {\n\n            if ((Vector3.Dot(transform.forward, up) &gt;= -0.95F || y &gt; 0)\n                &amp;&amp; (Vector3.Dot(transform.forward, up) &lt;= 0.95F || y &lt; 0))\n            {\n                newForward = MyRotate(newForward, -y, transform.right, Vector3.zero);\n\n            }\n        }\n    }\n\n    return -newForward;\n}\n</code></pre> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/","title":"Unity\u200b\u7b2c\u4e09\u4eba\u79f0\u200b\u76f8\u673a\u200b\u6784\u5efa\u200b(\u200b\u4e0b\u200b)","text":"<p>\u200b\u4e0a\u200b\u4e00\u96c6\u200b\u8bb2\u5b8c\u200b\u4e86\u200b\u76f8\u673a\u200b\u7684\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u90a3\u4e48\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u8981\u200b\u89e3\u51b3\u200b\u7684\u200b\u95ee\u9898\u200b\u662f\u200b\u76f8\u673a\u200b\u7684\u200b\u521a\u6027\u200b\uff0c\u200b\u8981\u200b\u600e\u4e48\u200b\u505a\u200b\u5462\u200b\uff1f</p>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#_1","title":"\u76f8\u673a\u200b\u521a\u6027","text":"<p>\u200b\u56de\u987e\u200b\u4e4b\u200b\u524d\u63d0\u200b\u7684\u200b\u9700\u6c42\u200b\uff1a</p> <ol> <li>\u200b\u9f20\u6807\u200b\u6eda\u8f6e\u200b\uff1a\u200b\u63a7\u5236\u200b\u76f8\u673a\u200b\u8fdc\u8fd1\u200b</li> <li>\u200b\u76f8\u673a\u200b\u4e0d\u80fd\u200b\u7a7f\u8fc7\u200b\u4efb\u4f55\u200b\u521a\u6027\u200b\u7269\u4f53\u200b</li> <li>\u200b\u76f8\u673a\u200b\u5728\u200b\u79bb\u5f00\u200b\u78b0\u649e\u200b\u7684\u200b\u521a\u6027\u200b\u7269\u4f53\u200b\u540e\u200b\uff0c\u200b\u6162\u6162\u200b\u56de\u5230\u200b\u539f\u6765\u200b\u7684\u200b\u8ddd\u79bb\u200b\u4e0a\u200b</li> <li>\u200b\u5982\u679c\u200b\u76f8\u673a\u200b\u5728\u200b\u78b0\u5230\u200b\u521a\u4f53\u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b\u9f20\u6807\u200b\u6eda\u8f6e\u200b\u64cd\u4f5c\u200b\u76f8\u673a\u200b\u62c9\u8fd1\u200b\uff0c\u200b\u76f8\u673a\u200b\u9700\u8981\u200b\u9a6c\u4e0a\u200b\u53cd\u5e94\u200b\uff0c\u200b\u6b64\u540e\u200b\u7b2c\u200b6\u200b\u70b9\u200b\u4e0d\u518d\u200b\u53d1\u751f\u200b\uff1b\u200b\u78b0\u649e\u200b\u5730\u9762\u200b\u540e\u200b\u4e0d\u80fd\u200b\u8fdb\u884c\u200b\u7f29\u653e\u200b\u64cd\u4f5c\u200b</li> <li>\u200b\u76f8\u673a\u200b\u5728\u200b\u65cb\u8f6c\u200b\u4e2d\u200b\u78b0\u5230\u200b\u5730\u9762\u200b\uff0c\u200b\u505c\u6b62\u200b\u56f4\u7ed5\u200b\u4eba\u7269\u200b\u4e0a\u4e0b\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u6539\u4e3a\u200b\u56f4\u7ed5\u200b\u81ea\u8eab\u200b\u4e0a\u4e0b\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u5de6\u53f3\u200b\u65cb\u8f6c\u200b\u4f9d\u7136\u200b\u662f\u200b\u56f4\u7ed5\u200b\u4eba\u7269\u200b</li> </ol> <p>\u200b\u8fd9\u200b\u51e0\u70b9\u200b\u7684\u200b\u610f\u601d\u200b\u662f\u200b\uff1a\u200b\u76f8\u673a\u200b\u5728\u200b\u78b0\u5230\u200b\u521a\u6027\u200b\u7269\u4f53\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u88ab\u8feb\u200b\u62c9\u8fd1\u200b\u8ddf\u200b\u4eba\u7269\u200b\u7684\u200b\u8ddd\u79bb\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u76f8\u673a\u200b\u5728\u200b\u79bb\u5f00\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6162\u6162\u200b\u5730\u200b\u56de\u5230\u200b\u539f\u6765\u200b\u7684\u200b\u8ddd\u79bb\u200b\uff1b\u200b\u4f46\u662f\u200b\u5982\u679c\u200b\u5728\u200b\u81ea\u52a8\u200b\u62c9\u8fd1\u200b\u8ddd\u79bb\u200b\u540e\u200b\uff0c\u200b\u7528\u200b\u6eda\u8f6e\u200b\u518d\u200b\u624b\u52a8\u200b\u62c9\u8fd1\u200b\uff0c\u200b\u8bf4\u660e\u200b\u76f8\u673a\u200b\u79bb\u5f00\u200b\u78b0\u649e\u200b\u7684\u200b\u7269\u4f53\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd9\u4e2a\u200b\u62c9\u8fd1\u200b\u7684\u200b\u8ddd\u79bb\u200b\u5c31\u662f\u200b\u76f8\u673a\u200b\u7684\u200b\u5b9e\u9645\u200b\u8ddd\u79bb\u200b\u3002\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u6765\u200b\u4e00\u70b9\u4e00\u70b9\u200b\u7684\u200b\u89e3\u200b\u8fd9\u4e9b\u200b\u9700\u6c42\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#_2","title":"\u6eda\u8f6e\u200b\u63a7\u5236","text":"<p>\u200b\u9f20\u6807\u200b\u6eda\u8f6e\u200b\u63a7\u5236\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u77e5\u9053\u200b\u83b7\u53d6\u200b\u6eda\u8f6e\u200b\u4fe1\u606f\u200b\u662f\u200b<code>Input.GetAxis(\"Mouse ScrollWheel\")</code>\uff0c\u200b\u5e76\u200b\u8bbe\u5b9a\u200b\u8ddd\u79bb\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u6700\u5c0f\u503c\u200b\u5c31\u200bok\uff1a</p> <pre><code>public float mouseWheelSensitivity = 2; // control zoom speed\npublic int mouseWheelZoomMin = 2;       // min distance\npublic int mouseWheelZoomMax = 10;      // max distance\nfloat curDistance = 5F;\nfloat zoom = Input.GetAxis(\"Mouse ScrollWheel\");\nif (zoom != 0F)\n{\n    float distance = curDistance;\n    distance -= zoom * mouseWheelSensitivity;\n    distance = Math.Min(mouseWheelZoomMax, Math.Max(mouseWheelZoomMin, distance));\n    return distance;\n}\n</code></pre> <p>\u200b\u8fd9\u91cc\u200b<code>playerTransform</code>\u200b\u6307\u5411\u200b\u4eba\u7269\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#_3","title":"\u4e0d\u80fd\u200b\u7a7f\u8fc7\u200b\u4efb\u4f55\u200b\u521a\u6027\u200b\u7269\u4f53","text":"<p>\u200b\u8fd9\u200b\u9700\u8981\u200b\u68c0\u6d4b\u200b\u76f8\u673a\u200b\u8ddf\u200b\u521a\u4f53\u200b\u7684\u200b\u63a5\u89e6\u200b\uff0c\u200b\u6709\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u8fd9\u4e2a\u200b\u529f\u80fd\u200b\uff1a</p> <pre><code>static bool Raycast(Ray ray, RaycastHit hitInfo, float distance = Mathf.Infinity, int layerMask = DefaultRaycastLayers);\n</code></pre> <p>\u200b\u5177\u4f53\u200b\u7528\u6cd5\u200b\u53c2\u8003\u200bUnity\u200b\u7684\u200bReference\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8fd9\u6837\u200b\u5b9e\u73b0\u200b\u78b0\u649e\u200b\u7684\u200b\u68c0\u6d4b\u200b\uff1a</p> <pre><code>RaycastHit hitInfo;\nif (Physics.Raycast(playerTransform.position, desiredPosition - playerTransform.position,\n    out hitInfo, (playerTransform.position - desiredPosition).magnitude, 1))\n{\n    curDistance = hitInfo.distance;\n}\n</code></pre> <p><code>targetPosition</code>\u200b\u5c31\u662f\u200b\u78b0\u649e\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u628a\u200b\u76f8\u673a\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u8bbe\u200b\u5230\u200b\u78b0\u649e\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#_4","title":"\u79bb\u5f00\u200b\u521a\u4f53\u200b\u540e\u200b\uff0c\u200b\u6162\u6162\u200b\u56de\u5230\u200b\u539f\u6765\u200b\u7684\u200b\u8ddd\u79bb\u200b\u4e0a","text":"<p>\u200b\u8981\u200b\u5b8c\u6210\u200b\u8fd9\u4e2a\u200b\u529f\u80fd\u200b\uff0c\u200b\u9996\u5148\u200b\u8981\u200b\u5206\u522b\u200b\u8bb0\u5f55\u200b\u4e0b\u200b\u76f8\u673a\u200b\u5e94\u8be5\u200b\u5904\u4e8e\u200b\u7684\u200b\u8ddd\u79bb\u200b(<code>desiredDistance</code>)\u200b\u548c\u200b\u76ee\u524d\u200b\u8ddd\u79bb\u200b(<code>curDistance</code>)\uff0c\u200b\u628a\u200b\u6eda\u8f6e\u200b\u64cd\u4f5c\u200b\u7684\u200b\u7ed3\u679c\u200b\u7528\u200b<code>desiredDistance</code>\u200b\u5148\u5b58\u200b\u8d77\u6765\u200b\uff0c\u200b\u518d\u200b\u6839\u636e\u200b\u78b0\u649e\u200b\u8ba1\u7b97\u200b\u7269\u4f53\u200b\u7684\u200b\u65b0\u200b\u8ddd\u79bb\u200b\uff1b \u200b\u5728\u200b\u68c0\u6d4b\u200b\u5230\u200b\u76f8\u673a\u200b\u79bb\u5f00\u200b\u521a\u4f53\u200b\uff0c\u200b\u6216\u8005\u200b\u78b0\u649e\u200b\u5230\u200b\u66f4\u200b\u8fdc\u200b\u7684\u200b\u521a\u4f53\u200b\u65f6\u5019\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u628a\u200b\u78b0\u649e\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u8d4b\u503c\u200b\u7ed9\u200b\u76f8\u673a\u200b\uff0c\u200b\u9700\u8981\u200b\u7528\u200b\u4e00\u4e2a\u200b\u79fb\u52a8\u200b\u901f\u5ea6\u200b\u6765\u200b\u5411\u200b\u65b0\u200b\u7684\u200b\u8ddd\u79bb\u200b\u79fb\u52a8\u200b\u3002\u200b\u5148\u200b\u6765\u200b\u83b7\u53d6\u200b\u65b0\u200b\u7684\u200b\u8ddd\u79bb\u200b\uff1a</p> <pre><code>float newDistance = desiredDistance;\nRaycastHit hitInfo;\nif (Physics.Raycast(playerTransform.position, desiredPosition - playerTransform.position,\n    out hitInfo, (playerTransform.position - desiredPosition).magnitude, 1))\n{\n    newDistance = hitInfo.distance;\n}\n</code></pre> <p>\u200b\u90a3\u4e48\u200b\u600e\u4e48\u200b\u5224\u65ad\u200b\u76f8\u673a\u200b\u6b63\u5728\u200b\u5411\u200b\u66f4\u200b\u8fdc\u200b\u7684\u200b\u8ddd\u79bb\u200b\u79fb\u52a8\u200b\u5462\u200b\uff1f\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>newDistances</code>\u200b\u548c\u200b\u5f53\u524d\u200b\u7684\u200b\u8ddd\u79bb\u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b\uff1a</p> <pre><code>// \u200b\u5411\u200b\u66f4\u200b\u8fd1\u200b\u7684\u200b\u8ddd\u79bb\u200b\u79fb\u52a8\u200b\nif (newDistance &lt; curDistance)\n{\n    curDistance = newDistance;\n}\n// \u200b\u5411\u200b\u66f4\u200b\u8fdc\u200b\u7684\u200b\u8ddd\u79bb\u200b\u79fb\u52a8\u200b\nelse if(newDistance &gt; curDistance)\n{\n}\n</code></pre> <p>\u200b\u90a3\u4e48\u200b\u5224\u65ad\u200b\u5230\u200b\u5411\u200b\u66f4\u200b\u8fdc\u8ddd\u79bb\u200b\u79fb\u52a8\u200b\u540e\u200b\uff0c\u200b\u5c31\u200b\u5f88\u200b\u76f4\u89c2\u200b\u4e86\u200b\uff0c\u200b\u76f4\u63a5\u200b\u52a0\u4e2a\u200b\u901f\u5ea6\u200b\u6765\u200b\u79fb\u52a8\u200b\uff1a</p> <p><pre><code>curDistance = Math.Min(curDistance + Time.deltaTime * autoZoomOutSpeed, newDistance);\n</code></pre> \u200b\u76f8\u673a\u200b\u7684\u200b\u5927\u81f4\u200b\u884c\u4e3a\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u5b8c\u6210\u200b\u4e86\u200b\uff0c\u200b\u8fd8\u6709\u200b\u4e00\u4e9b\u200b\u7ec6\u8282\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u3002</p>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#_5","title":"\u78b0\u5230\u200b\u521a\u4f53\u200b\u540e\u200b\u6eda\u8f6e\u200b\u62c9\u8fd1\u200b\uff0c\u200b\u5730\u9762\u200b\u4e0d\u200b\u7f29\u653e","text":"<p>\u200b\u8fd9\u91cc\u200b\u6709\u200b\u4e24\u4e2a\u200b\u8981\u6c42\u200b\uff1a</p> <ol> <li>\u200b\u78b0\u5230\u200b\u521a\u4f53\u200b\u540e\u200b\u53ea\u80fd\u200b\u62c9\u8fd1\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u62c9\u8fdc\u200b</li> <li>\u200b\u78b0\u5230\u200b\u5730\u9762\u200b\u540e\u200b\u4e0d\u80fd\u200b\u7f29\u653e\u200b</li> </ol> <p>\u200b\u9996\u5148\u200b\u7528\u200b\u53d8\u91cf\u200b\u6765\u200b\u4fdd\u5b58\u200b\u76f8\u673a\u200b\u7684\u200b\u78b0\u649e\u200b\u72b6\u6001\u200b\uff1a</p> <pre><code>bool isHitGround = false;       // \u200b\u8868\u793a\u200b\u662f\u5426\u200b\u78b0\u649e\u200b\u5730\u9762\u200b\nbool isHitObject = false;       // \u200b\u8868\u793a\u200b\u662f\u5426\u200b\u78b0\u649e\u200b\u521a\u4f53\u200b(\u200b\u9664\u5f00\u200b\u5730\u9762\u200b)\n</code></pre> <p>\u200b\u5728\u200b\u5224\u65ad\u200b\u6eda\u8f6e\u200b\u7f29\u653e\u200b\u7684\u200b\u65f6\u5019\u200b\u52a0\u4e0a\u200b\u6761\u4ef6\u200b\u5224\u65ad\u200b\uff1a</p> <pre><code>if (zoom != 0F &amp;&amp; (!isHitGround || (isHitObject &amp;&amp; zoom &gt; 0F)) )\n{\n    // calculate distance\n}\n</code></pre>","tags":["dev"]},{"location":"unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#_6","title":"\u78b0\u5230\u200b\u5730\u9762\u200b\u7ed5\u200b\u81ea\u8eab\u200b\u4e0a\u4e0b\u200b\u65cb\u8f6c","text":"<p>\u200b\u8fd9\u4e2a\u200b\u529f\u80fd\u200b\u5b9e\u73b0\u200b\u8d77\u6765\u200b\u6709\u70b9\u200b\u9ebb\u70e6\u200b\uff0c\u200b\u9700\u8981\u200b\u56e0\u4e3a\u200b\u8fd9\u65f6\u5019\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u5047\u8bbe\u200b\u76f8\u673a\u200b\u4e00\u76f4\u200b\u5bf9\u51c6\u200b\u4eba\u7269\u200b\u4e0d\u200b\u6210\u7acb\u200b\u4e86\u200b\uff0c\u200b\u8fd9\u65f6\u200b\u5206\u6210\u200b\u4e24\u4e2a\u200b\u5411\u91cf\u200b\uff1a\u200b\u76f8\u673a\u200b\u81ea\u8eab\u200b\u7684\u200b\u671d\u5411\u200b(<code>desireForward</code>)\u200b\u548c\u200b\u4eba\u7269\u200b\u5230\u200b\u76f8\u673a\u200b\u7684\u200b\u65b9\u5411\u200b(<code>cameraToPlayer</code>)\uff0c\u200b\u5206\u522b\u200b\u8ba1\u7b97\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u5411\u91cf\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u524d\u8005\u200b\u5c31\u200b\u51b3\u5b9a\u200b\u76f8\u673a\u200b\u7684\u200b\u671d\u5411\u200b\uff0c\u200b\u540e\u8005\u200b\u5c31\u200b\u51b3\u5b9a\u200b\u76f8\u673a\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002\u200b\u4e3a\u4e86\u200b\u65b9\u4fbf\u200b\uff0c\u200b\u628a\u200b\u4e0a\u200b\u4e00\u96c6\u200b\u7684\u200b\u65cb\u8f6c\u200b\u51fd\u6570\u200b\u62c6\u6210\u200bX\u200b\u65cb\u8f6c\u200b(<code>RotateX</code>)\u200b\u548c\u200bY\u200b\u65cb\u8f6c\u200b(<code>RotateY</code>)\uff0c\u200b\u90a3\u4e48\u200b\u5728\u200b\u8ba1\u7b97\u200b<code>cameraToPlayer</code>\u200b\u7684\u200b<code>RotateY</code>\u200b\u65f6\u200b\u52a0\u4e0a\u200b\u6761\u4ef6\u200b\uff1a</p> <pre><code>if ((!isHitGround) || \n    (isHitGround &amp;&amp; transform.forward.y &lt;= cameraToPlayer.y &amp;&amp; yAngle &gt; 0))\n{\n    cameraToPlayer = RotateY(cameraToPlayer, playerTransform.up, \n        transform.right, yAngle);\n}\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u6761\u4ef6\u200b\u6709\u200b\u4e24\u200b\u90e8\u5206\u200b\uff1a</p> <ul> <li>\u200b\u6ca1\u6709\u200b\u78b0\u5230\u200b\u5730\u9762\u200b</li> <li>\u200b\u78b0\u5230\u200b\u5730\u9762\u200b\uff0c\u200b\u4f46\u662f\u200b\u51c6\u5907\u200b\u79bb\u5f00\u200b\u5730\u9762\u200b</li> </ul> <p>\u200b\u7136\u540e\u200b\u7528\u200b<code>cameraToPlayer</code>\u200b\u8ba1\u7b97\u200b\u76f8\u673a\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff1a</p> <pre><code>transform.position = playerTransform.position - cameraToPlayer * curDistance;\n</code></pre> <p>\u200b\u5e76\u4e14\u200b\u5728\u200b\u6709\u200b\u9700\u8981\u200b\u7684\u200b\u65f6\u5019\u200b(\u200b\u4e5f\u200b\u5c31\u662f\u200b\u78b0\u5230\u200b\u5730\u9762\u200b)\u200b\u8ba1\u7b97\u200b\u76f8\u673a\u200b\u7684\u200b\u671d\u5411\u200b\uff1a</p> <pre><code>if (!isHitGround)\n{\n    transform.LookAt(playerTransform);\n}\nelse\n{\n    desireForward = RotateX(desireForward, playerTransform.up, xAngle);\n    desireForward = RotateY(desireForward, playerTransform.up, transform.right, yAngle);\n    transform.forward = desireForward;\n}\n</code></pre> <p>\u200b\u8fd9\u6837\u200b\u76f8\u673a\u200b\u7684\u200b\u884c\u4e3a\u200b\u6211\u4eec\u200b\u90fd\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u3002</p> <p>\u200b\u5b8c\u6574\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>using UnityEngine;\nusing System;\nusing System.Collections;\n\n// use a forward vector and distance to describe the camera position\npublic class MyThirdPersonCamera : MonoBehaviour {\n\n    private Transform playerTransform;      // reference to player\n\n    public float mouseWheelSensitivity = 3; // control zoom speed\n    public int mouseWheelZoomMin = 2;       // min distance\n    public int mouseWheelZoomMax = 10;      // max distance\n\n    public float rotateSpeed = 5F;          // speed of rotate around player    \n    public float autoZoomOutSpeed = 10F;    // speed of auto zoom out, camera will auto zoom out \n                                            // to pre distance when stop colliding object\n    float curDistance = 5F;                 // distance to player\n    float desiredDistance = 5F;             // distance should be      \n    bool isHitGround = false;               // hit ground flag\n    bool isHitObject = false;               // hit object(except ground) flag\n\n    // Use this for initialization\n    void Awake ()\n    {\n        playerTransform = transform.parent;\n    }\n\n    void Start () \n    {\n        transform.position = playerTransform.position - playerTransform.forward \n            * curDistance;\n        transform.LookAt(playerTransform);\n\n    }\n\n    // Update is called once per frame\n    void Update () \n    {\n        Vector3 cameraToPlayer = \n            (playerTransform.position - transform.position).normalized;\n\n        Vector3 desireForward = transform.forward;\n\n        // get new distance of zoom\n        desiredDistance = ZoomIt(curDistance, desiredDistance);\n\n        float xAngle, yAngle;\n        bool isRightDown;\n\n        // get mouse LB, RB status\n        GetMouseButtonStatus(out xAngle, out yAngle, out isRightDown);\n\n        // rotate camera by x-axis movement\n        cameraToPlayer = RotateX(cameraToPlayer, playerTransform.up, xAngle);\n\n        // if RB on, change player orientation\n        if (isRightDown)\n        {\n            playerTransform.forward = Vector3.Normalize(new Vector3(cameraToPlayer.\n                x, 0, cameraToPlayer.z));\n        }\n\n        // rotate camera by y-axis, if camera is not on ground or camera is going to leave ground\n        if ((!isHitGround) \n        || (isHitGround &amp;&amp; transform.forward.y &lt;= cameraToPlayer.y &amp;&amp; yAngle &gt; 0))\n        {\n            cameraToPlayer = RotateY(cameraToPlayer, playerTransform.up, transform.\n                right, yAngle);\n        }\n\n        // detect collision of camera to rigid body, get the distance camera should be\n        float newDistance = DealWithCollision(playerTransform.position, \n            -cameraToPlayer, desiredDistance,ref isHitGround, ref isHitObject);\n\n        // check the distance\n        if (newDistance &lt;= curDistance)\n        {\n            curDistance = newDistance;\n        }\n        else\n        {\n            // now moving to farther position, use a speed to move it\n            curDistance = Math.Min(curDistance + Time.deltaTime * autoZoomOutSpeed, \n                newDistance);\n        }\n\n        // now calculate the position\n        transform.position = playerTransform.position - cameraToPlayer * curDistance;\n\n        // calculate the camera forward, if on ground, camera will rotate on self.Space\n        if (!isHitGround)\n        {\n            transform.LookAt(playerTransform);\n        }\n        else\n        {\n            desireForward = RotateX(desireForward, playerTransform.up, xAngle);\n            desireForward = RotateY(desireForward, playerTransform.up, transform.\n                right, yAngle);\n            transform.forward = desireForward;\n        }\n    }\n\n    // zoom in and zoom out\n    float ZoomIt(float curDistance, float desiredDistance)\n    {\n        float zoom = Input.GetAxis(\"Mouse ScrollWheel\");\n\n        //  zoom when hit rigid body and zoom in, or not on ground\n        if (zoom != 0F &amp;&amp; (!isHitGround || (isHitObject &amp;&amp; zoom &gt; 0F)) )\n        {\n            float distance = curDistance;\n\n            distance -= zoom * mouseWheelSensitivity;\n            distance = Math.Min(mouseWheelZoomMax, Math.Max(mouseWheelZoomMin, distance));\n\n            return distance;\n        }\n        return desiredDistance;\n    }\n\n    // rotate oldPosition around a axis starting at axisPosition\n    Vector3 RotateAroundAxis(Vector3 point, float angle, Vector3 axis, Vector3 axisPosition)\n    {\n        Quaternion rotation = Quaternion.AngleAxis(angle, axis);\n        Vector3 offset = point - axisPosition;\n        return axisPosition + (rotation * offset);\n    }\n\n    void GetMouseButtonStatus(out float x, out float y, out bool isRightDown)\n    {\n        x = y = 0F;\n        isRightDown = false;\n        if (Input.GetMouseButton(0) ^ Input.GetMouseButton(1))\n        {\n            x = Input.GetAxis(\"Mouse X\") * rotateSpeed;\n            y = -Input.GetAxis(\"Mouse Y\") * rotateSpeed;\n            if (Input.GetMouseButton(1))\n            {\n                isRightDown = true;\n            }\n        }\n    }\n\n    // rotate vectorP2C(player to camera) around up while mouse x is on, return true if do rotate\n    Vector3 RotateX(Vector3 vectorP2C, Vector3 up, float angle)\n    {\n        Vector3 newVector = vectorP2C;\n        if (angle != 0F)\n        {\n            newVector = RotateAroundAxis(newVector, angle, up, Vector3.zero);\n        }\n        return newVector;\n    }\n\n    // rotate vectorP2C(player to camera) around right while mouse y is on, return true is do rotate\n    Vector3 RotateY(Vector3 vectorP2C, Vector3 up, Vector3 right, float angle)\n    {\n        Vector3 newVector = vectorP2C;\n        if (angle != 0F)\n        {\n            if ((Vector3.Dot(vectorP2C, up) &gt;= -0.99F || angle &lt; 0)\n                &amp;&amp; (Vector3.Dot(vectorP2C, up) &lt;= 0.99F || angle &gt; 0))\n            {\n                newVector = RotateAroundAxis(newVector, angle, right, Vector3.zero);\n            }\n        }\n        return newVector;\n    }\n\n    // return distance if no collision, else return distance to rigid body\n    float DealWithCollision(Vector3 origin, Vector3 direction, float distance, \n        ref bool ishitGround, ref bool ishitObject)\n    {\n        // collision detection\n        RaycastHit hitInfo;\n        float newDistance = distance;\n        if (Physics.Raycast(playerTransform.position, direction, out hitInfo, desiredDistance, 1))\n        {\n            if (hitInfo.collider is TerrainCollider)\n            {\n                ishitGround = true;\n                ishitObject = false;\n            }\n            else\n            {\n                ishitObject = true;\n                ishitGround = false;\n            }\n            newDistance = hitInfo.distance;\n        }\n        else\n        {\n            ishitGround = ishitObject = false;\n        }\n\n        return newDistance;\n    }\n}\n</code></pre> <p>\u200b\u539f\u6587\u200b\u5730\u5740\u200b\uff1ahttps://disenone.github.io/wiki</p> <p>\u200b\u672c\u7bc7\u200b\u6587\u7ae0\u200b\u53d7\u200b CC BY-NC-SA 4.0 \u200b\u534f\u8bae\u200b\u4fdd\u62a4\u200b\uff0c\u200b\u8f6c\u8f7d\u200b\u8bf7\u200b\u6ce8\u660e\u200b\u51fa\u5904\u200b\u3002</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p>","tags":["dev"]},{"location":"blog/","title":"Blog","text":""},{"location":"en/","title":"Disenone's Wiki","text":"<p>Never Stop</p> <p>Hi there~ Welcome to my knowledge base.</p> <p>To avoid forgetting and facilitate sharing, I collect knowledge here. Please feel free to browse~</p> <p>Programming Game Dev</p>"},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/","title":"C/C++ Macro Programming Analysis","text":"<p>The purpose of this text is to explain the rules and implementation methods of macro programming in C/C++, so that you no longer fear seeing macros in code. First, I will talk about the rules for macro expansion mentioned in C++ standard 14, then observe macro expansion by modifying Clang's source code, and finally discuss the implementation of macro programming based on this knowledge.</p> <p>The code for this article is available here: Download, Online Demo.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#introduction","title":"Introduction","text":"<p>We can execute the command <code>gcc -P -E a.cpp -o a.cpp.i</code> to instruct the compiler to perform only the preprocessing stage on the file <code>a.cpp</code> and save the result to <code>a.cpp.i</code>.</p> <p>First, let's look at some examples:</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#recursive-reentrancy","title":"Recursive Reentrancy (\u200b\u9012\u5f52\u200b\u91cd\u200b\u5165\u200b)","text":"<pre><code>#define ITER(arg0, arg1) ITER(arg1, arg0) \n\nITER(1, 2)          // -&gt; ITER(2, 1)\n</code></pre> <p>Macro <code>ITER</code> swaps the positions of <code>arg0</code> and <code>arg1</code>. After expanding the macro, we get <code>ITER(2, 1)</code>.</p> <p>It can be seen that the positions of <code>arg0</code> and <code>arg1</code> are successfully swapped here. The macro is expanded successfully once here, but only once, without further recursive re-entry. In other words, during the expansion process of the macro, it is not allowed to recursively re-enter itself. If it is found that the same macro has been expanded in a previous recursion, it will not be expanded again. This is one of the important rules of macro expansion. The reason for prohibiting recursive re-entry is also very simple, which is to avoid infinite recursion.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#string-concatenation","title":"String Concatenation","text":"<pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n\nCONCAT(Hello, World)                // -&gt; HelloWorld\nCONCAT(Hello, CONCAT(World, !))     // -&gt;\u3000HelloCONCAT(World, !)\n\nCONCAT(Hello, CONCAT(World, !))     // -&gt;\u3000HelloCONCAT(World, !)\n</code></pre> <p>The macro <code>CONCAT</code> is designed to concatenate <code>arg0</code> and <code>arg1</code>. After expanding the macro, <code>CONCAT(Hello, World)</code> will yield the correct result <code>HelloWorld</code>. However, when we use <code>CONCAT(Hello, CONCAT(World, !))</code>, only the outer macro is expanded, and the inner <code>CONCAT(World, !)</code> is not expanded but directly concatenated with <code>Hello</code>. This is different from what we expected. The desired result should be <code>HelloWorld!</code>. This is another important rule of macro expansion: macro arguments following the <code>##</code> operator will not be expanded, but will be directly concatenated with the preceding content.</p> <p>Through the above two examples, it can be seen that there are some counter-intuitive rules for macro expansion. If the specific rules are not clear, it is possible to write macros that do not achieve the desired effect.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#macro-expansion-rules","title":"Macro Expansion Rules","text":"<p>Through the two examples in the preface, we have learned that macro expansion follows a set of standard rules, which are defined in the C/C++ standard. The content is not extensive, but I recommend reading it carefully a few times. Here, I also provide a link to the n4296 version of the standard, where macro expansion is discussed in Section 16.3: Link. Now, let me highlight a few important rules from the n4296 version. These rules will determine how to correctly write macros (I still suggest taking the time to thoroughly read about macro expansion in the standard).</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#parameter-separation","title":"Parameter Separation","text":"<p>The parameters of the macro should be separated by commas, and the number of parameters should match the number of macro definitions. In the parameters passed to the macro, any content enclosed in parentheses is considered as one parameter, and parameters are allowed to be empty.</p> <pre><code>#define ADD_COMMA(arg1, arg2) arg1, arg2\n\nADD_COMMA(a, b)             // -&gt; a, b\nADD_COMMA(a)                // Error: \"macro 'MACRO' requires 2 arguments, but only 1 given\"\nADD_COMMA((a, b), c)        // -&gt; (a, b), c\nADD_COMMA(, b)              // -&gt; , b\n</code></pre> <p>In the expression <code>ADD_COMMA((a, b), c)</code>, <code>(a, b)</code> is considered as the first argument. In <code>ADD_COMMA(, b)</code>, the first argument is empty, so it expands to <code>, b</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#macro-parameter-expansion","title":"Macro Parameter Expansion","text":"<p>When expanding a macro, if the macro's parameters are also macros that can be expanded, the parameters will be fully expanded first before expanding the macro itself. For example:</p> <pre><code>ADD_COMMA(ADD_COMMA(1, 2), ADD_COMMA(3, 4))     // -&gt; 1, 2, 3, 4\n</code></pre> <p>In general, macro expansion can be understood as evaluating the arguments first, and then evaluating the macro, unless encountering the <code>#</code> and <code>##</code> operators.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#operator","title":"<code>#</code> Operator","text":"<p><code>#</code> The macro parameter followed by the operator will not be expanded, but will be directly stringized. For example:</p> <pre><code>#define STRINGIZE(arg0) # arg0\n\nSTRINGIZE(a)                // -&gt; \"a\"\nSTRINGIZE(STRINGIZE(a))     // -&gt; \"STRINGIZE(a)\"\n</code></pre> <p>According to this rule <code>STRINGIZE(STRINGIZE(a))</code> can only be expanded to <code>\"STRINGIZE(a)\"</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#operator_1","title":"<code>##</code> Operator","text":"<p><code>##</code> Macro parameters before and after the <code>##</code> operator will not be expanded, they will be directly concatenated. For example:</p> <pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n\nCONCAT(Hello, World)                        // -&gt; HelloWorld\nCONCAT(Hello, CONCAT(World, !))             // -&gt; HelloCONCAT(World, !)\nCONCAT(CONCAT(Hello, World) C, ONCAT(!))    // -&gt; CONCAT(Hello, World) CONCAT(!)\n</code></pre> <p><code>CONCAT(CONCAT(Hello, World) C, ONCAT(!))</code> can only be concatenated first to obtain <code>CONCAT(Hello, World) CONCAT(!)</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#repeat-scanning","title":"Repeat Scanning","text":"<p>After the preprocessor completes one round of macro expansion, it will rescan the resulting content and continue to expand it until there is no further expansion possible.</p> <p>One-level macro expansion can be understood as first fully expanding the parameters (unless encountering <code>#</code> and <code>##</code>), then based on the macro definition, replacing the macro and fully expanded parameters according to the definition, and then processing all <code>#</code> and <code>##</code> operators in the definition.</p> <pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n#define STRINGIZE(arg0) # arg0\n\nCONCAT(STRING, IZE(Hello))        // -&gt; STRINGIZE(Hello) -&gt; \"Hello\"\n</code></pre> <p><code>CONCAT(STRING, IZE(Hello))</code> is expanded to <code>STRINGIZE(Hello)</code> during the first scan, and then during the second scan it is found that <code>STRINGIZE</code> can be further expanded, resulting in <code>\"Hello\"</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#recursion-reentry-prohibited","title":"Recursion Reentry Prohibited","text":"<p>In the process of repeated scanning, it is prohibited to recursively expand the same macros. The expansion of macros can be understood as a tree-like structure, where the root node is the macro to be expanded initially. The content after expanding each macro serves as a child node connected to the tree. Therefore, prohibiting recursion means that when expanding the macros of the child nodes, if any of these macros are the same as any ancestor node's macro, the expansion is prohibited. Let's take a look at some examples:</p> <pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n#define CONCAT_SPACE(arg0, arg1) arg0 arg1\n#define IDENTITY(arg0) IDENTITY_IMPL(arg0)\n#define IDENTITY_IMPL(arg0) arg0\n\nCONCAT(CON, CAT(a, b))                  // -&gt; CONCAT(a, b)\nIDENTITY_IMPL(CONCAT(CON, CAT(a, b)))   // -&gt; CONCAT(a, b)\nIDENTITY(CONCAT(CON, CAT(a, b)))        // -&gt; IDENTITY_IMPL(CONCAT(a, b)) -&gt; CONCAT(a, b)\n</code></pre> <p><code>CONCAT(CON, CAT(a, b))</code>: Since <code>CONCAT</code> concatenates two arguments using <code>##</code>, according to the rules of <code>##</code>, the arguments will not be expanded and will be concatenated directly. Therefore, the first expansion results in <code>CONCAT(a, b)</code>. Since <code>CONCAT</code> has already been expanded, it will not be expanded recursively, and the process stops.</p> <p><code>IDENTITY_IMPL(CONCAT(CON, CAT(a, b)))</code>: <code>IDENTITY_IMPL</code> can be understood as evaluating the argument <code>arg0</code>. Here, the argument <code>arg0</code> is evaluated as <code>CONCAT(a, b)</code>. Because it is marked as non-reentrant due to recursion, the expansion of <code>IDENTITY_IMPL</code> is completed, and during the second scan, it is found that <code>CONCAT(a, b)</code> is non-reentrant, so the expansion stops. In this case, <code>CONCAT(a, b)</code> is obtained by expanding the argument <code>arg0</code>, and during subsequent expansions, it will also maintain the non-reentrant flag. It can be understood that the parent node is the argument <code>arg0</code> and it always maintains the non-reentrant flag.</p> <p><code>IDENTITY(CONCAT(CON, CAT(a, b)))</code>: This example is mainly intended to enhance understanding of parent and child nodes. When the parameters are expanded, the self is regarded as the parent node, and the expanded content is treated as the child node for recursive evaluation. After the expanded parameters are passed to the macro definition, the indication of non-reentrancy will continue to be retained (if the macro does not modify the expanded parameters after being passed). The expansion process of the parameters can be likened to another tree, and the result of parameter expansion is the bottom-most child node of the tree. This child node, when passed to the macro for execution, still maintains the non-reentrant characteristic.</p> <p>For example, here, after the first complete expansion, <code>IDENTITY_IMPL(CONCAT(a, b))</code> is obtained. <code>CONCAT(a, b)</code> is marked as non-reentrant, even though <code>IDENTITY_IMPL</code> evaluates its arguments, but the arguments have been forbidden to expand, so the arguments are passed unchanged into the definition, and in the end, we still get <code>CONCAT(a, b)</code>.</p> <p>The above is just a list of some rules that I think are important or that may be difficult to understand. For detailed macro expansion rules, I recommend taking some time to directly read the standard documentation.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#observing-the-expansion-process-through-clang","title":"Observing the expansion process through Clang","text":"<p>We can add some print statements to the Clang source code to observe the process of macro expansion. I don't intend to deeply explain the Clang source code here. Instead, I provide a modified file diff for those interested, who can compile Clang themselves for further study. The version of LLVM I used here is 11.1.0 (link). You can find the modified files here. Now let's validate the macro expansion rules we previously introduced through some examples.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#example-1","title":"Example 1","text":"<pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n\nCONCAT(C, ONCAT(a, b))      // CONCAT(a, b)\n</code></pre> <p>Use the modified Clang to preprocess the above code: <code>clang -P -E a.cpp -o a.cpp.i</code>, and you will get the following output:</p> <pre><code>HandleIdentifier: \nMacroInfo 0x559e57496900\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is ok to expand\n\nEnterMacro: 0\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x559e57496900 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nToken: 0\nidentifier: arg0\nArgs: [identifier: C]\nToken: 1\nhashhash: \nToken: 2\nidentifier: arg1\nArgs: [identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nLeave ExpandFunctionArguments: [identifier: C][hashhash: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\n\nLeaveMacro: 0\n\nHandleIdentifier: \nMacroInfo 0x559e57496900 disabled used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\n</code></pre> <p>In the <code>[1](#__codelineno-9-1)</code> line, when <code>HandleIdentifier</code> encounters a macro, it will print and then print the macro information (lines <code>[2-4](#__codelineno-9-2)</code>). Since the macro is not disabled, it can be expanded as defined, and then enter the macro <code>EnterMacro</code>.</p> <p>The function that actually performs macro expansion is <code>ExpandFunctionArguments</code>. Afterwards, the macro information to be expanded is printed again, noting that at this point the macro has been marked as <code>used</code> (line 9). Then, according to the definition of the macro, each <code>Token</code> is expanded individually (<code>Token</code> is a concept in Clang preprocessing, which will not be explained in detail here).</p> <p>The 0th <code>Token</code> is the formal parameter <code>arg0</code>, which corresponds to the actual argument <code>C</code>. It is determined that no expansion is needed, so it is directly copied to the result (line 11-13).</p> <p>The first <code>Token</code> is <code>hashhash</code>, which is the <code>##</code> operator, continue to copy it to the result (lines 14-15).</p> <p>The second <code>Token</code> is the formal parameter <code>arg1</code>, and its corresponding actual argument is <code>ONCAT(a, b)</code>. The preprocessor will also process the actual argument into individual <code>Tokens</code>, so you can see that the printed result is surrounded by brackets, representing each <code>Token</code> of the actual argument (line 18). Due to the usage of <code>##</code>, this actual argument does not need to be expanded, so it is directly copied to the result (lines 16-18).</p> <p>Finally, <code>Leave ExpandFunctionArguments</code> prints the result obtained from expanding the scan this time (line 19). Translating all the <code>Token</code> results gives us <code>C ## ONCAT(a, b)</code>, and then the preprocessor executes the <code>##</code> operator to generate new content.</p> <p><code>##</code> After execution, we obtain <code>CONCAT(a, b)</code>. When encountering the macro <code>CONCAT</code>, the preprocessor enters <code>HandleIdentifier</code> first and prints the information of the macro. It's found that the macro state is \"disable used\", indicating that it has already been expanded and further re-entry is prohibited. Thus, the message \"Macro is not ok to expand\" is displayed. The preprocessor stops expanding and the final result is <code>CONCAT(a, b)</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#example-2","title":"Example 2","text":"<pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n#define IDENTITY(arg0) arg0\n\nIDENTITY(CONCAT(C, ONCAT(a, b)))\n</code></pre> Clang Print Information (Click to expand): <pre><code>HandleIdentifier: \nMacroInfo 0x562a148f5a60\n    #define &lt;macro&gt;[2853:IDENTITY](arg0) arg0\nMacro is ok to expand\n\nHandleIdentifier: \nMacroInfo 0x562a148f5930\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\n\nEnterMacro: 0\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x562a148f5a60 used\n    #define &lt;macro&gt;[2853:IDENTITY](arg0) arg0\nToken: 0\nidentifier: arg0\nArgs: [identifier: CONCAT][l_paren: ][identifier: C][comma: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][r_paren: ]\ngetPreExpArgument: [identifier: CONCAT][l_paren: ][identifier: C][comma: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][r_paren: ][eof: ]\n\nHandleIdentifier: \nMacroInfo 0x562a148f5930\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is ok to expand\n\nEnterMacro: 1\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x562a148f5930 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nToken: 0\nidentifier: arg0\nArgs: [identifier: C]\nToken: 1\nhashhash: \nToken: 2\nidentifier: arg1\nArgs: [identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nLeave ExpandFunctionArguments: [identifier: C][hashhash: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\n\nLeaveMacro: 1\n\nHandleIdentifier: \nMacroInfo 0x562a148f5930 disabled used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\nResultArgToks: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nLeave ExpandFunctionArguments: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\n\nLeaveMacro: 0\n\nHandleIdentifier: \nMacroInfo 0x562a148f5930 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\n</code></pre> <p>Start expanding <code>IDENTITY</code> from line 12, and it is found that the parameter <code>Token 0</code> is <code>CONCAT(...)</code>, which is also a macro. Therefore, the evaluation of this parameter is performed first.</p> <p>The parameter macro <code>CONCAT(...)</code> starts to expand from line 27, similar to example 1. After multiple scans of expansion, <code>CONCAT(a, b)</code> is obtained (line 46).</p> <p>Finish expanding <code>IDENTITY</code> at 47 and obtain the result <code>CONCAT(a, b)</code>.</p> <p>Redefine line 51 to rescan <code>CONCAT(a, b)</code>. It is recognized as a macro, but it has already been set as <code>used</code> during the previous parameter expansion process. Therefore, it will no longer be recursively expanded and will be directly used as the final result.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#example-3","title":"Example 3","text":"<pre><code>#define CONCAT(arg0, arg1) arg0 ## arg1\n#define IDENTITY_IMPL(arg0) arg0\n#define IDENTITY(arg0) IDENTITY_IMPL(arg0)\n\nIDENTITY(CONCAT(C, ONCAT(a, b)))\n</code></pre> Clang Print Information (Click to expand): <pre><code>HandleIdentifier: \nMacroInfo 0x55e824457a80\n    #define &lt;macro&gt;[2853:IDENTITY_IMPL](arg0) arg0\n\nHandleIdentifier: \nMacroInfo 0x55e824457ba0\n    #define &lt;macro&gt;[2886:IDENTITY](arg0) IDENTITY_IMPL(arg0)\nMacro is ok to expand\n\nHandleIdentifier: \nMacroInfo 0x55e824457950\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\n\nEnterMacro: 0\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x55e824457ba0 used\n    #define &lt;macro&gt;[2886:IDENTITY](arg0) IDENTITY_IMPL(arg0)\nToken: 0\nidentifier: IDENTITY_IMPL\nToken: 1\nl_paren: \nToken: 2\nidentifier: arg0\nArgs: [identifier: CONCAT][l_paren: ][identifier: C][comma: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][r_paren: ]\ngetPreExpArgument: [identifier: CONCAT][l_paren: ][identifier: C][comma: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][r_paren: ][eof: ]\n\nHandleIdentifier: \nMacroInfo 0x55e824457950\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is ok to expand\n\nEnterMacro: 1\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x55e824457950 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nToken: 0\nidentifier: arg0\nArgs: [identifier: C]\nToken: 1\nhashhash: \nToken: 2\nidentifier: arg1\nArgs: [identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nLeave ExpandFunctionArguments: [identifier: C][hashhash: ][identifier: ONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\n\nLeaveMacro: 1\n\nHandleIdentifier: \nMacroInfo 0x55e824457950 disabled used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\nResultArgToks: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nToken: 3\nr_paren: \nLeave ExpandFunctionArguments: [identifier: IDENTITY_IMPL][l_paren: ][identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][r_paren: ]\n\nLeaveMacro: 0\n\nHandleIdentifier: \nMacroInfo 0x55e824457a80\n    #define &lt;macro&gt;[2853:IDENTITY_IMPL](arg0) arg0\nMacro is ok to expand\n\nHandleIdentifier: \nMacroInfo 0x55e824457950 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\n\nEnterMacro: 2\n\nEnter ExpandFunctionArguments: \nMacroInfo 0x55e824457a80 used\n    #define &lt;macro&gt;[2853:IDENTITY_IMPL](arg0) arg0\nToken: 0\nidentifier: arg0\nArgs: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\ngetPreExpArgument: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ][eof: ]\n\nHandleIdentifier: \nMacroInfo 0x55e824457950 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\nResultArgToks: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\nLeave ExpandFunctionArguments: [identifier: CONCAT][l_paren: ][identifier: a][comma: ][identifier: b][r_paren: ]\n\nLeaveMacro: 2\n\nHandleIdentifier: \nMacroInfo 0x55e824457950 used\n    #define &lt;macro&gt;[2813:CONCAT](arg0, arg1) arg0 ## arg1\nMacro is not ok to expand\n</code></pre> <p>The expansion of <code>IDENTITY</code> begins at line 16, similarly, the preprocessor sees that <code>Token 2</code> (i.e., <code>arg0</code>) is a macro, so it expands <code>CONCAT(C, ONCAT(a, b))</code> first.</p> <p>Expand <code>arg0</code> to get <code>CONCAT(a, b)</code> (lines 23-54).</p> <ul> <li><code>IDENTITY</code> eventually expands to <code>IDENTITY_IMPL(CONCAT(a, b))</code> (line 57).</li> </ul> <p>Re-scan and continue expanding <code>IDENTITY_IMPL</code> (lines 61-72), it is found that <code>Token 0</code> at this point is the macro <code>CONCAT(a, b)</code>, but it is in the <code>used</code> state. Stop expanding and return (lines 75-84), and the final result is still <code>CONCAT(a, b)</code> (line 85).</p> <p>Rescan the results and find that the status of the macro <code>CONCAT(a, b)</code> is <code>used</code>. Stop expansion and obtain the final result.</p> <p>Through the above three simple examples, we can roughly understand the process of macro expansion by the preprocessor. There will be no further discussion on the preprocessor here. If you are interested, you can study it by referring to the modified files I have provided.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#macro-programming-implementation","title":"Macro Programming Implementation","text":"<p>Next, let's move on to the main topic (the purpose of the lengthy previous paragraph was to provide a better understanding of macro expansion rules). Macro programming implementation.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#basic-symbols","title":"Basic Symbols","text":"<p>First, let's define the special symbols for macros, which will be used for evaluation and concatenation purposes.</p> <pre><code>#define PP_LPAREN() (\n#define PP_RPAREN() )\n#define PP_COMMA() ,\n#define PP_EMPTY() \n#define PP_HASHHASH # ## #      // Represents the string \"##\", but only as a string, it will not be treated as the ## operator\n</code></pre>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#evaluate","title":"Evaluate","text":"<p>By utilizing the rule of parameter expansion, it is possible to write a macro for evaluation:</p> <pre><code>#define PP_IDENTITY(arg0) arg0\n\nPP_COMMA PP_LPAREN() PP_RPAREN()                // -&gt; PP_COMMA ( )\nPP_IDENTITY(PP_COMMA PP_LPAREN() PP_RPAREN())   // -&gt; PP_COMMA() -&gt; ,\n</code></pre> <p>If you simply write <code>PP_COMMA PP_LPAREN() PP_RPAREN()</code>, the preprocessor will only process each macro separately and will not merge the results of expansion. By adding <code>PP_IDENTITY</code>, the preprocessor can evaluate the expanded result of <code>PP_COMMA()</code> to obtain <code>,</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#concatenate","title":"Concatenate","text":"<p>To ensure that the parameters are evaluated before concatenation when using <code>##</code>, you can write it like this:</p> <pre><code>#define PP_CONCAT(arg0, arg1) PP_CONCAT_IMPL(arg0, arg1)\n#define PP_CONCAT_IMPL(arg0, arg1) arg0 ## arg1\n\nPP_CONCAT(PP_IDENTITY(1), PP_IDENTITY(2))         // -&gt; 12\nPP_CONCAT_IMPL(PP_IDENTITY(1), PP_IDENTITY(2))    // -&gt; PP_IDENTITY(1)PP_IDENTITY(2) -&gt; Error\n</code></pre> <p>The method used here by <code>PP_CONCAT</code> is called delayed concatenation. When expanded to <code>PP_CONCAT_IMPL</code>, both <code>arg0</code> and <code>arg1</code> are first expanded and evaluated before being concatenated by <code>PP_CONCAT_IMPL</code> for the actual concatenation operation.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#logical-operations","title":"Logical Operations","text":"<p>With the help of <code>PP_CONCAT</code>, logical operations can be achieved. First, define the <code>BOOL</code> value:</p> <pre><code>#define PP_BOOL(arg0) PP_CONCAT(PP_BOOL_, arg0)\n#define PP_BOOL_0 0\n#define PP_BOOL_1 1\n#define PP_BOOL_2 1\n#define PP_BOOL_3 1\n// ...\n#define PP_BOOL_256 1\n\nPP_BOOL(3)              // -&gt; PP_BOOL_3 -&gt; 1\n</code></pre> <p>Use <code>PP_CONCAT</code> to concatenate <code>PP_BOOL_</code> and <code>arg0</code> together, then evaluate the concatenated result. Here, <code>arg0</code> needs to be a number in the range of <code>[0, 256]</code> after evaluation. By evaluating it after concatenating with <code>PP_BOOL_</code>, a boolean value can be obtained. The operations include logical AND, OR, and NOT:</p> <pre><code>#define PP_NOT(arg0) PP_CONCAT(PP_NOT_, PP_BOOL(arg0))\n#define PP_NOT_0 1\n#define PP_NOT_1 0\n\n#define PP_AND(arg0, arg1) PP_CONCAT(PP_AND_, PP_CONCAT(PP_BOOL(arg0), PP_BOOL(arg1)))\n#define PP_AND_00 0\n#define PP_AND_01 0\n#define PP_AND_10 0\n#define PP_AND_11 1\n\n#define PP_OR(arg0, arg1) PP_CONCAT(PP_OR_, PP_CONCAT(PP_BOOL(arg0), PP_BOOL(arg1)))\n#define PP_OR_00 0\n#define PP_OR_01 1\n#define PP_OR_10 1\n#define PP_OR_11 1\n\nPP_NOT(PP_BOOL(2))      // -&gt; PP_CONCAT(PP_NOT_, 1) -&gt; PP_NOT_1 -&gt; 0\nPP_AND(2, 3)            // -&gt; PP_CONCAT(PP_AND_, 11) -&gt; PP_AND_11 -&gt; 1\nPP_AND(2, 0)            // -&gt; PP_CONCAT(PP_AND_, 10) -&gt; PP_AND_10 -&gt; 0\nPP_OR(2, 0)             // -&gt; PP_CONCAT(PP_OR_, 10) -&gt; PP_OR_10, -&gt; 1\n</code></pre> <p>First, evaluate the parameter using <code>PP_BOOL</code>, and then concatenate the results of logical operations based on the combination of <code>0</code> and <code>1</code>. If <code>PP_BOOL</code> is not used for evaluation, the parameter will only support the values <code>0</code> and <code>1</code>, greatly reducing its usability. Similarly, you can also write operations such as XOR, OR, and NOT. If you are interested, you can try it yourself.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#conditions-selection","title":"Conditions Selection","text":"<p>By using <code>PP_BOOL</code> and <code>PP_CONCAT</code>, we can also write conditional selection statements:</p> <pre><code>#define PP_IF(if, then, else) PP_CONCAT(PP_IF_, PP_BOOL(if))(then, else)\n#define PP_IF_1(then, else) then\n#define PP_IF_0(then, else) else\n\nPP_IF(1, 2, 3)      // -&gt; PP_IF_1(2, 3) -&gt; 2\nPP_IF(0, 2, 3)      // -&gt; PP_IF_0(2, 3) -&gt; 3\n</code></pre> <p>If the evaluation of <code>if</code> is <code>1</code>, it is concatenated with <code>PP_CONCAT</code> to form <code>PP_IF_1</code>, and finally expands to the value of <code>then</code>. Similarly, if the evaluation of <code>if</code> is <code>0</code>, it results in <code>PP_IF_0</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#increment-and-decrement","title":"Increment and Decrement","text":"<p>Integer Increment and Decrement:</p> <pre><code>#define PP_INC(arg0) PP_CONCAT(PP_INC_, arg0)\n#define PP_INC_0 1\n#define PP_INC_1 2\n#define PP_INC_2 3\n#define PP_INC_3 4\n// ...\n#define PP_INC_255 256\n#define PP_INC_256 256\n\n#define PP_DEC(arg0) PP_CONCAT(PP_DEC_, arg0)\n#define PP_DEC_0 0\n#define PP_DEC_1 0\n#define PP_DEC_2 1\n#define PP_DEC_3 2\n// ...\n#define PP_DEC_255 254\n#define PP_DEC_256 255\n\nPP_INC(2)                   // -&gt; PP_INC_2 -&gt; 3\nPP_DEC(3)                   // -&gt; PP_DEC_3 -&gt; 2\n</code></pre> <p>Similar to <code>PP_BOOL</code>, the increment and decrement of integers also have range restrictions. Here, the range is set to <code>[0, 256]</code>. After reaching <code>256</code>, for safety reasons, <code>PP_INC_256</code> will return itself <code>256</code> as the boundary. Similarly, <code>PP_DEC_0</code> will also return <code>0</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#variable-length-arguments","title":"Variable-length arguments","text":"<p>Macros can accept variable-length parameters in the following format:</p> <pre><code>#define LOG(format, ...) printf(\"log: \" format, __VA_ARGS__)\n\nLOG(\"Hello %s\\n\", \"World\")      // -&gt; printf(\"log: \" \"Hello %s\\n\", \"World\");\nLOG(\"Hello World\") // -&gt; printf(\"log: \" \"Hello World\", ); An extra comma is added, resulting in a compilation error.\n</code></pre> <p>Due to the possibility of variable-length parameters being empty, their emptiness can lead to compilation failures. Therefore, C++ 20 introduced <code>__VA_OPT__</code>. If the variable-length parameters are empty, it will return empty; otherwise, it will return the original parameters.</p> <pre><code>#define LOG2(format, ...) printf(\"log: \" format __VA_OPT__(,) __VA_ARGS__)\n\nLOG2(\"Hello %s\\n\", \"World\")      // -&gt; printf(\"log: \" \"Hello %s\\n\", \"World\");\nLOG2(\"Hello World\")              // -&gt; printf(\"log: \" \"Hello World\" ); No comma, compiles normally\n</code></pre> <p>Unfortunately, this macro is only available in the C++ 20 standard or higher. In the following text, we will provide the implementation method for <code>__VA_OPT__</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#lazy-evaluation","title":"Lazy Evaluation","text":"<p>Consider this situation:</p> <pre><code>PP_IF(1, PP_COMMA(), PP_LPAREN())     // -&gt; PP_IF_1(,,)) -&gt; Error: unterminated argument list invoking macro \"PP_IF_1\"\n</code></pre> <p>We know that when macro expansion occurs, the initial arguments are evaluated. After the evaluation of <code>PP_COMMA()</code> and <code>PP_LPAREN()</code>, the result is then passed to <code>PP_IF_1</code> as <code>PP_IF_1(,,))</code>, resulting in a preprocessing error. In this situation, a method called lazy evaluation can be used.</p> <pre><code>PP_IF(1, PP_COMMA, PP_LPAREN)()       // -&gt; PP_IF_1(PP_COMMA, PP_LPAREN)() -&gt; PP_COMMA() -&gt; ,\n</code></pre> <p>Change it to this writing style, only pass the name of the macro. Let <code>PP_IF</code> select the necessary macro name, then concatenate it with parentheses <code>()</code> to form a complete macro, and finally expand it. Lazy evaluation is also common in macro programming.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#starts-with-a-bracket","title":"Starts with a bracket","text":"<p>Check if the variable-length parameters start with parentheses:</p> <pre><code>#define PP_IS_BEGIN_PARENS(...) \\\n    PP_IS_BEGIN_PARENS_PROCESS( \\\n        PP_IS_BEGIN_PARENS_CONCAT( \\\n            PP_IS_BEGIN_PARENS_PRE_, PP_IS_BEGIN_PARENS_EAT __VA_ARGS__ \\\n        ) \\\n    )\n\n#define PP_IS_BEGIN_PARENS_PROCESS(...) PP_IS_BEGIN_PARENS_PROCESS_0(__VA_ARGS__)\n#define PP_IS_BEGIN_PARENS_PROCESS_0(arg0, ...) arg0\n\n#define PP_IS_BEGIN_PARENS_CONCAT(arg0, ...) PP_IS_BEGIN_PARENS_CONCAT_IMPL(arg0, __VA_ARGS__)\n#define PP_IS_BEGIN_PARENS_CONCAT_IMPL(arg0, ...) arg0 ## __VA_ARGS__\n\n#define PP_IS_BEGIN_PARENS_PRE_1 1,\n#define PP_IS_BEGIN_PARENS_PRE_PP_IS_BEGIN_PARENS_EAT 0,\n#define PP_IS_BEGIN_PARENS_EAT(...) 1\n\nPP_IS_BEGIN_PARENS(())              // -&gt; 1\nPP_IS_BEGIN_PARENS((()))            // -&gt; 1\nPP_IS_BEGIN_PARENS(a, b, c)         // -&gt; 0\nPP_IS_BEGIN_PARENS(a, ())           // -&gt; 0\nPP_IS_BEGIN_PARENS(a())             // -&gt; 0\nPP_IS_BEGIN_PARENS(()aa(bb()cc))    // -&gt; 1\nPP_IS_BEGIN_PARENS(aa(bb()cc))      // -&gt; 0\n</code></pre> <p>The <code>PP_IS_BEGIN_PARENS</code> can be used to determine if the incoming parameter starts with parentheses. It is useful when dealing with parentheses parameters, as mentioned later with the <code>__VA_OPT__</code> implementation. It may seem a bit complex, but the main idea is to construct a macro that evaluates a certain result when the variadic parameters start with parentheses and a different result when they don't. Let's take a closer look:</p> <p>The macro formed by <code>PP_IS_BEGIN_PARENS_PROCESS</code> and <code>PP_IS_BEGIN_PARENS_PROCESS_0</code> is used to evaluate the variadic arguments that are passed in, and then retrieve the 0th argument.</p> <p>Translate these text into English language:</p> <p><code>PP_IS_BEGIN_PARENS_CONCAT(PP_IS_BEGIN_PARENS_PRE_, PP_IS_BEGIN_PARENS_EAT __VA_ARGS__)</code> is first evaluated by applying <code>PP_IS_BEGIN_PARENS_EAT __VA_ARGS__</code>, then the evaluation result is concatenated with <code>PP_IS_BEGIN_PARENS_PRE_</code>.</p> <p>The macro <code>PP_IS_BEGIN_PARENS_EAT(...)</code> will consume all its arguments and return 1. If in the previous step, <code>__VA_ARGS__</code> starts with parentheses, it will match the evaluation of <code>PP_IS_BEGIN_PARENS_EAT(...)</code>, and then return 1. On the other hand, if it does not start with parentheses, it will not match and <code>PP_IS_BEGIN_PARENS_EAT __VA_ARGS__</code> will remain unchanged.</p> <p>If <code>PP_IS_BEGIN_PARENS_EAT __VA_ARGS__</code> evaluates to <code>1</code>, <code>PP_IS_BEGIN_PARENS_CONCAT(PP_IS_BEGIN_PARENS_PRE_, 1) -&gt; PP_IS_BEGIN_PARENS_PRE_1 -&gt; 1,</code> note that there is a comma after <code>1</code>, pass <code>1,</code> to <code>PP_IS_BEGIN_PARENS_PROCESS_0</code>, take the 0th argument, and finally obtain <code>1</code>, indicating that the argument starts with parentheses.</p> <p>If <code>PP_IS_BEGIN_PARENS_EAT __VA_ARGS__</code> evaluates to something other than <code>1</code>, but remains unchanged, then <code>PP_IS_BEGIN_PARENS_CONCAT(PP_IS_BEGIN_PARENS_PRE_, PP_IS_BEGIN_PARENS_EAT __VA_ARGS__) -&gt; PP_IS_BEGIN_PARENS_PRE_PP_IS_BEGIN_PARENS_EAT __VA_ARGS__ -&gt; 0, __VA_ARGS__</code> is passed to <code>PP_IS_BEGIN_PARENS_PROCESS_0</code> and yields <code>0</code>, indicating that the argument does not begin with parentheses.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#variable-length-parameter-null","title":"Variable-length parameter null","text":"<p>To determine if variable arguments are empty is also a common macro, which is required when implementing <code>__VA_OPT__</code>. Here we can utilize <code>PP_IS_BEGIN_PARENS</code> to write an incomplete version:</p> <pre><code>#define PP_IS_EMPTY_PROCESS(...) \\\n    PP_IS_BEGIN_PARENS(PP_IS_EMPTY_PROCESS_EAT __VA_ARGS__ ())\n#define PP_IS_EMPTY_PROCESS_EAT(...) ()\n\nPP_IS_EMPTY_PROCESS()       // -&gt; 1\nPP_IS_EMPTY_PROCESS(1)      // -&gt; 0\nPP_IS_EMPTY_PROCESS(1, 2)   // -&gt; 0\nPP_IS_EMPTY_PROCESS(())     // -&gt; 1\n</code></pre> <p>The purpose of <code>PP_IS_EMPTY_PROCESS</code> is to determine whether <code>PP_IS_EMPTY_PROCESS_EAT __VA_ARGS__ ()</code> starts with parentheses.</p> <p>If <code>__VA_ARGS__</code> is empty, <code>PP_IS_EMPTY_PROCESS_EAT __VA_ARGS__ () -&gt; PP_IS_EMPTY_PROCESS_EAT() -&gt; ()</code>, the result is a pair of parentheses <code>()</code>, which is then passed to <code>PP_IS_BEGIN_PARENS</code> to return <code>1</code>, indicating that the parameter is empty.</p> <p>Otherwise, <code>PP_IS_EMPTY_PROCESS_EAT __VA_ARGS__()</code> passes unchanged to <code>PP_IS_BEGIN_PARENS</code>, returning 0 indicating non-empty.</p> <p>Pay attention to the fourth example <code>PP_IS_EMPTY_PROCESS(()) -&gt; 1</code>, <code>PP_IS_EMPTY_PROCESS</code> cannot handle variable-length arguments that start with parentheses correctly, because in this case the parentheses introduced by the variable-length arguments will match <code>PP_IS_EMPTY_PROCESS_EAT</code> and result in the evaluation of <code>()</code>. To solve this problem, we need to differentiate the cases where the arguments start with parentheses:</p> <pre><code>#define PP_IS_EMPTY(...) \\\n    PP_IS_EMPTY_IF(PP_IS_BEGIN_PARENS(__VA_ARGS__)) \\\n        (PP_IS_EMPTY_ZERO, PP_IS_EMPTY_PROCESS)(__VA_ARGS__)\n\n#define PP_IS_EMPTY_IF(if) PP_CONCAT(PP_IS_EMPTY_IF_, if)\n#define PP_IS_EMPTY_IF_1(then, else) then\n#define PP_IS_EMPTY_IF_0(then, else) else\n\n#define PP_IS_EMPTY_ZERO(...) 0\n\nPP_IS_EMPTY()       // -&gt; 1\nPP_IS_EMPTY(1)      // -&gt; 0\nPP_IS_EMPTY(1, 2)   // -&gt; 0\nPP_IS_EMPTY(())     // -&gt; 0\n</code></pre> <p><code>PP_IS_EMPTY_IF</code> returns the 0th or 1st argument based on the <code>if</code> condition.</p> <p>If the variable-length parameter passed in begins with parentheses, <code>PP_IS_EMPTY_IF</code> returns <code>PP_IS_EMPTY_ZERO</code>, and finally returns <code>0</code> to indicate that the variable-length parameter is not empty.</p> <p>On the other hand, <code>PP_IS_EMPTY_IF</code> returns <code>PP_IS_EMPTY_PROCESS</code>, and finally <code>PP_IS_EMPTY_PROCESS</code> determines whether the variable-length parameter is empty.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#subscript-access","title":"Subscript Access","text":"<p>Accessing elements at specified positions in variable-length parameters:</p> <pre><code>#define PP_ARGS_ELEM(I, ...) PP_CONCAT(PP_ARGS_ELEM_, I)(__VA_ARGS__)\n#define PP_ARGS_ELEM_0(a0, ...) a0\n#define PP_ARGS_ELEM_1(a0, a1, ...) a1\n#define PP_ARGS_ELEM_2(a0, a1, a2, ...) a2\n#define PP_ARGS_ELEM_3(a0, a1, a2, a3, ...) a3\n// ...\n#define PP_ARGS_ELEM_7(a0, a1, a2, a3, a4, a5, a6, a7, ...) a7\n#define PP_ARGS_ELEM_8(a0, a1, a2, a3, a4, a5, a6, a7, a8, ...) a8\n\nPP_ARGS_ELEM(0, \"Hello\", \"World\")   // -&gt; PP_ARGS_ELEM_0(\"Hello\", \"World\") -&gt; \"Hello\"\nPP_ARGS_ELEM(1, \"Hello\", \"World\")   // -&gt; PP_ARGS_ELEM_1(\"Hello\", \"World\") -&gt; \"World\"\n</code></pre> <p>The first argument of <code>PP_ARGS_ELEM</code> is the element index <code>I</code>, followed by a variable number of arguments. By using <code>PP_CONCAT</code> to concatenate <code>PP_ARGS_ELEM_</code> and <code>I</code>, we can obtain the macro <code>PP_ARGS_ELEM_0..8</code> that returns the element at the corresponding position. Then, pass the variable arguments to this macro to expand and return the element corresponding to the index.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#pp_is_empty2","title":"PP_IS_EMPTY2","text":"<p>With <code>PP_ARGS_ELEM</code>, it is also possible to implement another version of <code>PP_IS_EMPTY</code>:</p> <pre><code>#define PP_IS_EMPTY2(...) \\\n    PP_AND( \\\n        PP_AND( \\\n            PP_NOT(PP_HAS_COMMA(__VA_ARGS__)), \\\n            PP_NOT(PP_HAS_COMMA(__VA_ARGS__())) \\\n        ), \\\n        PP_AND( \\\n            PP_NOT(PP_HAS_COMMA(PP_COMMA_ARGS __VA_ARGS__)), \\\n            PP_HAS_COMMA(PP_COMMA_ARGS __VA_ARGS__ ()) \\\n        ) \\\n    )\n\n#define PP_HAS_COMMA(...) PP_ARGS_ELEM(8, __VA_ARGS__, 1, 1, 1, 1, 1, 1, 1, 0)\n#define PP_COMMA_ARGS(...) ,\n\nPP_IS_EMPTY2()              // -&gt; 1\nPP_IS_EMPTY2(a)             // -&gt; 0\nPP_IS_EMPTY2(a, b)          // -&gt; 0\nPP_IS_EMPTY2(())            // -&gt; 0\nPP_IS_EMPTY2(PP_COMMA)      // -&gt; 0\n</code></pre> <p>Use <code>PP_ARGS_ELEM</code> to implement the judgment of whether a parameter contains a comma <code>PP_HAS_COMMA</code>. <code>PP_COMMA_ARGS</code> will swallow any arguments passed in and return a comma.</p> <p>The basic logic for determining whether a variable-length parameter is empty is <code>PP_COMMA_ARGS __VA_ARGS__ ()</code>, which returns a comma, indicating that <code>__VA_ARGS__</code> is empty. <code>PP_COMMA_ARGS</code> and <code>()</code> are concatenated and evaluated together, and the specific syntax is <code>PP_HAS_COMMA(PP_COMMA_ARGS __VA_ARGS__ ())</code>.</p> <p>However, there may be exceptions:</p> <ul> <li><code>__VA_ARGS__</code> itself may bring commas;</li> <li><code>__VA_ARGS__ ()</code> concatenates together causing comma during evaluation;</li> <li><code>PP_COMMA_ARGS __VA_ARGS__</code> concatenates together causing comma during evaluation;</li> </ul> <p>The above-mentioned three exceptional cases need to be excluded, so the final expression is equivalent to executing the logical AND operation on the following four conditions:</p> <ul> <li><code>PP_NOT(PP_HAS_COMMA(__VA_ARGS__))</code> &amp;&amp;</li> <li><code>PP_NOT(PP_HAS_COMMA(__VA_ARGS__()))</code> &amp;&amp;</li> <li><code>PP_NOT(PP_HAS_COMMA(PP_COMMA_ARGS __VA_ARGS__))</code> &amp;&amp;</li> <li><code>PP_HAS_COMMA(PP_COMMA_ARGS __VA_ARGS__ ())</code></li> </ul>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#__va_opt__","title":"<code>__VA_OPT__</code>","text":"<p>Finally, <code>PP_IS_EMPTY</code> can be used to implement macros similar to <code>__VA_OPT__</code>:</p> <pre><code>#define PP_REMOVE_PARENS(tuple) PP_REMOVE_PARENS_IMPL tuple\n#define PP_REMOVE_PARENS_IMPL(...) __VA_ARGS__\n\n#define PP_ARGS_OPT(data_tuple, empty_tuple, ...) \\\n    PP_ARGS_OPT_IMPL(PP_IF(PP_IS_EMPTY(__VA_ARGS__), empty_tuple, data_tuple))\n#define PP_ARGS_OPT_IMPL(tuple) PP_REMOVE_PARENS(tuple)\n\nPP_ARGS_OPT((data), (empty))        // -&gt; empty\nPP_ARGS_OPT((data), (empty), 1)     // -&gt; data\nPP_ARGS_OPT((,), (), 1)             // -&gt; ,\n</code></pre> <p><code>PP_ARGS_OPT</code> accepts two fixed arguments and a variable number of arguments. When the variable arguments are not empty, it returns <code>data</code>; otherwise, it returns <code>empty</code>. To support commas in <code>data</code> and <code>empty</code>, both of them need to be enclosed in parentheses with actual arguments, and finally, <code>PP_REMOVE_PARENS</code> is used to remove the outer parentheses.</p> <p>With <code>PP_ARGS_OPT</code>, it is possible to achieve the functionality implemented by <code>LOG2</code> using <code>LOG3</code>.</p> <pre><code>#define LOG3(format, ...) \\\n    printf(\"log: \" format PP_ARGS_OPT((,), (), __VA_ARGS__) __VA_ARGS__)\n\nLOG3(\"Hello\");                  // -&gt; printf(\"log: \" \"Hello\" );\nLOG3(\"Hello %s\", \"World\");      // -&gt; printf(\"log: \" \"Hello %s\" , \"World\");\n</code></pre> <p><code>data_tuple</code> is <code>(,)</code>, if the variable-length arguments are not empty, it will return all the elements in <code>data_tuple</code>, which in this case is the comma <code>,</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#requesting-the-number-of-parameters","title":"Requesting the number of parameters","text":"<p>Get the number of variable arguments:</p> <pre><code>#define PP_ARGS_SIZE_IMCOMPLETE(...) \\\n    PP_ARGS_ELEM(8, __VA_ARGS__, 8, 7, 6, 5, 4, 3, 2, 1, 0)\n\nPP_ARGS_SIZE_IMCOMPLETE(a)             // -&gt; 1\nPP_ARGS_SIZE_IMCOMPLETE(a, b)          // -&gt; 2\nPP_ARGS_SIZE_IMCOMPLETE(PP_COMMA())    // -&gt; 2\nPP_ARGS_SIZE_IMCOMPLETE()              // -&gt; 1\n</code></pre> <p>The number of variable length parameters is obtained by counting the position of the parameters. <code>__VA_ARGS__</code> will cause all subsequent parameters to shift to the right. To retrieve the 8th positional parameter, use the macro <code>PP_ARGS_ELEM</code>. If <code>__VA_ARGS__</code> has only one parameter, then the 8th parameter is equal to <code>1</code>; similarly, if <code>__VA_ARGS__</code> has two parameters, then the 8th parameter becomes <code>2</code>, which coincidentally equals the number of variable length parameters.</p> <p>The examples provided here only support a maximum number of 8 variable arguments, which depends on the maximum length supported by <code>PP_ARGS_ELEM</code>.</p> <p>But this macro is not complete yet. In the case where the variable-length arguments are empty, this macro will incorrectly return <code>1</code>. If it is required to handle empty variable-length arguments, the <code>PP_ARGS_OPT</code> macro mentioned earlier needs to be used.</p> <pre><code>#define PP_COMMA_IF_ARGS(...) PP_ARGS_OPT((,), (), __VA_ARGS__)\n#define PP_ARGS_SIZE(...) PP_ARGS_ELEM(8, __VA_ARGS__ PP_COMMA_IF_ARGS(__VA_ARGS__) 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0)\n\nPP_ARGS_SIZE(a)             // -&gt; 1\nPP_ARGS_SIZE(a, b)          // -&gt; 2\nPP_ARGS_SIZE(PP_COMMA())    // -&gt; 2\nPP_ARGS_SIZE()              // -&gt; 0\nPP_ARGS_SIZE(,,,)           // -&gt; 4\n</code></pre> <p>The key issue lies in the comma <code>,</code> which, when <code>__VA_ARGS__</code> is empty, should be omitted in order to correctly return <code>0</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#traversal-access","title":"Traversal Access","text":"<p>Similar to C++'s <code>for_each</code>, we can implement the macro <code>PP_FOR_EACH</code>:</p> <pre><code>#define PP_FOR_EACH(macro, contex, ...) \\\n    PP_CONCAT(PP_FOR_EACH_, PP_ARGS_SIZE(__VA_ARGS__))(0, macro, contex, __VA_ARGS__)\n\n#define PP_FOR_EACH_0(index, macro, contex, ...)\n#define PP_FOR_EACH_1(index, macro, contex, arg, ...) macro(index, contex, arg)\n\n#define PP_FOR_EACH_2(index, macro, contex, arg, ...) \\\n    macro(index, contex, arg) \\\n    PP_FOR_EACH_1(PP_INC(index), macro, contex, __VA_ARGS__)\n\n#define PP_FOR_EACH_3(index, macro, contex, arg, ...) \\\n    macro(index, contex, arg) \\\n    PP_FOR_EACH_2(PP_INC(index), macro, contex, __VA_ARGS__)\n// ...\n#define PP_FOR_EACH_8(index, macro, contex, arg, ...) \\\n    macro(index, contex, arg) \\\n    PP_FOR_EACH_7(PP_INC(index), macro, contex, __VA_ARGS__)\n\n#define DECLARE_EACH(index, contex, arg)    PP_IF(index, PP_COMMA, PP_EMPTY)() contex arg\n\nPP_FOR_EACH(DECLARE_EACH, int, x, y, z);    // -&gt; int x, y, z;\nPP_FOR_EACH(DECLARE_EACH, bool, a, b);      // -&gt; bool a, b;\n</code></pre> <p><code>PP_FOR_EACH</code> receives two fixed parameters: <code>macro</code>, which can be understood as the macro to be called during the iteration, and <code>context</code>, which can be passed as a fixed value parameter to <code>macro</code>. <code>PP_FOR_EACH</code> first obtains the length <code>N</code> of the variable arguments using <code>PP_ARGS_SIZE</code>, and then concatenates it with <code>PP_CONCAT</code> to obtain <code>PP_FOR_EACH_N</code>. Afterwards, <code>PP_FOR_EACH_N</code> iteratively calls <code>PP_FOR_EACH_N-1</code> to achieve the same number of iterations as the number of variable arguments.</p> <p>In the example, we declare <code>DECLARE_EACH</code> as the <code>macro</code> parameter. The purpose of <code>DECLARE_EACH</code> is to return <code>contex arg</code>, where <code>contex</code> is the name of a type and <code>arg</code> is the name of a variable. <code>DECLARE_EACH</code> can be used to declare variables.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#conditional-loop","title":"Conditional Loop","text":"<p>After having <code>FOR_EACH</code>, we can also write <code>PP_WHILE</code> using a similar syntax.</p> <pre><code>#define PP_WHILE PP_WHILE_1\n\n#define PP_WHILE_1(pred, op, val) PP_WHILE_1_IMPL(PP_BOOL(pred(val)), pred, op, val)\n#define PP_WHILE_1_IMPL(cond, pred, op, val) \\\n    PP_IF(cond, PP_WHILE_2, val PP_EMPTY_EAT)(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))\n\n#define PP_WHILE_2(pred, op, val) PP_WHILE_2_IMPL(PP_BOOL(pred(val)), pred, op, val)\n#define PP_WHILE_2_IMPL(cond, pred, op, val) \\\n    PP_IF(cond, PP_WHILE_3, val PP_EMPTY_EAT)(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))\n\n#define PP_WHILE_3(pred, op, val) PP_WHILE_3_IMPL(PP_BOOL(pred(val)), pred, op, val)\n#define PP_WHILE_3_IMPL(cond, pred, op, val) \\\n    PP_IF(cond, PP_WHILE_4, val PP_EMPTY_EAT)(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))\n\n#define PP_WHILE_4(pred, op, val) PP_WHILE_4_IMPL(PP_BOOL(pred(val)), pred, op, val)\n#define PP_WHILE_4_IMPL(cond, pred, op, val) \\\n    PP_IF(cond, PP_WHILE_5, val PP_EMPTY_EAT)(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))\n// ...\n\n#define PP_WHILE_8(pred, op, val) PP_WHILE_8_IMPL(PP_BOOL(pred(val)), pred, op, val)\n#define PP_WHILE_8_IMPL(cond, pred, op, val) \\\n    PP_IF(cond, PP_WHILE_8, val PP_EMPTY_EAT)(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))\n\n#define PP_EMPTY_EAT(...)\n\n#define SUM_OP(xy_tuple) SUM_OP_OP_IMPL xy_tuple\n#define SUM_OP_OP_IMPL(x, y) (PP_DEC(x), y + x)\n\n#define SUM_PRED(xy_tuple) SUM_PRED_IMPL xy_tuple\n#define SUM_PRED_IMPL(x, y) x\n\n#define SUM(max_num, origin_num) \\\n    PP_IDENTITY(SUM_IMPL PP_WHILE(SUM_PRED, SUM_OP, (max_num, origin_num)))\n#define SUM_IMPL(ignore, ret) ret\n\nPP_WHILE(SUM_PRED, SUM_OP, (2, a))      // -&gt; (0, a + 2 + 1)\nSUM(2, a)                               // -&gt; a + 2 + 1\n</code></pre> <p>The <code>PP_WHILE</code> macro accepts three parameters: <code>pred</code> as the condition checking function, <code>op</code> as the operation function, and <code>val</code> as the initial value. During the loop, the termination condition is checked by continuously using <code>pred(val)</code>. The value obtained from <code>op(val)</code> is passed to the subsequent macro, which can be understood as executing the following code:</p> <pre><code>while (pred(val)) {\n    val = op(val);\n}\n</code></pre> <p>First use <code>pred(val)</code> to get the result of the condition check, and pass the condition result <code>cond</code> and the remaining parameters to <code>PP_WHILE_N_IMPL</code>. <code>PP_WHILE_N_IMPL</code> can be divided into two parts: the latter part <code>(pred, op, PP_IF(cond, op, PP_EMPTY_EAT)(val))</code> is used as the parameter of the former part. <code>PP_IF(cond, op, PP_EMPTY_EAT)(val)</code> evaluates to <code>op(val)</code> if <code>cond</code> is true, otherwise it evaluates to <code>PP_EMPTY_EAT(val)</code> and returns empty. The former part <code>PP_IF(cond, PP_WHILE_N+1, val PP_EMPTY_EAT)</code> returns <code>PP_WHILE_N+1</code> if <code>cond</code> is true, and continues the loop by combining it with the parameters of the latter part; otherwise, it returns <code>val PP_EMPTY_EAT</code>, in which <code>val</code> is the final calculation result, and <code>PP_EMPTY_EAT</code> will consume the result of the latter part.</p> <p><code>SUM</code> implements <code>N + N-1 + ... + 1</code>. The initial values are <code>(max_num, origin_num)</code>. <code>SUM_PRED</code> takes the first element of the value, <code>x</code>, and checks if it is greater than 0. <code>SUM_OP</code> performs the decrement operation <code>x = x - 1</code> on <code>x</code> and the addition operation <code>y = y + x</code> on <code>y</code>. We can directly pass <code>SUM_PRED</code> and <code>SUM_OP</code> to <code>PP_WHILE</code>, and the returned result is a tuple. The desired result is the second element of the tuple, so we use <code>SUM</code> to retrieve the value of the second element.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#recursive-reentrancy_1","title":"Recursive Reentrancy","text":"<p>So far, our traversal access and conditional loops have been working well, producing the expected results. Do you remember when we mentioned the prohibition of recursive re-entry when discussing macro expansion rules? Unfortunately, we encountered this prohibition when attempting to execute nested loops.</p> <pre><code>#define SUM_OP2(xy_tuple) SUM_OP_OP_IMPL2 xy_tuple\n#define SUM_OP_OP_IMPL2(x, y) (PP_DEC(x), y + SUM(x, 0))\n\n#define SUM2(max_num, origin_num) \\\n    PP_IDENTITY(SUM_IMPL PP_WHILE(SUM_PRED, SUM_OP2, (max_num, origin_num)))\n\nSUM2(1, a)      // -&gt; a + SUM_IMPL PP_WHILE_1(SUM_PRED, SUM_OP, (1, a))\n</code></pre> <p><code>SUM2</code> modifies the parameter <code>op</code> to use <code>SUM_OP2</code>. Within <code>SUM_OP2</code>, it will make a call to <code>SUM</code>, which, when expanded, will be equivalent to <code>PP_WHILE_1</code>. This means that <code>PP_WHILE_1</code> recursively calls itself until the preprocessor stops expansion.</p> <p>To solve this problem, we can use a method called Automatic Recursion:</p> <pre><code>#define PP_AUTO_WHILE PP_CONCAT(PP_WHILE_, PP_AUTO_REC(PP_WHILE_PRED))\n\n#define PP_AUTO_REC(check) PP_IF(check(2), PP_AUTO_REC_12, PP_AUTO_REC_34)(check)\n#define PP_AUTO_REC_12(check) PP_IF(check(1), 1, 2)\n#define PP_AUTO_REC_34(check) PP_IF(check(3), 3, 4)\n\n#define PP_WHILE_PRED(n) \\\n    PP_CONCAT(PP_WHILE_CHECK_, PP_WHILE_ ## n(PP_WHILE_FALSE, PP_WHILE_FALSE, PP_WHILE_FALSE))\n#define PP_WHILE_FALSE(...) 0\n\n#define PP_WHILE_CHECK_PP_WHILE_FALSE 1\n\n#define PP_WHILE_CHECK_PP_WHILE_1(...) 0\n#define PP_WHILE_CHECK_PP_WHILE_2(...) 0\n#define PP_WHILE_CHECK_PP_WHILE_3(...) 0\n#define PP_WHILE_CHECK_PP_WHILE_4(...) 0\n// ...\n#define PP_WHILE_CHECK_PP_WHILE_8(...) 0\n\nPP_AUTO_WHILE       // -&gt; PP_WHILE_1\n\n#define SUM3(max_num, origin_num) \\\n    PP_IDENTITY(SUM_IMPL PP_AUTO_WHILE(SUM_PRED, SUM_OP, (max_num, origin_num)))\n\n#define SUM_OP4(xy_tuple) SUM_OP_OP_IMPL4 xy_tuple\n#define SUM_OP_OP_IMPL4(x, y) (PP_DEC(x), y + SUM3(x, 0))\n\n#define SUM4(max_num, origin_num) \\\n    PP_IDENTITY(SUM_IMPL PP_AUTO_WHILE(SUM_PRED, SUM_OP4, (max_num, origin_num)))\n\nSUM4(2, a)          // -&gt; a + 0 + 2 + 1 + 0 + 1\n</code></pre> <p><code>PP_AUTO_WHILE</code> is the automatically deduced recursive version of <code>PP_WHILE</code>, and the core macro is <code>PP_AUTO_REC(PP_WHILE_PRED)</code>. This macro can identify the current available version number <code>N</code> of <code>PP_WHILE_N</code>.</p> <p>The principle of deduction is very simple, which is to search all versions and find the version that can be correctly expanded, and return the number of that version. In order to improve the speed of the search, the common practice is to use binary search, which is what <code>PP_AUTO_REC</code> does. <code>PP_AUTO_REC</code> takes a parameter <code>check</code>, which is responsible for checking the availability of versions. Here, the supported search version range is given as <code>[1, 4]</code>. <code>PP_AUTO_REC</code> will first check <code>check(2)</code>. If <code>check(2)</code> is true, it will call <code>PP_AUTO_REC_12</code> to search the range <code>[1, 2]</code>, otherwise it will use <code>PP_AUTO_REC_34</code> to search <code>[3, 4]</code>. <code>PP_AUTO_REC_12</code> checks <code>check(1)</code>. If it is true, it means that version <code>1</code> is available, otherwise version <code>2</code> is used. The same applies to <code>PP_AUTO_REC_34</code>.</p> <p>To know whether the <code>check</code> macro is available, how should it be written? Here, the <code>PP_WHILE_PRED</code> will expand into the concatenation of two parts. Let's take a look at the latter part <code>PP_WHILE_ ## n(PP_WHILE_FALSE, PP_WHILE_FALSE, PP_WHILE_FALSE)</code>: if <code>PP_WHILE_ ## n</code> is available, since <code>PP_WHILE_FALSE</code> always returns <code>0</code>, this part will expand and obtain the value of the <code>val</code> parameter, which is <code>PP_WHILE_FALSE</code>. Otherwise, this macro will remain unchanged and still be <code>PP_WHILE_n(PP_WHILE_FALSE, PP_WHILE_FALSE, PP_WHILE_FALSE)</code>.</p> <p>Concatenate the result of the latter part with the prefix <code>PP_WHILE_CHECK_</code>, resulting in two possible outcomes: <code>PP_WHILE_CHECK_PP_WHILE_FALSE</code> or <code>PP_WHILE_CHECK_PP_WHILE_n(PP_WHILE_FALSE, PP_WHILE_FALSE, PP_WHILE_FALSE)</code>. We then make <code>PP_WHILE_CHECK_PP_WHILE_FALSE</code> return <code>1</code> to indicate availability, while <code>PP_WHILE_CHECK_PP_WHILE_n</code> returns <code>0</code> to indicate unavailability. With this, we have completed the functionality of automated recursive deduction.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#arithmetic-comparison","title":"Arithmetic Comparison","text":"<p>Not equal:</p> <pre><code>#define PP_NOT_EQUAL(x, y) PP_NOT_EQUAL_IMPL(x, y)\n#define PP_NOT_EQUAL_IMPL(x, y) \\\n    PP_CONCAT(PP_NOT_EQUAL_CHECK_, PP_NOT_EQUAL_ ## x(0, PP_NOT_EQUAL_ ## y))\n\n#define PP_NOT_EQUAL_CHECK_PP_EQUAL_NIL 1\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_0(...) 0\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_1(...) 0\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_2(...) 0\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_3(...) 0\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_4(...) 0\n// ...\n#define PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_8(...) 0\n\n#define PP_NOT_EQUAL_0(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n#define PP_NOT_EQUAL_1(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n#define PP_NOT_EQUAL_2(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n#define PP_NOT_EQUAL_3(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n#define PP_NOT_EQUAL_4(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n// ...\n#define PP_NOT_EQUAL_8(cond, y) PP_IF(cond, PP_EQUAL_NIL, y(1, PP_EQUAL_NIL))\n\nPP_NOT_EQUAL(1, 1)          // -&gt; 0\nPP_NOT_EQUAL(3, 1)          // -&gt; 1\n</code></pre> <p>To determine if two values are equal, we utilize the feature of prohibiting recursive reentry. We concatenate <code>x</code> and <code>y</code> recursively into the <code>PP_NOT_EQUAL_x PP_NOT_EQUAL_y</code> macro. If <code>x</code> is equal to <code>y</code>, the <code>PP_NOT_EQUAL_y</code> macro will not be expanded, and it will be concatenated with <code>PP_NOT_EQUAL_CHECK_</code> to form <code>PP_NOT_EQUAL_CHECK_PP_NOT_EQUAL_y</code> which returns <code>0</code>. Conversely, if both are successfully expanded, we will ultimately obtain <code>PP_EQUAL_NIL</code>, which is then concatenated with <code>PP_NOT_EQUAL_CHECK_</code> to form <code>PP_NOT_EQUAL_CHECK_PP_EQUAL_NIL</code> which returns <code>1</code>.</p> <p>Equal:</p> <pre><code>#define PP_EQUAL(x, y) PP_NOT(PP_NOT_EQUAL(x, y))\n\nPP_EQUAL(1, 1)              // -&gt; 1\nPP_EQUAL(1, 3)              // -&gt; 0\n</code></pre> <p>Less than or equal to:</p> <pre><code>#define PP_LESS_EQUAL(x, y) PP_NOT(PP_SUB(x, y))\n\nPP_LESS_EQUAL(2, 1)         // -&gt; 0\nPP_LESS_EQUAL(1, 1)         // -&gt; 1\nPP_LESS_EQUAL(1, 2)         // -&gt; 1\n</code></pre> <p>Less than:</p> <pre><code>#define PP_LESS(x, y) PP_AND(PP_LESS_EQUAL(x, y), PP_NOT_EQUAL(x, y))\n\nPP_LESS(2, 1)               // -&gt; 0\nPP_LESS(1, 2)               // -&gt; 1\nPP_LESS(2, 2)               // -&gt; 0\n</code></pre> <p>In addition, there are arithmetic comparisons such as \"greater than\" and \"greater than or equal to\", etc. I will not go into further detail here.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#arithmetic-operations","title":"Arithmetic Operations","text":"<p>Using <code>PP_AUTO_WHILE</code>, we can implement basic arithmetic operations, and it also supports nested operations.</p> <p>Addition:</p> <pre><code>#define PP_ADD(x, y) \\\n    PP_IDENTITY(PP_ADD_IMPL PP_AUTO_WHILE(PP_ADD_PRED, PP_ADD_OP, (x, y)))\n#define PP_ADD_IMPL(x, y) x\n\n#define PP_ADD_PRED(xy_tuple) PP_ADD_PRED_IMPL xy_tuple\n#define PP_ADD_PRED_IMPL(x, y) y\n\n#define PP_ADD_OP(xy_tuple) PP_ADD_OP_IMPL xy_tuple\n#define PP_ADD_OP_IMPL(x, y) (PP_INC(x), PP_DEC(y))\n\nPP_ADD(1, 2)                  // -&gt; 3\nPP_ADD(1, PP_ADD(1, 2))       // -&gt; 4\n</code></pre> <p>Subtraction:</p> <pre><code>#define PP_SUB(x, y) \\\n    PP_IDENTITY(PP_SUB_IMPL PP_AUTO_WHILE(PP_SUB_PRED, PP_SUB_OP, (x, y)))\n#define PP_SUB_IMPL(x, y) x\n\n#define PP_SUB_PRED(xy_tuple) PP_SUB_PRED_IMPL xy_tuple\n#define PP_SUB_PRED_IMPL(x, y) y\n\n#define PP_SUB_OP(xy_tuple) PP_SUB_OP_IMPL xy_tuple\n#define PP_SUB_OP_IMPL(x, y) (PP_DEC(x), PP_DEC(y))\n\nPP_SUB(2, 1)                // -&gt; 1\nPP_SUB(3, PP_ADD(2, 1))     // -&gt; 0\n</code></pre> <p>Multiplication:</p> <pre><code>#define PP_MUL(x, y) \\\n    IDENTITY(PP_MUL_IMPL PP_AUTO_WHILE(PP_MUL_PRED, PP_MUL_OP, (0, x, y)))\n#define PP_MUL_IMPL(ret, x, y) ret\n\n#define PP_MUL_PRED(rxy_tuple) PP_MUL_PRED_IMPL rxy_tuple\n#define PP_MUL_PRED_IMPL(ret, x, y) y\n\n#define PP_MUL_OP(rxy_tuple) PP_MUL_OP_IMPL rxy_tuple\n#define PP_MUL_OP_IMPL(ret, x, y) (PP_ADD(ret, x), x, PP_DEC(y))\n\nPP_MUL(1, 1)                // -&gt; 1\nPP_MUL(2, PP_ADD(0, 1))     // -&gt; 2\n</code></pre> <p>To implement multiplication here, an additional parameter <code>ret</code> is added, with an initial value of <code>0</code>. During each iteration, the code executes <code>ret = ret + x</code>.</p> <p>Division:</p> <pre><code>#define PP_DIV(x, y) \\\n    IDENTITY(PP_DIV_IMPL PP_AUTO_WHILE(PP_DIV_PRED, PP_DIV_OP, (0, x, y)))\n#define PP_DIV_IMPL(ret, x, y) ret\n\n#define PP_DIV_PRED(rxy_tuple) PP_DIV_PRED_IMPL rxy_tuple\n#define PP_DIV_PRED_IMPL(ret, x, y) PP_LESS_EQUAL(y, x)\n\n#define PP_DIV_OP(rxy_tuple) PP_DIV_OP_IMPL rxy_tuple\n#define PP_DIV_OP_IMPL(ret, x, y) (PP_INC(ret), PP_SUB(x, y), y)\n\nPP_DIV(1, 2)                // -&gt; 0\nPP_DIV(2, 1)                // -&gt; 2\nPP_DIV(2, PP_ADD(1, 1))     // -&gt; 1\n</code></pre> <p>The division uses <code>PP_LESS_EQUAL</code>, and only continues the loop when <code>y &lt;= x</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#data-structures","title":"Data Structures","text":"<p>Macro can also have data structures. In fact, we have briefly used a data structure called <code>tuple</code> in the previous section. <code>PP_REMOVE_PARENS</code> is used to remove the outer parentheses of <code>tuple</code> and return its elements. Here we take <code>tuple</code> as an example to discuss its implementation. If you are interested in other data structures like <code>list</code> and <code>array</code>, you can check out the implementation in <code>Boost</code>.</p> <p>A <code>tuple</code> is defined as a collection of elements separated by commas and enclosed in parentheses: <code>(a, b, c)</code>.</p> <pre><code>#define PP_TUPLE_REMOVE_PARENS(tuple) PP_REMOVE_PARENS(tuple)\n\n// Get the element at the specified index\n#define PP_TUPLE_ELEM(i, tuple) PP_ARGS_ELEM(i, PP_TUPLE_REMOVE_PARENS(tuple))\n\n// Swallow the entire tuple and return nothing\n#define PP_TUPLE_EAT() PP_EMPTY_EAT\n\n// Get size\n#define PP_TUPLE_SIZE(tuple) PP_ARGS_SIZE(PP_TUPLE_REMOVE_PARENS(tuple))\n\n// Add element\n#define PP_TUPLE_PUSH_BACK(elem, tuple) \\\n    PP_TUPLE_PUSH_BACK_IMPL(PP_TUPLE_SIZE(tuple), elem, tuple)\n#define PP_TUPLE_PUSH_BACK_IMPL(size, elem, tuple) \\\n    (PP_TUPLE_REMOVE_PARENS(tuple) PP_IF(size, PP_COMMA, PP_EMPTY)() elem)\n\n// Insert Element\n#define PP_TUPLE_INSERT(i, elem, tuple) \\\n    PP_TUPLE_ELEM( \\\n        3, \\\n        PP_AUTO_WHILE( \\\n            PP_TUPLE_INSERT_PRED, \\\n            PP_TUPLE_INSERT_OP, \\\n            (0, i, elem, (), tuple) \\\n        ) \\\n    )\n#define PP_TUPLE_INSERT_PRED(args) PP_TUPLE_INSERT_PERD_IMPL args \n#define PP_TUPLE_INSERT_PERD_IMPL(curi, i, elem, ret, tuple) \\\n    PP_NOT_EQUAL(PP_TUPLE_SIZE(ret), PP_INC(PP_TUPLE_SIZE(tuple)))\n#define PP_TUPLE_INSERT_OP(args) PP_TUPLE_INSERT_OP_IMPL args\n#define PP_TUPLE_INSERT_OP_IMPL(curi, i, elem, ret, tuple) \\\n    ( \\\n    PP_IF(PP_NOT_EQUAL(PP_TUPLE_SIZE(ret), i), PP_INC(curi), curi), \\\n    i, elem, \\\n    PP_TUPLE_PUSH_BACK(\\\n        PP_IF( \\\n            PP_NOT_EQUAL(PP_TUPLE_SIZE(ret), i), \\\n            PP_TUPLE_ELEM(curi, tuple), elem \\\n        ), \\\n        ret \\\n    ), \\\n    tuple \\\n    )\n\n// Remove the last element\n#define PP_TUPLE_POP_BACK(tuple) \\\n    PP_TUPLE_ELEM( \\\n        1, \\\n        PP_AUTO_WHILE( \\\n            PP_TUPLE_POP_BACK_PRED, \\\n            PP_TUPLE_POP_BACK_OP, \\\n            (0, (), tuple) \\\n        ) \\\n    )\n#define PP_TUPLE_POP_BACK_PRED(args) PP_TUPLE_POP_BACK_PRED_IMPL args\n#define PP_TUPLE_POP_BACK_PRED_IMPL(curi, ret, tuple) \\\n    PP_IF( \\\n        PP_TUPLE_SIZE(tuple), \\\n        PP_NOT_EQUAL(PP_TUPLE_SIZE(ret), PP_DEC(PP_TUPLE_SIZE(tuple))), \\\n        0 \\\n    )\n#define PP_TUPLE_POP_BACK_OP(args) PP_TUPLE_POP_BACK_OP_IMPL args\n#define PP_TUPLE_POP_BACK_OP_IMPL(curi, ret, tuple) \\\n    (PP_INC(curi), PP_TUPLE_PUSH_BACK(PP_TUPLE_ELEM(curi, tuple), ret), tuple)\n\n// Remove element\n#define PP_TUPLE_REMOVE(i, tuple) \\\n    PP_TUPLE_ELEM( \\\n        2, \\\n        PP_AUTO_WHILE( \\\n            PP_TUPLE_REMOVE_PRED, \\\n            PP_TUPLE_REMOVE_OP, \\\n            (0, i, (), tuple) \\\n        ) \\\n    )\n#define PP_TUPLE_REMOVE_PRED(args) PP_TUPLE_REMOVE_PRED_IMPL args\n#define PP_TUPLE_REMOVE_PRED_IMPL(curi, i, ret, tuple) \\\n    PP_IF( \\\n        PP_TUPLE_SIZE(tuple), \\\n        PP_NOT_EQUAL(PP_TUPLE_SIZE(ret), PP_DEC(PP_TUPLE_SIZE(tuple))), \\\n        0 \\\n    )    \n#define PP_TUPLE_REMOVE_OP(args) PP_TUPLE_REMOVE_OP_IMPL args\n#define PP_TUPLE_REMOVE_OP_IMPL(curi, i, ret, tuple) \\\n    ( \\\n    PP_INC(curi), \\\n    i, \\\n    PP_IF( \\\n        PP_NOT_EQUAL(curi, i), \\\n        PP_TUPLE_PUSH_BACK(PP_TUPLE_ELEM(curi, tuple), ret), \\\n        ret \\\n    ), \\\n    tuple \\\n    )\n\nPP_TUPLE_SIZE(())               // -&gt; 0\n\nPP_TUPLE_PUSH_BACK(2, (1))      // -&gt; (1, 2)\nPP_TUPLE_PUSH_BACK(2, ())       // -&gt; (2)\n\nPP_TUPLE_INSERT(1, 2, (1, 3))   // -&gt; (1, 2, 3)\n\nPP_TUPLE_POP_BACK(())           // -&gt; ()\nPP_TUPLE_POP_BACK((1))          // -&gt; ()\nPP_TUPLE_POP_BACK((1, 2, 3))    // -&gt; (1, 2)\n\nPP_TUPLE_REMOVE(1, (1, 2, 3))   // -&gt; (1, 3)\nPP_TUPLE_REMOVE(0, (1, 2, 3))   // -&gt; (2, 3)\n</code></pre> <p>Here's a brief explanation of how the insertion of elements is implemented, similar principles are used for other operations such as deleting elements. <code>PP_TUPLE_INSERT(i, elem, tuple)</code> allows you to insert the element <code>elem</code> at position <code>i</code> in the <code>tuple</code>. To accomplish this, we first use <code>PP_TUPLE_PUSH_BACK</code> to move all elements with a position smaller than <code>i</code> onto a new <code>tuple</code> called <code>ret</code>. Then we place the element <code>elem</code> at position <code>i</code>, and finally move all the elements in the original <code>tuple</code> with positions greater than or equal to <code>i</code> to the end of <code>ret</code>. In the end, <code>ret</code> will contain the desired result.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#summary","title":"Summary","text":"<p>The purpose of this article is to clarify the principles and basic implementation of C/C++ macro programming, while recording my own understanding and knowledge, hoping to provide some clarification and inspiration to others. It should be noted that although this article is a bit long, there are still some macro programming techniques and usage that have not been covered, such as the recursive calling method based on delayed expansion proposed by CHAOS_PP, and the <code>REPEAT</code> macro in BOOST_PP, etc. If you are interested, please refer to the relevant materials on your own.</p> <p>Debugging macro programming is a painful process, and we can:</p> <ul> <li>Use the <code>-P -E</code> options to output the preprocessed result.</li> <li>Use the modified version of <code>clang</code> mentioned earlier to carefully study the expansion process.</li> <li>Break down complex macros and examine the expansion results of intermediate macros.</li> <li>Exclude irrelevant header files and macros.</li> <li>Finally, it is necessary to mentally simulate the process of macro expansion. Familiarity with macro expansion will also improve debugging efficiency.</li> </ul> <p>The macros in this article are my own implementation after understanding the principles. Some of the macros draw inspiration from the implementation in Boost and the referenced articles. If there are any errors, please feel free to point them out at any time. You are also welcome to reach out to me for discussions on related issues.</p> <p>The code for this article is all here: Download, Live Demo.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E5%AE%8F%E7%BC%96%E7%A8%8B%E8%A7%A3%E6%9E%90/#quote","title":"Quote","text":"<ul> <li>Boost.Preprocessor</li> <li>The Art of C/C++ Macro Programming</li> </ul> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/","title":"Summary of command line parameter handling in C/C++","text":"<p>Some time ago, when I was going through the Linux kernel code, I came across the way the kernel handles module parameters (moduleparam), and I found it quite ingenious. It made me curious about how command-line arguments in C could be better handled. The code used in this article can be found here aparsing. The code can be compiled and run on Windows, Linux, and Mac OS X. Detailed compilation instructions can be found in the README.md file.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/#getenv","title":"getenv","text":"<p>The standard library provides us with a function <code>getenv</code>. Literally, this function is used to retrieve environment variables. So as long as we set the required environment variables in advance and retrieve them in the program, we indirectly pass the parameters to the program. Let's take a look at the following code:</p> <pre><code>#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n\n//char *getenv( const char *name );\n//GETENV_ADD=abc GETENV_NUM=2 ./getenv_test \n\nint main (int argc, char **argv)\n{\n    char *add, *num;\n    if((add = getenv(\"GETENV_ADD\")))\n        printf(\"GETENV_ADD = %s\\n\", add);\n    else\n        printf(\"GETENV_ADD not found\\n\");\n\n    if((num = getenv(\"GETENV_NUM\")))\n    {\n        int numi = atoi(num);\n        printf(\"GETENV_NUM = %d\\n\", numi);\n    }\n    else\n        printf(\"GETENV_NUM not found\\n\");\n}\n</code></pre> <p>The <code>getenv</code> function is declared on line 4. It takes the name of the variable you want to retrieve as input and returns the value of that variable. If the variable is not found, it returns 0. Lines 10 and 15 are used to retrieve the values of two environment variables respectively. If the variables are valid, their values are printed. It is worth noting that <code>getenv</code> always returns a string, so the user needs to manually convert it to the desired data type. Therefore, it may not be very convenient to use. Compile and run:</p> <p>Under Windows:</p> <pre><code>set GETENV_ADD=abc &amp; set GETENV_NUM=1 &amp; .\\getenv_test.exe\n</code></pre> <p>Under Linux:</p> <pre><code>GETENV_ADD=abc GETENV_NUM=2 ./getenv_test \n</code></pre> <p>Output:</p> <pre><code>GETENV_ADD = abc\nGETENV_NUM = 2\n</code></pre>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/#getopt","title":"getopt","text":"<p>Linux provides us with a set of functions <code>getopt, getopt_long, getopt_long_only</code> to handle command-line arguments. The declarations of these three functions are as follows:</p> <pre><code>extern char *optarg;\nextern int optind, opterr, optopt;\n\nint getopt(int argc, char * const argv[],\n                  const char *optstring);\n\nint getopt_long(int argc, char * const argv[],\n            const char *optstring,\n            const struct option *longopts, int *longindex);\n\nint getopt_long_only(int argc, char * const argv[],\n            const char *optstring,\n            const struct option *longopts, int *longindex);\n</code></pre> <p><code>getopt</code> can only handle short options (i.e., single character options), while <code>getopt_long</code> and <code>getopt_long_only</code> can handle long options. For a detailed explanation of the functions, you can refer to the manual in Linux. Now, let's illustrate the usage of <code>getopt</code> and <code>getopt_long</code> through examples.</p> <p>It should be noted that these functions are not available on Windows, so I found a source code that can be compiled on Windows and made some minor modifications. The code can be found here.</p> <pre><code>// test getopt\n\n#include &lt;getopt.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nstatic struct option long_options[] =\n{\n    {\"add\", required_argument, 0, 'a'},\n    {\"append\", no_argument, 0, 0},\n    {\"delete\", required_argument, 0, 0},\n    {\"verbose\", optional_argument, 0, 0},\n    {\"create\", no_argument, 0, 0},\n    {\"file\", required_argument, 0, 0},\n    {\"help\", no_argument, 0, 0},\n    {0, 0, 0, 0}\n};\n\nstatic char simple_options[] = \"a:bc::d:0123456789\";\n\nint main (int argc, char **argv)\n{\n\n    int c;\n    int digit_optind = 0;\n\n    while (1)\n    {\n        int this_option_optind = optind ? optind : 1;\n        int longindex = -1;\n\n        c = getopt_long(argc, argv, simple_options, long_options, &amp;longindex);\n        if (c == -1)\n        break;\n\n        switch (c)\n        {\n            // long option\n            case 0:\n                   printf(\"option %s\", long_options[longindex].name);\n                   if (optarg)\n                       printf(\" with arg %s\", optarg);\n                   printf(\"\\n\");\n                   break;\n\n                break;\n\n            case '0':\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n                if(digit_optind != 0 &amp;&amp; digit_optind != this_option_optind)\n                    printf(\"digits occur in two different argv-elements.\\n\");\n\n                digit_optind = this_option_optind;\n                printf(\"option %c\\n\", c);\n                break;\n\n            case 'a':\n                printf(\"option a with value '%s'\\n\", optarg);\n                break;\n\n            case 'b':\n                printf(\"option b\\n\");\n                break;\n\n            case 'c':\n                if(optarg)\n                    printf(\"option c with value '%s'\\n\", optarg);\n                else\n                    printf(\"option c\\n\");\n                break;\n\n            case '?':\n                break;\n\n            default:\n                printf(\"?? getopt returned character code 0%o ??\\n\", c);\n        } // switch\n    } // while\n\n    if (optind &lt; argc)\n    {\n        printf(\"non-option ARGV-elements: \");\n        while (optind &lt; argc)\n        printf(\"%s \", argv[optind++]);\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n</code></pre> <p>Let's focus on analyzing the usage of <code>getopt_long</code>. The first three parameters of <code>getopt_long</code> are the same as <code>getopt</code>: the number of command-line arguments <code>argc</code>, the array of command-line arguments <code>argv</code>, and the exact format of short parameters <code>optstring</code>. The format of <code>optstring</code> consists of individual short parameter characters, followed by a colon <code>:</code> to indicate a parameter is required, and two colons <code>::</code> to indicate an optional parameter. For example, in line 19, the declaration of the short parameters is as follows: the <code>b</code> parameter does not take any extra arguments, the <code>a</code> parameter requires an extra argument, and the <code>c</code> parameter takes an optional argument.</p> <p>The last two arguments of <code>getopt_long</code> are used to handle long options, and the structure of <code>option</code> is:</p> <p><pre><code>struct option {\nconst char *name;       // Long parameter name\nint         has_arg;    // Whether it takes an additional argument\nint        *flag;       // Specify how to return the function call result\nint         val;        // The returned value\n};\n</code></pre> Although it is called a long parameter, the <code>name</code> can still be set to a single character length.</p> <p><code>has_arg</code> can be set to <code>no_argument, required_argument, optional_argument</code>, which respectively indicate no argument, required argument, optional argument.</p> <p><code>flag</code> and <code>val</code> are used together. If <code>flag = NULL</code>, <code>getopt_long</code> will directly return <code>val</code>. Otherwise, if <code>flag</code> is a valid pointer, <code>getopt_long</code> will perform an operation similar to <code>*flag = val</code>, which sets the variable pointed to by <code>flag</code> to the value of <code>val</code>.</p> <p>If <code>getopt_long</code> finds a match for a short option, it will return the character value of that option. If it finds a match for a long option, it will return <code>val</code> (<code>flag = NULL</code>) or return <code>0</code> (<code>flag != NULL; *flag = val;</code>); if it encounters a non-option character, it will return <code>?</code>; if all options have been processed, it will return <code>-1</code>.</p> <p>By utilizing the feature of return values, we can achieve the same effect of having the same meaning for long options and short options. For example, the first parameter of <code>long_options</code> is set to <code>add</code> with <code>val</code> value as the character <code>'a'</code>. In this case, when checking the return value, both <code>--add</code> and <code>-a</code> will enter the same processing branch and be treated as having the same meaning.</p> <p>The last piece of the jigsaw puzzle is the usage of <code>optind</code> and <code>optarg</code>. <code>optind</code> represents the position of the next argument to be processed in <code>argv</code>, while <code>optarg</code> points to the additional argument string.</p> <p>Compile and run the code:</p> <pre><code>$ .\\getopt_test -a 1 -b -c4 --add 2 --verbose --verbose=3 -123 -e --e\noption a with value '1'\noption b\noption c with value '4'\noption a with value '2'\noption verbose\noption verbose with arg 3\noption 1\noption 2\noption 3\n.\\getopt_test: invalid option -- e\n.\\getopt_test: unrecognized option `--e'\n</code></pre> <p>The meanings of <code>-a</code> and <code>--add</code> are the same. For short parameters, the optional parameter follows immediately after, for example <code>-c4</code>. For long parameters, the optional parameter needs to be specified with an equal sign, for example <code>--verbose=3</code>.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/#mobuleparam","title":"mobuleparam","text":"<p>Okay, finally we have come to the method that triggered this article in the first place. The Linux kernel uses a clever technique to pass parameters to kernel modules, and that technique is called <code>moduleparam</code>. Here, I'll explain briefly how <code>moduleparam</code> works in the Linux kernel, but for a more detailed explanation, you can refer to the code. Although I have borrowed some handling techniques from <code>moduleparam</code>, there are some differences between my method, which I'll refer to as <code>small moduleparam</code>, and the one used in the Linux kernel, which will still be called <code>moduleparam</code>.</p> <p>First, let's take a look at the usage of <code>moduleparam</code>, which is declared inside the module:</p> <pre><code>int enable_debug = 0;\nmodule_param(enable_debug, int, 0);\n</code></pre> <p>Then enter parameters when loading the module:</p> <pre><code>$ insmod mod enable_debug=1\n</code></pre> <p>The variable <code>enable_debug</code> has been correctly set to <code>1</code>, making it convenient to use. There is also very little additional code that needs to be added, and the code can be written in a concise and elegant manner. There is no need to write multiple loop conditions like <code>getenv</code> and <code>getopt</code>, and it also includes built-in type conversion. So, when I see it, I think it would be even better if we can use this method to handle command-line arguments.</p> <p>Now let's take a look at the core implementation of <code>moduleparam</code>:</p> <pre><code>struct kernel_param {\nconst char *name;           // Variable name\nu16 perm;                   // Variable access permission\nu16 flags;                  // Variable is bool type or not\nparam_set_fn set;           // str -&gt; variable value\nparam_get_fn get;           // variable value -&gt; str\n    union {\nvoid *arg;              // variable pointer\n        const struct kparam_string *str;\n        const struct kparam_array *arr;\n    };\n};\n\n#define __module_param_call(prefix, name, set, get, arg, isbool, perm)  \\\n    /* Default value instead of permissions? */         \\\n    static int __param_perm_check_##name __attribute__((unused)) =  \\\n    BUILD_BUG_ON_ZERO((perm) &lt; 0 || (perm) &gt; 0777 || ((perm) &amp; 2))  \\\n    + BUILD_BUG_ON_ZERO(sizeof(\"\"prefix) &gt; MAX_PARAM_PREFIX_LEN);   \\\n    static const char __param_str_##name[] = prefix #name;      \\\n    static struct kernel_param __moduleparam_const __param_##name   \\\n    __used                              \\\n        __attribute__ ((unused,__section__ (\"__param\"),aligned(sizeof(void *)))) \\\n    = { __param_str_##name, perm, isbool ? KPARAM_ISBOOL : 0,   \\\n        set, get, { arg } }\n\n#define module_param_call(name, set, get, arg, perm)                  \\\n    __module_param_call(MODULE_PARAM_PREFIX,                  \\\n                name, set, get, arg,                  \\\n                __same_type(*(arg), bool), perm)\n\n#define module_param_named(name, value, type, perm)            \\\n    param_check_##type(name, &amp;(value));                \\\n    module_param_call(name, param_set_##type, param_get_##type, &amp;value, perm); \\\n    __MODULE_PARM_TYPE(name, #type)\n\n#define module_param(name, type, perm)              \\\n    module_param_named(name, name, type, perm)\n</code></pre> <p><code>module_param</code> is a macro that actually establishes a structure called <code>kernel_param</code> that reflects the incoming variable. This structure, which contains enough information to access and set the variable, is stored in a section called <code>__param</code>, as shown in lines 20-24. Once the structure is saved, the kernel will locate the position and number of structures in the elf file's <code>section __param</code> when loading the module. The parameters are then individually set based on their names and <code>param_set_fn</code>. The method of locating a specific named section is platform-specific, and the Linux kernel implements it by processing the elf file. In Linux, the <code>readelf</code> command can be used to view information about elf files. If interested, you can refer to the <code>readelf</code> help information.</p> <p>The above mentioned method of the Linux kernel is platform-specific, but I am looking for a platform-independent way to handle parameters. So we need to make some changes to the original <code>moduleparam</code> approach by removing the <code>__section__ (\"__param\")</code> declaration, as we don't want to read the <code>section</code> of the elf file in a complicated way. Let's take a look at the modified usage below:</p> <pre><code>#include \"moduleparam.h\"\n#include &lt;stdio.h&gt;\n\nstatic int test = 0;\nstatic bool btest = 0;\nstatic unsigned int latest_num = 0;\nstatic long latest[10] = {0};\nstatic char strtest[20] = \"\\0\";\n\nvoid usage()\n{\n    char *msg = \"usage: moduleparam_test [test=int] [btest[=bool]] [latest=int array] [strtest=string]\\n\";\n    printf(msg);\n}\n\nint unknown_handler(char *param, char *val)\n{\n    printf(\"find unknown param: %s\\n\", param);\n    return 0;\n}\n\nint main (int argc, char **argv)\n{\n    init_module_param(4);\n    module_param(test, int);\n    module_param_bool(btest);\n    module_param_array(latest, long, &amp;latest_num);\n    module_param_string(strtest, strtest, sizeof(strtest));\n\n    int ret = parse_params(argc, argv, unknown_handler);\n\n    if(ret != 0)\n    {\n        usage();\n        return 0;\n    }\n\n    char buf[1024];\n    for(int i=0; i &lt; MODULE_INIT_VARIABLE_NUM; ++i)\n    {\n        MODULE_INIT_VARIABLE[i].get(buf, &amp;MODULE_INIT_VARIABLE[i]);\n        printf(\"%s = %s\\n\", MODULE_INIT_VARIABLE[i].name, buf);\n    }\n    return 0;\n}\n</code></pre> <p>To preserve the structure of each reflection, I have added a macro <code>init_module_param(num)</code> to declare the space for storing the structure. <code>num</code> is the number of parameters, and if the actual number of parameters declared exceeds <code>num</code>, the program will trigger an assertion error. The declaration of <code>module_param</code> is slightly different from the original, removing the last parameter that represents access permissions, so no access control is done. In addition, a macro <code>module_param_bool</code> has been added to handle variables that represent <code>bool</code>. This is not necessary in the Linux version, as it uses the gcc built-in function <code>__builtin_types_compatible_p</code> to determine the variable type. Unfortunately, MSVC does not have this function, so I had to remove this functionality and add a macro instead. <code>module_param_array</code> and <code>module_param_string</code> are used to handle arrays and strings, which were already present in the original version.</p> <p>After declaring the parameters, it's time to process the incoming arguments. Use the macro <code>parse_params</code> and pass in <code>argc, argv</code>. The third parameter is a pointer to the callback function for handling unknown parameters. You can pass <code>NULL</code>, which will interrupt the processing of positional arguments and return an error code.</p> <p>Compile and run code:</p> <pre><code>.\\moduleparam_test.exe error=0 test=101 btest=1 latest=1,2,3 strtest=\\\"Hello World!\\\"\nParsing ARGS: error=0 test=101 btest=1 latest=1,2,3 strtest=\"Hello World!\"\nfind unknown param: error\ntest = 101\nbtest = Y\nlatest = 1,2,3\nstrtest = Hello World!\n</code></pre> <p>You can see that numerical values, arrays, and strings can all be read and converted correctly. If there are parameters that cannot be converted, an error code will be returned and relevant information will be printed. We can easily add a few lines of code to handle parameter reading and conversion, which makes it very elegant to use. For more detailed implementation, you can directly refer to the code here.</p>","tags":["dev"]},{"location":"en/cpp-C%E5%92%8CCpp%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/#summary","title":"Summary","text":"<p>This time we summarized three methods for handling command line arguments in C/C++: <code>getenv</code>, <code>getopt</code>, and <code>moduleparam</code>. Each method has its own characteristics, and you can choose the appropriate method based on the actual needs in the future.</p> <ul> <li><code>getenv</code> is a native multi-platform function that can be used directly. However, it is too primitive and utilizes environment variables, which can cause some pollution to the environment. It is recommended to clear unnecessary environment variables before each use to avoid contamination from previous settings.</li> </ul> <ul> <li><code>getopt</code> is natively supported on Linux platforms, but not on Windows. Therefore, it requires code implementation to achieve cross-platform usage. The parameter passing follows the standard command line argument format of Linux and supports optional parameters. However, it can be slightly cumbersome to use, often requiring loops and conditional statements to handle different parameters, and it is not particularly friendly to numerical types of parameters.</li> </ul> <ul> <li><code>moduleparam</code> is a command line argument processing tool inspired by the <code>moduleparam</code> implementation in the Linux kernel. It supports cross-platform usage and is easy to use. It can perform type conversion on different types of parameters. The drawback is that each parameter requires a corresponding variable for storage.</li> </ul> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/","title":"KCP Source Code Analysis","text":"<p>Before reading this article, if you have never heard of KCP, or have no understanding of KCP at all, please take some time to read the documentation of the KCP project: Link. The purpose of this article is to delve into the implementation details of KCP in order to understand it better.</p>","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#what-is-kcp","title":"What is KCP","text":"<p>KCP is a fast and reliable protocol that can deliver data with lower latency than TCP, faster data retransmission, and shorter waiting time.</p> <p>TCP is designed for traffic (how much KB of data can be transmitted per second), focusing on fully utilizing bandwidth. KCP, on the other hand, is designed for flow rate (how long it takes for a single data packet to be sent from one end to the other), trading off 10%-20% of bandwidth for a faster transmission speed of 30%-40% compared to TCP. TCP channel is like a large canal with slow flow rate but high traffic per second, while KCP is like a turbulent small stream with swift water flow.</p> <p>The above is written in the KCP document, the key words are bandwidth and throughput. KCP will consume bandwidth, but the benefit is a larger and more balanced transmission rate. For more information, refer to KCP's own documentation.</p>","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#kcp-data-structure","title":"KCP Data Structure","text":"<p>The source code of KCP is located in <code>ikcp.h</code> and <code>ikcp.c</code>. The core of <code>ikcp.h</code> is the declaration of data structures. First of all, there is the <code>SEGMENT</code> data packet, which is the smallest unit for processing data in the KCP protocol:</p>  SEGMENT Structure (Click to expand code)  <pre><code>//=====================================================================\n// A **segment** is a data packet.\n//=====================================================================\nstruct IKCPSEG\n{\n// Linked list node, both send and receive queues use this linked list structure\n    struct IQUEUEHEAD node;\n\n// Session ID, the same session ID is identical.\n    IUINT32 conv;\n\n// Packet type, such as DATA or ACK\n    IUINT32 cmd;\n\n// Due to the limitation of the MTU, large data packets will be split into multiple smaller packets, and this is the numbering of the small packets\n    IUINT32 frg\n\n// Each data packet is accompanied by the sender's receive window size\n    IUINT32 wnd;\n\n// Send time, if it is an ACK packet, it will be set as the timestamp of the source data packet.\n    IUINT32 ts;\n\n// Number that uniquely identifies the data packet.\n    IUINT32 sn;\n\n// Represents that all packets with a sequence number less than \"una\" have been successfully received, consistent with the meaning of TCP: the oldest unacknowledged sequence number SND.\n    IUINT32 una;\n\n// Data length\n    IUINT32 len;\n\n// Timeout Retransmission Time\n    IUINT32 resendts;\n\n    // Next timeout waiting time\n    IUINT32 rto;\n\n// Fast retransmission, if the number of subsequent packets received after this packet exceeds a certain threshold, fast retransmission is triggered.\n    IUINT32 fastack;\n\n// Number of times sent\n    IUINT32 xmit;\n\n    // Data\n    char data[1];\n};\n</code></pre> <p>After reading the comments of <code>SEGMENT</code>, it can be roughly understood that the core of KCP is also an ARQ protocol, which ensures the delivery of data through automatic timeout retransmission. Next, let's take a look at the definition of the KCP structure <code>KCPCB</code>.</p> KCP Structure (Click to Expand Code) <pre><code>//---------------------------------------------------------------------\n// IKCPCB\n//---------------------------------------------------------------------\nstruct IKCPCB\n{\nTranslate these text into English language:\n\n    // conv: Conversation number\n    // mtu, mss: Maximum transmission unit, Maximum segment size\n    // state: Conversation state, 0 valid, -1 disconnected\n    IUINT32 conv, mtu, mss, state;\n\n// snd_una: Packet number waiting for ACK\n// snd_nxt: Next packet number waiting to be sent\n// rcv_nxt: Next packet number waiting to be received\n    IUINT32 snd_una, snd_nxt, rcv_nxt;\n\nTranslate these text into English language:\n\n// ts_recent, ts_lastack: Unused\n// ssthresh: Congestion control slow start threshold\n\n\n    IUINT32 ts_recent, ts_lastack, ssthresh;\n\n    // rx_rto: rto (retransmission timeout), timeout for retransmission\n    // rx_rttval, rx_srtt, rx_minrto: intermediate variables for calculating rto\n    IINT32 rx_rttval, rx_srtt, rx_rto, rx_minrto;\n\n// snd_wnd, rcv_wnd: Maximum send and receive window sizes\n// rmt_wnd: Remote window size, the remaining receive window size of the peer\n// cwnd: Size of the available send window\n// probe: Flag indicating whether to send control messages\n    IUINT32 snd_wnd, rcv_wnd, rmt_wnd, cwnd, probe;\n\nTranslate these text into English language:\n\n// current: Current time\n// interval: Update interval\n// ts_flush: Next update time\n// xmit: Number of failed transmissions\n    IUINT32 current, interval, ts_flush, xmit;\n\n// Length of the corresponding linked list\n    IUINT32 nrcv_buf, nsnd_buf;\n    IUINT32 nrcv_que, nsnd_que;\n\nTranslate these texts into English language:\n\n    // nodelay: Control the rate at which the RTO (Retransmission Time Out) increases for timeout retransmissions.\n    // updated: Whether or not the ikcp_update function has been called.\n    IUINT32 nodelay, updated;\n\n// ts_probe, probe_wait: Initiate periodic inquiries when the receiving window of the other party remains 0 for a long time.\n    IUINT32 ts_probe, probe_wait;\n\n// deal_link: No response from the opposite end for a long time\n// incr: Participate in calculating the size of the send window\n    IUINT32 dead_link, incr;\n\nTranslate these text into English language:\n\n// queue: The data packet that interacts with the user layer.\n// buf: The data packet that is cached by the protocol.\n    struct IQUEUEHEAD snd_queue;\n    struct IQUEUEHEAD rcv_queue;\n    struct IQUEUEHEAD snd_buf;\n    struct IQUEUEHEAD rcv_buf;\n\n// Packet information that requires sending an ack\n    IUINT32 *acklist;\n\n// Number of packages that need to be ack\n    IUINT32 ackcount;\n\n// Memory size of the `acklist`\n    IUINT32 ackblock;\n\n// Data passed in by the user layer\n    void *user;\n\n// Storage space for a kcp package\n    char *buffer;\n\n// Number of fastack triggers to initiate fast retransmission\n    int fastresend;\n\n// Maximum number of fast retransmissions\n    int fastlimit;\n\n    // nocwnd: window size for sending without considering slow start\n    // stream: stream mode\n    int nocwnd, stream;\n\n    // debug log\n    int logmask;\n\n// Send data interface\n    int (*output)(const char *buf, int len, struct IKCPCB *kcp, void *user);\n\n    void (*writelog)(const char *log, struct IKCPCB *kcp, void *user);\n};\n</code></pre> <p>Annotate each field in the KCP structure one by one. You can have a preliminary feeling that the entire KCP protocol is not too complicated. By carefully analyzing the code, both you and I can read and understand the KCP protocol. </p>","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#kcps-arq-implementation","title":"KCP's ARQ Implementation","text":"<p>KCP is essentially an ARQ (Auto Repeat-reQuest) protocol that primarily focuses on ensuring reliable transmission. So, let's first pay attention to the basic ARQ component of KCP and how KCP achieves reliable transmission.</p> <p>ARQ, as the name implies, automatically retransmits the corresponding data packet when we believe that the recipient has failed to receive it. This is achieved through two mechanisms: acknowledgement (ACK) and retransmission upon timeout. In terms of specific code implementation, KCP assigns a unique identifier, <code>sn</code>, to each data packet (referred to as <code>SEGMENT</code> in the previous section). Once the recipient receives a data packet, it responds with an ACK packet (also a <code>SEGMENT</code>) that has the same <code>sn</code> as the received data packet, indicating successful reception. The <code>SEGMENT</code> also includes a field called <code>una</code>, which represents the sequence number of the next expected data packet. In other words, it signifies that all data packets with a sequence number lower than <code>una</code> have been successfully received. It is equivalent to a full ACK packet, allowing the sender to update the send buffer and send window more efficiently.</p> <p>We can understand the most basic ARQ implementation by tracking the sending and receiving code of KCP packets:</p>","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#send","title":"Send","text":"<p>The process of sending is <code>ikcp_send</code> -&gt; <code>ikcp_update</code> -&gt; <code>ikcp_output</code>. The upper layer calls <code>ikcp_send</code> to pass the data to KCP, which handles the data transmission in <code>ikcp_update</code>.</p> ikcp_send (Click to expand code) <pre><code>//---------------------------------------------------------------------\n// Send data interface, the user calls `ikcp_send` to let KCP send data.\n// user/upper level send, returns below zero for error\n//---------------------------------------------------------------------\nint ikcp_send(ikcpcb *kcp, const char *buffer, int len)\n{\n    IKCPSEG *seg;\n    int count, i;\n\n// mss cannot be less than 1\n    assert(kcp-&gt;mss &gt; 0);\n    if (len &lt; 0) return -1;\n\n    // append to previous segment in streaming mode (if possible)\n    if (kcp-&gt;stream != 0) {\n// Processing Stream Mode\n        // ......\n    }\n\n// Calculate sub-packages, if the data length len is greater than mss, divide it into multiple packages to send, and the receiving end will assemble them afterwards\n    if (len &lt;= (int)kcp-&gt;mss) count = 1;\n    else count = (len + kcp-&gt;mss - 1) / kcp-&gt;mss;\n\n    if (count &gt;= (int)IKCP_WND_RCV) return -2;\n\n    if (count == 0) count = 1;\n\n// Subpackage\n    for (i = 0; i &lt; count; i++) {\n// Calculate the length of the packet data and allocate the corresponding seg structure.\n        int size = len &gt; (int)kcp-&gt;mss ? (int)kcp-&gt;mss : len;\n        seg = ikcp_segment_new(kcp, size);\n        assert(seg);\n        if (seg == NULL) {\n            return -2;\n        }\n\n// Set the data information of [to_be_replaced[seg]], [to_be_replaced[frg]] represents the fragmentation number.\n        if (buffer &amp;&amp; len &gt; 0) {\n            memcpy(seg-&gt;data, buffer, size);\n        }\n        seg-&gt;len = size;\n        seg-&gt;frg = (kcp-&gt;stream == 0)? (count - i - 1) : 0;\n\n# Add to the end of snd_queue, increase nsnd_qua by one\n        iqueue_init(&amp;seg-&gt;node);\n        iqueue_add_tail(&amp;seg-&gt;node, &amp;kcp-&gt;snd_queue);\n        kcp-&gt;nsnd_que++;\n        if (buffer) {\n            buffer += size;\n        }\n        len -= size;\n    }\n\n    return 0;\n}\n</code></pre> <p>The <code>ikcp_send</code> is a data sending interface called by the upper layer of KCP. All the data to be sent by KCP should go through this interface. The <code>ikcp_send</code> function does something very simple. It mainly divides the data into multiple packets based on the <code>kcp-&gt;mss</code> (the maximum data length per packet), sets the packet numbers for each segment, and finally puts them at the end of the sending queue <code>snd_queue</code>. In stream mode, multiple calls to <code>ikcp_send</code> are treated as a continuous stream of data. It will automatically fill the incomplete segments before allocating new ones. The detailed implementation is not discussed in this article. For those who are interested, I believe that after reading this article, you can understand it better by looking at the corresponding code.</p> <p>After the completion of the <code>ikcp_send</code> invocation, the data will be placed in the <code>snd_queue</code> of KCP. Later, KCP needs to find a suitable opportunity to send the pending data. This part of the code is contained in the <code>ikcp_update</code> and <code>ikcp_flush</code> functions.</p> ikcp_update (Click to expand code) <pre><code>//---------------------------------------------------------------------\n// ikcp_update is an interface that needs to be called regularly by the upper layer to update the state of KCP and send data.\n// update state (call it repeatedly, every 10ms-100ms), or you can ask \n// ikcp_check when to call it again (without ikcp_input/_send calling).\n// 'current' - current timestamp in millisec. \n//---------------------------------------------------------------------\nvoid ikcp_update(ikcpcb *kcp, IUINT32 current)\n{\n    IINT32 slap;\n\n    kcp-&gt;current = current;\n\n// ikcp_flush will check this, the upper layer must have called ikcp_update before calling ikcp_flush, it is recommended to only use ikcp_update.\n    if (kcp-&gt;updated == 0) {\n        kcp-&gt;updated = 1;\n        kcp-&gt;ts_flush = kcp-&gt;current;\n    }\n\n    slap = _itimediff(kcp-&gt;current, kcp-&gt;ts_flush);\n\n    if (slap &gt;= 10000 || slap &lt; -10000) {\n        kcp-&gt;ts_flush = kcp-&gt;current;\n        slap = 0;\n    }\n\n    if (slap &gt;= 0) {\n// Time of next flush\n        kcp-&gt;ts_flush += kcp-&gt;interval;\n        if (_itimediff(kcp-&gt;current, kcp-&gt;ts_flush) &gt;= 0) {\n            kcp-&gt;ts_flush = kcp-&gt;current + kcp-&gt;interval;\n        }\n        ikcp_flush(kcp);\n    }\n}\n</code></pre> <p>The <code>ikcp_update</code> function does a simple task: it checks the time of <code>ts_flush</code> and if it meets the criteria, it calls <code>ikcp_flush</code>. The main processing logic is inside <code>ikcp_flush</code> because it is a bit more complex. Currently, we are only concerned with the parts related to ARQ sending.</p>  Send Data (Click to Expand Code)  <pre><code>//---------------------------------------------------------------------\n// ikcp_flush\n//---------------------------------------------------------------------\nvoid ikcp_flush(ikcpcb *kcp)\n{\n    IUINT32 current = kcp-&gt;current;\n\n// buffer is the data to be passed to ikcp_output, initialized to 3 times the size of the data packet\n    char *buffer = kcp-&gt;buffer;\n    char *ptr = buffer;\n    int count, size, i;\n    IUINT32 resent, cwnd;\n    IUINT32 rtomin;\n    struct IQUEUEHEAD *p;\n    int change = 0;\n    int lost = 0;\n    IKCPSEG seg;\n\n    // 'ikcp_update' haven't been called.\n    if (kcp-&gt;updated == 0) return;\n\n    seg.conv = kcp-&gt;conv;\n    seg.cmd = IKCP_CMD_ACK;\n    seg.frg = 0;\n\n// `seg.wnd` represents the current receive window size.\n    seg.wnd = ikcp_wnd_unused(kcp);\n    seg.una = kcp-&gt;rcv_nxt;\n    seg.len = 0;\n    seg.sn = 0;\n    seg.ts = 0;\n\n    // Send ack\n    // Calculate sending window\n    //...\n\n    // Move packets from snd_queue to snd_buf\n    // The movement is subject to the condition that the sending window size is met. If the sending window is full, the movement will stop. \n    // The data placed in snd_buf can be directly passed to the kcp_output function to be sent to the peer.\n    while (_itimediff(kcp-&gt;snd_nxt, kcp-&gt;snd_una + cwnd) &lt; 0) {\n        IKCPSEG *newseg;\n        if (iqueue_is_empty(&amp;kcp-&gt;snd_queue)) break;\n\n        newseg = iqueue_entry(kcp-&gt;snd_queue.next, IKCPSEG, node);\n\n        iqueue_del(&amp;newseg-&gt;node);\n        iqueue_add_tail(&amp;newseg-&gt;node, &amp;kcp-&gt;snd_buf);\n        kcp-&gt;nsnd_que--;\n        kcp-&gt;nsnd_buf++;\n\n        newseg-&gt;conv = kcp-&gt;conv;\n        newseg-&gt;cmd = IKCP_CMD_PUSH;\n        newseg-&gt;wnd = seg.wnd;\n        newseg-&gt;ts = current;\n\n// seg is a unique sequence number, which is actually an increasing value of kcp-&gt;snd_nxt.\n        newseg-&gt;sn = kcp-&gt;snd_nxt++;\n\n// Set `una` here, notifying the other side of the next packet sequence number to be received.\n        newseg-&gt;una = kcp-&gt;rcv_nxt;\n        newseg-&gt;resendts = current;\n        newseg-&gt;rto = kcp-&gt;rx_rto;\n        newseg-&gt;fastack = 0;\n        newseg-&gt;xmit = 0;\n    }\n\n// Calculate fast retransmission flag and timeout waiting time\n    // ...\n\n// Send snd_buf\n    for (p = kcp-&gt;snd_buf.next; p != &amp;kcp-&gt;snd_buf; p = p-&gt;next) {\n        IKCPSEG *segment = iqueue_entry(p, IKCPSEG, node);\n        int needsend = 0;\n        if (segment-&gt;xmit == 0) {\n// First transmission\n// set-&gt;xmit indicates the number of transmissions\n// resendts represents the waiting time for timeout retransmission\n            needsend = 1;\n            segment-&gt;xmit++;\n            segment-&gt;rto = kcp-&gt;rx_rto;\n            segment-&gt;resendts = current + segment-&gt;rto + rtomin;\n        }\n        else if (_itimediff(current, segment-&gt;resendts) &gt;= 0) {\n// Timeout retransmission\n            // ...\n        }\n        else if (segment-&gt;fastack &gt;= resent) {\n// Fast retransmission\n            // ...\n        }\n\n        if (needsend) {\n            int need;\n            segment-&gt;ts = current;\n            segment-&gt;wnd = seg.wnd;\n            segment-&gt;una = kcp-&gt;rcv_nxt;\n\n            size = (int)(ptr - buffer);\n            need = IKCP_OVERHEAD + segment-&gt;len;\n\n// Whenever the data in the buffer exceeds the MTU (Maximum Transmission Unit), it should be sent out first to avoid further fragmentation at the lower level.\n            if (size + need &gt; (int)kcp-&gt;mtu) {\n                ikcp_output(kcp, buffer, size);\n                ptr = buffer;\n            }\n\n// Copy the control data of `seg` to the buffer, let KCP handle the endianness issue itself\n            ptr = ikcp_encode_seg(ptr, segment);\n\n// Copy data again\n            if (segment-&gt;len &gt; 0) {\n                memcpy(ptr, segment-&gt;data, segment-&gt;len);\n                ptr += segment-&gt;len;\n            }\n\n\n            if (segment-&gt;xmit &gt;= kcp-&gt;dead_link) {\n                kcp-&gt;state = (IUINT32)-1;\n            }\n        }\n    }\n\n    // flash remain segments\n    size = (int)(ptr - buffer);\n    if (size &gt; 0) {\n        ikcp_output(kcp, buffer, size);\n    }\n\n// Calculate ssthresh and update the slow start window\n    // ...\n}\n</code></pre> <p>We are currently only focused on the logic related to sending data in <code>ikcp_flush</code> function:</p> <p>First, KCP will move the data on <code>snd_queue</code> to <code>snd_buf</code> based on the receiver's window size. The formula for calculating the number of moved data is <code>num = snd_nxt - (snd_una + cwnd)</code>, i.e., if the sum of the successfully sent maximum packet sequence number <code>snd_una</code> and the sliding window size <code>cwnd</code> is greater than the next packet sequence number to be sent <code>snd_nxt</code>, then new data packets can be sent again. While moving the <code>SEG</code>, the control fields are set.</p> <ul> <li>Iterate through <code>snd_buf</code>, if there is a need to send a data packet, copy the data to <code>buffer</code> and simultaneously use <code>ikcp_encode_seg</code> to handle the endianness issue of the control field data.</li> </ul> <p>Finally, call <code>ikcp_output</code> to send the data on <code>buffer</code></p> <p>Thus far, KCP has completed the transmission of the data.</p>","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#receive","title":"Receive","text":"<p>The receiving process is opposite to the sending process: <code>ikcp_input</code> -&gt; <code>ikcp_update</code> -&gt; <code>ikcp_recv</code>. After the user receives data from the network, they need to call <code>ikcp_input</code> to pass it to KCP for parsing. When calling <code>ikcp_update</code>, ACK packets will be sent back to the sender. The upper layer can then receive the data parsed by KCP by calling <code>ikcp_recv</code>.</p>  Receive data (Click to expand code)  <pre><code>//---------------------------------------------------------------------\n// input data\n//---------------------------------------------------------------------\nint ikcp_input(ikcpcb *kcp, const char *data, long size)\n{\n    IUINT32 prev_una = kcp-&gt;snd_una;\n    IUINT32 maxack = 0, latest_ts = 0;\n    int flag = 0;\n\n// Legitimacy check\n    if (data == NULL || (int)size &lt; (int)IKCP_OVERHEAD) return -1;\n\n// data may be multiple KCP packets, process in a loop\n    while (1) {\n        IUINT32 ts, sn, len, una, conv;\n        IUINT16 wnd;\n        IUINT8 cmd, frg;\n        IKCPSEG *seg;\n\n// Not enough data for a KCP packet, exiting.\n        if (size &lt; (int)IKCP_OVERHEAD) break;\n\n// First, parse the control fields.\n        data = ikcp_decode32u(data, &amp;conv);\n        if (conv != kcp-&gt;conv) return -1;\n\n        data = ikcp_decode8u(data, &amp;cmd);\n        data = ikcp_decode8u(data, &amp;frg);\n        data = ikcp_decode16u(data, &amp;wnd);\n        data = ikcp_decode32u(data, &amp;ts);\n        data = ikcp_decode32u(data, &amp;sn);\n        data = ikcp_decode32u(data, &amp;una);\n        data = ikcp_decode32u(data, &amp;len);\n\n        size -= IKCP_OVERHEAD;\n\n        if ((long)size &lt; (long)len || (int)len &lt; 0) return -2;\n\n// Check data packet type\n        if (cmd != IKCP_CMD_PUSH &amp;&amp; cmd != IKCP_CMD_ACK &amp;&amp;\n            cmd != IKCP_CMD_WASK &amp;&amp; cmd != IKCP_CMD_WINS) \n            return -3;\n\n        kcp-&gt;rmt_wnd = wnd;\n\n        // Here, `una` represents the `kcp-&gt;rcv_nxt` of the sender, based on this data, the already confirmed received packets can be discarded.\n        ikcp_parse_una(kcp, una);\n// After removing the acknowledged packets, update snd_una to the next sequence number to be sent\n        ikcp_shrink_buf(kcp);\n\n        if (cmd == IKCP_CMD_ACK) {\n// Ack Package\n            // ...\n        }\n        else if (cmd == IKCP_CMD_PUSH) {\n// Data packet\n// If the received packet sequence number sn is within the receive window, process it normally; otherwise, discard it directly and wait for retransmission.\n            if (_itimediff(sn, kcp-&gt;rcv_nxt + kcp-&gt;rcv_wnd) &lt; 0) {\n\n// For each received packet, we need to send an acknowledgment packet and keep a record of it.\n                ikcp_ack_push(kcp, sn, ts);\n\n        // The received data is processed by calling ikcp_parse_data.\n                if (_itimediff(sn, kcp-&gt;rcv_nxt) &gt;= 0) {\n                    seg = ikcp_segment_new(kcp, len);\n                    seg-&gt;conv = conv;\n                    seg-&gt;cmd = cmd;\n                    seg-&gt;frg = frg;\n                    seg-&gt;wnd = wnd;\n                    seg-&gt;ts = ts;\n                    seg-&gt;sn = sn;\n                    seg-&gt;una = una;\n                    seg-&gt;len = len;\n\n                    if (len &gt; 0) {\n                        memcpy(seg-&gt;data, data, len);\n                    }\n\n                    ikcp_parse_data(kcp, seg);\n                }\n            }\n        }\n        else if (cmd == IKCP_CMD_WASK) {\n// Query Window Package\n            // ...\n        }\n        else if (cmd == IKCP_CMD_WINS) {\n// Reply package for querying window\n            // ...\n        }\n        else {\n            return -3;\n        }\n\n        data += len;\n        size -= len;\n    }\n\n// Handling fast retransmission logic\n    // ...\n\n// Update the send window\n    // ...\n\n    return 0;\n}\n</code></pre> <p>Loop through each <code>SEG</code> packet in <code>ikcp_input</code>, first check the legality and type of the packet, because each packet carries <code>una</code>, which stores the sequence number of the packet that the sender is waiting to receive. Packets with sequence numbers smaller than <code>una</code> have already been successfully received by the other end, so we can delete all packets in <code>snd_buff</code> that need to be smaller than <code>una</code>, and update <code>snd_nxt</code>. This part is handled by <code>ikcp_parse_una</code> and <code>ikcp_shrink_buf</code>. For each received packet, an ACK packet needs to be replied, which is recorded by <code>ikcp_ack_push</code>, and finally <code>ikcp_parse_data</code> is called to process the data.</p> Parse Data (Click to Expand Code) <pre><code>void ikcp_parse_data(ikcpcb *kcp, IKCPSEG *newseg)\n{\n    struct IQUEUEHEAD *p, *prev;\n    IUINT32 sn = newseg-&gt;sn;\n    int repeat = 0;\n\n// Serial number check\n    if (_itimediff(sn, kcp-&gt;rcv_nxt + kcp-&gt;rcv_wnd) &gt;= 0 ||\n        _itimediff(sn, kcp-&gt;rcv_nxt) &lt; 0) {\n        ikcp_segment_delete(kcp, newseg);\n        return;\n    }\n\n// Find the position where `newseg` should be placed, as the received `seg` may be unordered.\n    for (p = kcp-&gt;rcv_buf.prev; p != &amp;kcp-&gt;rcv_buf; p = prev) {\n        IKCPSEG *seg = iqueue_entry(p, IKCPSEG, node);\n        prev = p-&gt;prev;\n        if (seg-&gt;sn == sn) {\n// Received duplicate\n            repeat = 1;\n            break;\n        }\n        if (_itimediff(sn, seg-&gt;sn) &gt; 0) {\n            break;\n        }\n    }\n\n// Place newseg in the correct position in rcv_buf\n    if (repeat == 0) {\n        iqueue_init(&amp;newseg-&gt;node);\n        iqueue_add(&amp;newseg-&gt;node, p);\n        kcp-&gt;nrcv_buf++;\n    }    else {\n        ikcp_segment_delete(kcp, newseg);\n    }\n\n// Move data from rcv_buf to rcv_queue\n    while (! iqueue_is_empty(&amp;kcp-&gt;rcv_buf)) {\n        IKCPSEG *seg = iqueue_entry(kcp-&gt;rcv_buf.next, IKCPSEG, node);\n// If the seg number is the waiting to be received number, move it to the rcv_queue.\n        if (seg-&gt;sn == kcp-&gt;rcv_nxt &amp;&amp; kcp-&gt;nrcv_que &lt; kcp-&gt;rcv_wnd) {\n            iqueue_del(&amp;seg-&gt;node);\n            kcp-&gt;nrcv_buf--;\n            iqueue_add_tail(&amp;seg-&gt;node, &amp;kcp-&gt;rcv_queue);\n            kcp-&gt;nrcv_que++;\n            kcp-&gt;rcv_nxt++;\n        }    else {\n            break;\n        }\n    }\n}\n</code></pre> <p>The main purpose of <code>ikcp_parse_data</code> is to place <code>newseg</code> on the appropriate position in <code>kcp-&gt;rcv_buf</code> and move the data from <code>rcv_buf</code> to <code>rcv_queue</code>. The appropriate position in <code>rcv_buf</code> means that <code>rcv_buf</code> is arranged in ascending order according to <code>sn</code>. <code>newseg</code> needs to find the appropriate position based on its own <code>sn</code>. The data on <code>rcv_buf</code> needs to be moved to <code>rcv_queue</code> under the condition that the packet sequence number on <code>rcv_buf</code> is equal to the expected packet sequence number <code>kcp-&gt;rcv_nxt</code> that KCP is waiting to receive. After moving a data packet, <code>kcp-&gt;rcv_nxt</code> needs to be updated for the next data packet to be processed.</p> <p>After <code>ikcp_input</code>, when <code>ikcp_update</code> is called, ACK packets will be sent, and when <code>ikcp_recv</code> is called, valid data will be returned to the upper layer. <code>ikcp_update</code> and <code>ikcp_recv</code> are independent of each other, with no specific order of calling, depending on the calling timing of the upper layer. Let's first take a look at the part related to ACK sending in <code>ikcp_update</code>:</p>  Reply ACK (Click to expand code)  <pre><code>// As mentioned earlier, `ikcp_update` ultimately calls `ikcp_flush`.\nvoid ikcp_flush(ikcpcb *kcp, IUINT32 current)\n{\n    // ...\n\n// Reply with ACK packet\n    count = kcp-&gt;ackcount;\n    for (i = 0; i &lt; count; i++) {\n        size = (int)(ptr - buffer);\n        if (size + (int)IKCP_OVERHEAD &gt; (int)kcp-&gt;mtu) {\n            ikcp_output(kcp, buffer, size);\n            ptr = buffer;\n        }\n        ikcp_ack_get(kcp, i, &amp;seg.sn, &amp;seg.ts);\n        ptr = ikcp_encode_seg(ptr, &amp;seg);\n    }\n\n    kcp-&gt;ackcount = 0;\n\n    // ...\n}\n</code></pre> <p>The information of ACK packets has been already stored by <code>ikcp_ack_push</code>, so here we only need to use <code>ikcp_ack_get</code> to obtain the information of each ACK packet and send it to the other party. The upper layer can utilize <code>ikcp_recv</code> to retrieve data from KCP.</p> ikcp_recv (click to expand code) <pre><code>//---------------------------------------------------------------------\n// user/upper level recv: returns size, returns below zero for EAGAIN\n//---------------------------------------------------------------------\nint ikcp_recv(ikcpcb *kcp, char *buffer, int len)\n{\n    struct IQUEUEHEAD *p;\n    int ispeek = (len &lt; 0)? 1 : 0;\n    int peeksize;\n    int recover = 0;\n    IKCPSEG *seg;\n    assert(kcp);\n\n// Some validity checks\n    if (iqueue_is_empty(&amp;kcp-&gt;rcv_queue))\n        return -1;\n    if (len &lt; 0) len = -len;\n\n// Calculate the length of data that can be returned\n    peeksize = ikcp_peeksize(kcp);\n\n    if (peeksize &lt; 0)\n        return -2;\n    if (peeksize &gt; len)\n        return -3;\n\n// Check the receive window.\n    if (kcp-&gt;nrcv_que &gt;= kcp-&gt;rcv_wnd)\n        recover = 1;\n\n// Traverse the `rcv_queue` and copy the data to the `buffer`\n    for (len = 0, p = kcp-&gt;rcv_queue.next; p != &amp;kcp-&gt;rcv_queue; ) {\n        int fragment;\n        seg = iqueue_entry(p, IKCPSEG, node);\n        p = p-&gt;next;\n\n        if (buffer) {\n            memcpy(buffer, seg-&gt;data, seg-&gt;len);\n            buffer += seg-&gt;len;\n        }\n\n        len += seg-&gt;len;\n\n        // Determine sub-packages\n        fragment = seg-&gt;frg;\n\n// Remove data packet\n        if (ispeek == 0) {\n            iqueue_del(&amp;seg-&gt;node);\n            ikcp_segment_delete(kcp, seg);\n            kcp-&gt;nrcv_que--;\n        }\n\n// All sub-packages have been copied, exit the loop.\n        if (fragment == 0)\n            break;\n    }\n\n    assert(len == peeksize);\n\n// rcv_queue has emptied some more, trying to continue moving from rcv_buf to rcv_queue\n    while (! iqueue_is_empty(&amp;kcp-&gt;rcv_buf)) {\n        seg = iqueue_entry(kcp-&gt;rcv_buf.next, IKCPSEG, node);\n        if (seg-&gt;sn == kcp-&gt;rcv_nxt &amp;&amp; kcp-&gt;nrcv_que &lt; kcp-&gt;rcv_wnd) {\n            iqueue_del(&amp;seg-&gt;node);\n            kcp-&gt;nrcv_buf--;\n            iqueue_add_tail(&amp;seg-&gt;node, &amp;kcp-&gt;rcv_queue);\n            kcp-&gt;nrcv_que++;\n            kcp-&gt;rcv_nxt++;\n        }    else {\n            break;\n        }\n    }\n\n    return len;\n}\n</code></pre> <p>The <code>ikcp_recv</code> function will only return one complete data packet with each call. The upper layer can loop the function until no data is returned. The logic of the function is simple: it copies data from the <code>rcv_queue</code> to the <code>buffer</code> passed in from the upper layer. At this point, the receiving side has finished processing the received data packet.</p> <p>When the recipient processes the data packet, it sends an ACK packet to the sender. Let's now take a look at how the sender handles the received ACK packet:</p>  Processing ACK packets (click to expand the code)  <pre><code>int ikcp_input(ikcpcb *kcp, const char *data, long size)\n{\n    // ...\n    IUINT32 maxack = 0, latest_ts = 0;\n    // ...\n    while (1) {\n        // ...\n// ts is the current of the peer's kcp\n        data = ikcp_decode32u(data, &amp;ts);\n        data = ikcp_decode32u(data, &amp;sn);\n\n        if (cmd == IKCP_CMD_ACK) {\n// Update rot\n            if (_itimediff(kcp-&gt;current, ts) &gt;= 0) {\n                ikcp_update_ack(kcp, _itimediff(kcp-&gt;current, ts));\n            }\n// Update snd_buf\n            ikcp_parse_ack(kcp, sn);\n            ikcp_shrink_buf(kcp);\n\n// maxack = the largest sn among all ACK packets in this input\n            if (flag == 0) {\n                flag = 1;\n                maxack = sn;\n                latest_ts = ts;\n            }    else {\n                if (_itimediff(sn, maxack) &gt; 0) {\n                #ifndef IKCP_FASTACK_CONSERVE\n                    maxack = sn;\n                    latest_ts = ts;\n                #else\n                    if (_itimediff(ts, latest_ts) &gt; 0) {\n                        maxack = sn;\n                        latest_ts = ts;\n                    }\n                #endif\n                }\n            }\n        }\n        // ...\n    }\n\n// If an ACK packet is received, record it for fast retransmission\n    if (flag != 0) {\n        ikcp_parse_fastack(kcp, maxack, latest_ts);\n    }\n}\n</code></pre> <p>You can see that after receiving the ACK packet, you will also need to use <code>ikcp_parse_ack</code> and <code>ikcp_shrink_buf</code> to update <code>snd_buf</code>. In addition, you need to call <code>ikcp_update_ack</code> to calculate and update the retransmission timeout (rto). <code>ikcp_input</code> calculates the maximum sequence number in the received ACK packet to record for fast retransmission. That's how it goes - when the sender receives the ACK packet, it removes the transmitted data from <code>snd_buf</code>, ensuring that the packet is reliably delivered to the receiver, and completes a full ARQ acknowledgment process.</p>","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#timeout-retransmission","title":"Timeout retransmission","text":"<p>The previous section introduced the acknowledgment-receiving mechanism implemented in KCP's ARQ. However, ARQ also requires a timeout retransmission to ensure reliability. Now let's take a look at how KCP handles timeout retransmission.</p> <p>Let's go back to the <code>ikcp_flush</code> function:</p>  Retransmission Timeout (Click to expand code)  <pre><code>void ikcp_flush(ikcpcb *kcp)\n{\n    // ...\n// Send snd_buf\n    for (p = kcp-&gt;snd_buf.next; p != &amp;kcp-&gt;snd_buf; p = p-&gt;next) {\n        IKCPSEG *segment = iqueue_entry(p, IKCPSEG, node);\n        int needsend = 0;\n        if (segment-&gt;xmit == 0) {\n            // First send\n            needsend = 1;\n            segment-&gt;xmit++;\n// Set segment-&gt;rto\n// Calculate segment-&gt;resendts timeout retransmission time based on segment-&gt;rto\n            segment-&gt;rto = kcp-&gt;rx_rto;\n            segment-&gt;resendts = current + segment-&gt;rto + rtomin;\n        }\n        else if (_itimediff(current, segment-&gt;resendts) &gt;= 0) {\n// Retransmission on timeout\n            needsend = 1;\n            segment-&gt;xmit++;\n            kcp-&gt;xmit++;\n// nodelay controls the calculation of the next timeout for retransmission.\n            if (kcp-&gt;nodelay == 0) {\n                segment-&gt;rto += kcp-&gt;rx_rto;\n            }    else {\n                segment-&gt;rto += kcp-&gt;rx_rto / 2;\n            }\n            segment-&gt;resendts = current + segment-&gt;rto;\n            lost = 1;\n        }\n        else if (segment-&gt;fastack &gt;= resent) {\n            // Fast retransmission\n            // ...\n        }\n        if (needsend) {\n// Send data\n            // ...\n        }\n    // ...\n}\n</code></pre> <p>Once the current time <code>current</code> is greater than the timeout resend time <code>segment-&gt;resendts</code>, it means that no ACK packet has been received from the receiver during this period. This triggers the timeout resend mechanism, setting <code>needsend = 1</code> to resend the data.</p> <p>With the confirmation reception and timeout retransmission mechanism, KCP can guarantee basic reliable data transmission. However, in order to maintain a more stable data flow rate, KCP has also done more. Now let's take a look at the optimizations that KCP has made.</p>","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#strategies-to-increase-flow-rate-of-kcp","title":"Strategies to Increase Flow Rate of KCP","text":"","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#fast-retransmission","title":"Fast Retransmission","text":"<p>The sender has sent two packets with serial numbers <code>sn</code> and <code>sn + 1</code>. If only the ACK packet for <code>sn + 1</code> is received, it is possible that the ACK packet for <code>sn</code> hasn't arrived yet in the network, or the ACK packet has been lost, or the <code>sn</code> packet has been lost. If it is not yet time for timeout retransmission and the network is not heavily congested, but rather due to some unexpected packet loss, the sender can proactively send the <code>sn</code> packet in advance to help the receiver receive the data faster and improve the flow rate.</p> <p>KCP also implements a fast retransmission mechanism, which is located inside <code>ikcp_flush</code>.</p>  Fast Retransmission (click to expand code)  <pre><code>void ikcp_flush(ikcpcb *kcp)\n{\n    // ...\n    resent = (kcp-&gt;fastresend &gt; 0)? (IUINT32)kcp-&gt;fastresend : 0xffffffff;\n\n// Send snd_buf\n    for (p = kcp-&gt;snd_buf.next; p != &amp;kcp-&gt;snd_buf; p = p-&gt;next) {\n        IKCPSEG *segment = iqueue_entry(p, IKCPSEG, node);\n        int needsend = 0;\n        if (segment-&gt;xmit == 0) {\n            // ...\n        }\n        else if (_itimediff(current, segment-&gt;resendts) &gt;= 0) {\n            // ...\n        }\n        else if (segment-&gt;fastack &gt;= resent) {\n// Fast retransmission\n            if ((int)segment-&gt;xmit &lt;= kcp-&gt;fastlimit ||\n                kcp-&gt;fastlimit &lt;= 0) {\n                needsend = 1;\n                segment-&gt;xmit++;\n                segment-&gt;fastack = 0;\n                segment-&gt;resendts = current + segment-&gt;rto;\n                change++;\n            }\n        }\n        if (needsend) {\n// Sending data\n            // ...\n        }\n    // ...\n}\n</code></pre> <p>To initiate fast retransmission, there are two conditions:</p> <ul> <li><code>segment-&gt;fastack &gt;= resent</code>: The variable <code>resent</code> is a configurable parameter <code>kcp-&gt;fastresend</code>. Setting it to 0 will disable fast retransmission. <code>segment-&gt;fastack</code> is set in the function <code>ikcp_parse_fastack</code>, which is called within <code>ikcp_input</code>. It increments <code>segment-&gt;fastack</code> by one for all segments with <code>sn</code> smaller than <code>maxack</code> calculated by <code>ikcp_input</code>. Therefore, <code>segment-&gt;fastack</code> represents the number of received packets with a sequence number greater than <code>sn</code>.</li> <li><code>segment-&gt;xmit &lt;= kcp-&gt;fastlimit || kcp-&gt;fastlimit &lt;= 0</code>: <code>segment-&gt;xmit</code> represents the number of times the segment has been sent, while <code>kcp-&gt;fastlimit</code> is the maximum configurable number of fast retransmissions. The number of transmissions (<code>segment-&gt;xmit</code>) must be smaller than the maximum fast retransmission limit (<code>kcp-&gt;fastlimit</code>) or the limit must be set to 0.</li> </ul> <p>Once the above conditions for fast retransmission are met, KCP will perform fast retransmission. It is important to note that fast retransmission does not reset the timeout for retransmission, the original timeout will still take effect.</p>","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#shorten-timeout-retransmission-time","title":"Shorten Timeout Retransmission Time","text":"<p>Timeout retransmission is a great mechanism, but it takes too much time. According to TCP's strategy, the timeout interval doubles each time, and the waiting time expands quickly. During the waiting time, it is highly likely that the receiving end's receive window is exhausted, making it unable to receive new data. The sequence number of the packet waiting for retransmission is at the very front, and the receiver needs to receive the retransmitted packet in order to return all the data to the upper layer. In this situation, the overall network throughput is almost zero. KCP adds a configuration option that can slow down the growth of waiting time, and it is not a doubling mechanism. By configuring <code>kcp-&gt;nodelay</code>, the waiting time only increases by a factor of 1 or 0.5 times the RTO (Retransmission Timeout), effectively mitigating the growth of waiting time and helping the network to recover its throughput as quickly as possible.</p>","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#update-sending-window","title":"Update Sending Window","text":"<p>The sending window indicates the number of data packets transmitted simultaneously. The larger the window, the more data can be transmitted simultaneously and the higher the flow rate. However, if the window is too large, it may cause network congestion, increase packet loss rate, and lead to more data retransmission, resulting in a decrease in flow rate. Therefore, the sending window needs to be continuously updated based on the network conditions, gradually approaching the optimal value. The code related to the sending window in KCP is as follows:</p> Send Window (click to expand code) <pre><code>ikcpcb* ikcp_create(IUINT32 conv, void *user)\n{\n    // ...\n// snd_wnd, rcv_wnd The size of the send and receive buffer\n    kcp-&gt;snd_wnd = IKCP_WND_SND;    // 32\n    kcp-&gt;rcv_wnd = IKCP_WND_RCV;    // 128\n// Receiver window size on the other side // 128\n    kcp-&gt;rmt_wnd = IKCP_WND_RCV\n// Initialize sending window cwnd to 0\n    kcp-&gt;cwnd = 0;\n    // The size of the sent window in bytes, participating in the calculation of cwnd.\n    kcp-&gt;incr = 0\n    // \u200b\u6162\u200b\u542f\u52a8\u200b\u9608\u503c\u200b\uff0cslow start threshold\n    kcp-&gt;ssthresh = IKCP_THRESH_INIT;\n// nocwnd is a configurable parameter, 1 means cwnd is not considered.\n    kcp-&gt;nocwnd = 0;\n    // ...\n}\n\nvoid ikcp_flush(ikcpcb *kcp)\n{\n    // ...\n    // Before sending data, first calculate the size of the sending window, which is the minimum value between the size of the sending buffer and the size of the receiving window of the other party.\n    cwnd = _imin_(kcp-&gt;snd_wnd, kcp-&gt;rmt_wnd);\n// We also need to consider `kcp-&gt;cwnd`, which is the continuously updated sending window.\n    if (kcp-&gt;nocwnd == 0) cwnd = _imin_(kcp-&gt;cwnd, cwnd);\n\n// Move snd_queue to snd_buf based on the size of cwnd\n    while (_itimediff(kcp-&gt;snd_nxt, kcp-&gt;snd_una + cwnd) &lt; 0) {\n    }\n// Send data\n    resent = (kcp-&gt;fastresend &gt; 0)? (IUINT32)kcp-&gt;fastresend : 0xffffffff;\n// Trigger timeout retransmission lost = 1\n// Trigger fast retransmission change++\n\n    // Update the slow start threshold and the congestion window\n    if (change) {\n        // If fast retransmission is triggered, ssthresh is set to half the number of packets currently being transmitted on the network.\n        IUINT32 inflight = kcp-&gt;snd_nxt - kcp-&gt;snd_una;\n        kcp-&gt;ssthresh = inflight / 2;\n        if (kcp-&gt;ssthresh &lt; IKCP_THRESH_MIN)\n            kcp-&gt;ssthresh = IKCP_THRESH_MIN;\n\n// The sending window is the threshold plus the resent related to fast retransmission.\n        kcp-&gt;cwnd = kcp-&gt;ssthresh + resent;\n        kcp-&gt;incr = kcp-&gt;cwnd * kcp-&gt;mss;\n    }\n\n    if (lost) {\n// If there is a timeout retransmission, trigger slow start. The ssthresh threshold is half of the send window.\n        kcp-&gt;ssthresh = cwnd / 2;\n        if (kcp-&gt;ssthresh &lt; IKCP_THRESH_MIN)\n            kcp-&gt;ssthresh = IKCP_THRESH_MIN;\n// Send the window back to 1 and restart slow start growth\n        kcp-&gt;cwnd = 1;\n        kcp-&gt;incr = kcp-&gt;mss;\n    }\n\n    if (kcp-&gt;cwnd &lt; 1) {\n// Because it is initialized to 0, it will be set to 1 again here.\n        kcp-&gt;cwnd = 1;\n        kcp-&gt;incr = kcp-&gt;mss;\n    }\n}\n\nint ikcp_input(ikcpcb *kcp, const char *data, long size)\n{\n    IUINT32 prev_una = kcp-&gt;snd_una;\n// Processing received data\n\n    while (1) {\n        // ...\n        data = ikcp_decode16u(data, &amp;wnd)\n`// rmt_wnd` is the receiving window size of the other party.\n        kcp-&gt;rmt_wnd = wnd\n        // ...\n// Process data\n    }\n\n// Finally update the send window\n// kcp-&gt;snd_una - prev_una &gt; 0 means that ACK has been received for this input and the send buffer snd_buf has changed.\n    if (_itimediff(kcp-&gt;snd_una, prev_una) &gt; 0) {\n// Then determine the receiving window of the other party.\n        if (kcp-&gt;cwnd &lt; kcp-&gt;rmt_wnd) {\n            IUINT32 mss = kcp-&gt;mss;\n\n            if (kcp-&gt;cwnd &lt; kcp-&gt;ssthresh) {\n// Less than slow-start threshold, double the growth\n                kcp-&gt;cwnd++;\n                kcp-&gt;incr += mss;\n\n            }    else {\n// After exceeding the slow start threshold, update the increment using the formula and then calculate the congestion window (cwnd).\n                if (kcp-&gt;incr &lt; mss) kcp-&gt;incr = mss;\n                kcp-&gt;incr += (mss * mss) / kcp-&gt;incr + (mss / 16);\n                if ((kcp-&gt;cwnd + 1) * mss &lt;= kcp-&gt;incr) {\n                    kcp-&gt;cwnd++;\n                }\n            }\n// The updated value also needs to be compared with rmt_wnd.\n            if (kcp-&gt;cwnd &gt; kcp-&gt;rmt_wnd) {\n                kcp-&gt;cwnd = kcp-&gt;rmt_wnd;\n                kcp-&gt;incr = kcp-&gt;rmt_wnd * mss;\n            }\n        }\n    }\n}\n</code></pre> <p>The code snippet involving the calculation of the sending window size <code>kcp-&gt;cwnd</code> will be a bit longer, as it needs to be updated both when sending and receiving data. <code>kcp-&gt;cwnd</code> is initialized as 0 and will be modified to 1 when the <code>ikcp_flush</code> function is called for the first time and it is found to be less than 1. Afterwards, the sender will send a corresponding number of data packets based on the sending window size and wait for ACK reply packets. The ACK packets are processed in the <code>kcp-&gt;input</code> function. If ACK packets are detected and there is a clearing of sent data packets in the sending buffer, it means that some packets have been successfully delivered, and <code>kcp-&gt;cwnd</code> will be incremented. In fact, it is likely that only one ACK packet is processed in each <code>kcp-&gt;input</code> call, so it can be understood that each received ACK packet triggers an increment of <code>kcp-&gt;cwnd</code>, which has a doubling effect. For example, if the current <code>kcp-&gt;cwnd</code> is 2 and two data packets are sent and two ACK packets are received, then two increments will be triggered, resulting in <code>kcp-&gt;cwnd</code> becoming 4 through doubling.</p> <p><code>cwnd</code> can continue to grow exponentially until it exceeds the slow start threshold or there is congestion timeout retransmission or fast retransmission. After a congestion timeout retransmission occurs, slow start is triggered, and the slow start threshold <code>ssthresh = kcp-&gt;cwnd / 2</code>, and the send window <code>kcp-&gt;cwnd = 1</code> return to initial exponential growth. If fast retransmission occurs, KCP first reduces <code>ssthresh</code>, which reduces the space for <code>cwnd</code> exponential growth and slows down the growth rate, thereby preemptively mitigating congestion.</p> <p>KCP has added a new configuration parameter called <code>nocwnd</code>. When <code>nocwnd = 1</code>, the sender no longer considers the size of the sending window when sending data. It simply sends the maximum number of data packets that can be sent, meeting the requirements of high-speed mode.</p>","tags":["dev"]},{"location":"en/cpp-KCP%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/#conclusion","title":"Conclusion","text":"<p>This article provides a simple analysis of the source code for KCP and discusses the implementation of ARQ on KCP, as well as some strategies for improving the flow rate of KCP. There are many details that have not been mentioned, so those who are interested can refer to the source code of KCP and compare it themselves. It is believed that there will be many valuable insights to be gained.</p> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev"]},{"location":"en/cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/","title":"Developing a Memory Leak Detector for Windows","text":"","tags":["dev"]},{"location":"en/cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#preface","title":"Preface","text":"<p>Recently, I finished reading \"The Self-Taught Programmer: Linking, Loading, and Libraries\" (referred to as \"Linking\" hereafter) and gained a lot of insights. I thought about whether I could create some related code snippets. Coincidentally, I learned about a memory leak detection tool called Visual Leak Detector for Windows Visual Leak Detector. This tool tracks memory allocation and deallocation by replacing the DLL interface responsible for memory management in Windows. Therefore, I have decided to reference Visual Leak Detector (referred to as VLD hereafter) and create a simplified memory leak detection tool to deepen my understanding of DLL linking.</p>","tags":["dev"]},{"location":"en/cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#background-knowledge","title":"Background Knowledge","text":"<p>The book \"Linking\" provides a detailed explanation of the linking principles for executable files under Linux and Windows. In Windows, the executable file format is called Portable Executable (PE) file. The interpretation of DLL files is as follows:</p> <p>DLL, short for Dynamic-Link Library, is the equivalent of shared objects in Linux. The DLL mechanism is widely used in the Windows system, to a great extent, even the structure of the Windows kernel relies heavily on the DLL mechanism. DLL files and EXE files in Windows are essentially the same concept, as they are both binary files in PE format. The only difference is that the PE file header contains a symbol that indicates whether the file is an EXE or a DLL. The extension of DLL files is not necessarily .dll, it could also be something else like .ocx (OCX control) or .CPL (Control Panel program).</p> <p>There are also Python extension files like .pyd. The concept of memory leak detection that we are discussing here is called the symbol export/import table in DLLs.</p>","tags":["dev"]},{"location":"en/cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#symbol-export-table","title":"Symbol Export Table","text":"<p>When a PE needs to provide some functions or variables to other PE files, we call this behavior symbol exporting.</p> <p>Simply put, in Windows PE, all exported symbols are centrally stored in a structure called the Export Table, which provides a mapping between symbol names and symbol addresses. Symbols that need to be exported should be annotated with the modifier <code>__declspec(dllexport)</code>.</p>","tags":["dev"]},{"location":"en/cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#symbol-import-table","title":"Symbol Import Table","text":"<p>Symbol import table is the key concept here, which corresponds to the symbol export table. Let's first take a look at the concept explanation:</p> <p>If we use functions or variables from a DLL in a program, we refer to this behavior as symbol importing.</p> <p>The structure in Windows PE that stores the symbols of variables and functions that modules need to import, as well as information about their location, is called the Import Table. When Windows loads a PE file, one of the tasks is to determine the addresses of all the functions that need to be imported and adjust the elements in the Import Table to the correct addresses. This allows the program to locate the actual addresses of the functions and make the necessary calls at runtime by querying the Import Table. The most important structure in the Import Table is the Import Address Table (IAT), which stores the actual addresses of the imported functions.</p> <p>By now, you might have already guessed how we are going to implement the memory leak detection :) That's right, it's by hacking the import table. Specifically, we will modify the addresses of the memory allocation and deallocation functions in the import table of the modules we want to monitor, replacing them with our own custom functions. This way, we will be able to track every memory allocation and deallocation made by the modules, giving us the freedom to perform the desired checks.</p> <p>For more detailed knowledge about DLL linking, you can refer to the book \"Linking\" or other materials.</p>","tags":["dev"]},{"location":"en/cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#memory-leak-detector","title":"Memory Leak Detector","text":"<p>After understanding the principle, the next step is to implement memory leak detection based on that principle. The following explanation will be based on my own implementation, which I have uploaded to my Github: LeakDetector.</p>","tags":["dev"]},{"location":"en/cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#replace-function","title":"Replace Function","text":"<p>Let's take a look at the key function, located in RealDetector.cpp:</p> <pre><code>/* Replace a certain function in the IAT (Import Address Table) of importModule with another function.\n   importModule calls a function from another module, and this is the function that needs to be patched.\n   What we need to do is to make import module call our custom function instead.\n *\n* - importModule (IN): The module to be processed. This module calls functions from other modules that need to be patched.\n *\n- exportModuleName (IN): The name of the module from which the function to be patched is derived.\n *\n* `- exportModulePath (IN): The path where the export module is located. It first tries to load the export module using the path, if that fails, it uses the name to load it.\n* `- importName (IN): The name of the function.\n *\n* - replacement (IN): a function pointer that serves as a substitute\n *\n* Return Value: true if successful, false otherwise\n*/\nbool RealDetector::patchImport(\n    HMODULE importModule,\n    LPCSTR exportModuleName,\n    LPCSTR exportModulePath,\n    LPCSTR importName,\n    LPCVOID replacement)\n{\n    HMODULE                  exportmodule;\n    IMAGE_THUNK_DATA        *iate;\n    IMAGE_IMPORT_DESCRIPTOR *idte;\n    FARPROC                  import;\n    DWORD                    protect;\n    IMAGE_SECTION_HEADER    *section;\n    ULONG                    size;\n\n    assert(exportModuleName != NULL);\n\n    idte = (IMAGE_IMPORT_DESCRIPTOR*)ImageDirectoryEntryToDataEx((PVOID)importModule, \n        TRUE, IMAGE_DIRECTORY_ENTRY_IMPORT, &amp;size, &amp;section);\n    if (idte == NULL) \n    {\n        logMessage(\"patchImport failed: idte == NULL\\n\");\n        return false;\n    }\n    while (idte-&gt;FirstThunk != 0x0) \n    {\n        if (strcmp((PCHAR)R2VA(importModule, idte-&gt;Name), exportModuleName) == 0) \n        {\n            break;\n        }\n        idte++;\n    }\n    if (idte-&gt;FirstThunk == 0x0) \n    {\n        logMessage(\"patchImport failed: idte-&gt;FirstThunk == 0x0\\n\");\n        return false;\n    }\n\n    if (exportModulePath != NULL) \n    {\n        exportmodule = GetModuleHandleA(exportModulePath);\n    }\n    else \n    {\n        exportmodule = GetModuleHandleA(exportModuleName);\n    }\n    assert(exportmodule != NULL);\n    import = GetProcAddress(exportmodule, importName);\n    assert(import != NULL);\n\n    iate = (IMAGE_THUNK_DATA*)R2VA(importModule, idte-&gt;FirstThunk);\n    while (iate-&gt;u1.Function != 0x0) \n    {\n        if (iate-&gt;u1.Function == (DWORD_PTR)import) \n        {\n            VirtualProtect(&amp;iate-&gt;u1.Function, sizeof(iate-&gt;u1.Function), \n                PAGE_READWRITE, &amp;protect);\n            iate-&gt;u1.Function = (DWORD_PTR)replacement;\n            VirtualProtect(&amp;iate-&gt;u1.Function, sizeof(iate-&gt;u1.Function), \n                protect, &amp;protect);\n            return true;\n        }\n        iate++;\n    }\n\n    return false;\n}\n</code></pre> <p>Let's analyze this function, as the comment says, the purpose of this function is to change the address of a certain function in the IAT to the address of another function. Let's take a look at lines 34-35:</p> <pre><code>idte = (IMAGE_IMPORT_DESCRIPTOR*)ImageDirectoryEntryToDataEx((PVOID)importModule, \n    TRUE, IMAGE_DIRECTORY_ENTRY_IMPORT, &amp;size, &amp;section);\n</code></pre> <p>The <code>ImageDirectoryEntryToDataEx</code> function can return the address of a certain structure in the file header of a module. The <code>IMAGE_DIRECTORY_ENTRY_IMPORT</code> specifies the import table structure, so the returned <code>idte</code> points to the import table of the module.</p> <p>The code in lines 36-40 is checking the validity of <code>idte</code>. In line 41, <code>idte-&gt;FirstThunk</code> points to the actual Import Address Table (IAT). Therefore, lines 41-48 are used to search for the module that contains the function to be replaced based on the module name. If the module is not found, it means that the function from that module is not being called, and an error will be prompted and returned.</p> <p>After finding the module, naturally, we need to locate the function to be replaced. On lines 55-62, we open the module to which the function belongs, and on line 64, we find the address of the function. Since the IAT does not save names, we need to first locate the function based on its original address, and then modify that address. Lines 68-80 are doing exactly that. Once the function is successfully found, we simply modify the address to <code>replacement</code>.</p> <p>So far, we have successfully replaced the functions in IAT.</p>","tags":["dev"]},{"location":"en/cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#module-and-function-names","title":"Module and Function Names","text":"<p>Although we have implemented the replacement of the IAT function <code>patchImport</code>, this function requires specifying the module name and function name. How can we know which module and function are used for memory allocation and deallocation in the program? To investigate this issue, we need to use the tool Dependency Walker on Windows. Create a new project in Visual Studio, use <code>new</code> to allocate memory in the <code>main</code> function, compile in Debug mode, and then use <code>depends.exe</code> to open the compiled exe file. You will see a similar interface as shown below (using my project LeakDetectorTest as an example):</p> <p></p> <p>It can be seen that LeakDetectorTest.exe uses the <code>malloc</code> and <code>_free_dbg</code> functions from uscrtbased.dll (not shown in the image). These two functions are the ones we need to replace. Please note that the actual module function names may vary depending on your Windows and Visual Studio versions. In my case, I am using Windows 10 and Visual Studio 2015. What you need to do is use depends.exe to check the actual functions being called.</p>","tags":["dev"]},{"location":"en/cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#analyzing-call-stack","title":"Analyzing Call Stack","text":"<p>To record memory allocation, it is necessary to record the call stack information at the time. Here, I don't intend to provide a detailed guide on how to obtain the current call stack information in Windows. The relevant function is <code>RtlCaptureStackBackTrace</code>, and there are many related resources available online. You can also take a look at the <code>printTrace</code> function in my code here.</p>","tags":["dev"]},{"location":"en/cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#detecting-memory-leaks","title":"Detecting Memory Leaks","text":"<p>At this point, we have collected all the Dragon Balls, and now it's time to officially summon Shenron.</p> <p>I want to create a feature that can detect memory leaks locally (this is different from VLD, which performs global detection and supports multi-threading). So, I added another layer of encapsulation called <code>LeakDetector</code> on top of the actual replacement function class <code>RealDetector</code> and exposed the interface of <code>LeakDetector</code> to the user. To use it, simply construct a <code>LeakDetector</code>, which will replace the function and start detecting memory leaks. When the <code>LeakDetector</code> is destroyed, it will restore the original function, terminate the memory leak detection, and print the results of the memory leak detection.</p> <p>Test with the following code:</p> <pre><code>#include \"LeakDetector.h\"\n#include &lt;iostream&gt;\nusing namespace std;\n\nvoid new_some_mem()\n{\n    char* c = new char[12];\n    int* i = new int[4];\n}\n\nint main()\n{\n    auto ld = LDTools::LeakDetector(\"LeakDetectorTest.exe\");\n    new_some_mem();\n    return 0;\n}\n</code></pre> <p>The code directly <code>new</code> some memory, without releasing it and then exits directly. The program prints the following result:</p> <pre><code>============== LeakDetector::start ===============\nLeakDetector init success.\n============== LeakDetector::stop ================\nMemory Leak Detected: total 2\n\nNum 1:\n    e:\\program\\github\\leakdetector\\leakdetector\\realdetector.cpp (109): LeakDetector.dll!LDTools::RealDetector::_malloc() + 0x1c bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\heap\\new_scalar.cpp (19): LeakDetectorTest.exe!operator new() + 0x9 bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\heap\\new_array.cpp (15): LeakDetectorTest.exe!operator new[]() + 0x9 bytes\n    e:\\program\\github\\leakdetector\\leakdetectortest\\leakdetectortest.cpp (12): LeakDetectorTest.exe!new_some_mem() + 0x7 bytes\n    e:\\program\\github\\leakdetector\\leakdetectortest\\leakdetectortest.cpp (19): LeakDetectorTest.exe!main()\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (74): LeakDetectorTest.exe!invoke_main() + 0x1b bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (264): LeakDetectorTest.exe!__scrt_common_main_seh() + 0x5 bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (309): LeakDetectorTest.exe!__scrt_common_main()\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_main.cpp (17): LeakDetectorTest.exe!mainCRTStartup()\n    KERNEL32.DLL!BaseThreadInitThunk() + 0x24 bytes\n    ntdll.dll!RtlUnicodeStringToInteger() + 0x253 bytes\n    ntdll.dll!RtlUnicodeStringToInteger() + 0x21e bytes\n\nNum 2:\n    e:\\program\\github\\leakdetector\\leakdetector\\realdetector.cpp (109): LeakDetector.dll!LDTools::RealDetector::_malloc() + 0x1c bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\heap\\new_scalar.cpp (19): LeakDetectorTest.exe!operator new() + 0x9 bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\heap\\new_array.cpp (15): LeakDetectorTest.exe!operator new[]() + 0x9 bytes\n    e:\\program\\github\\leakdetector\\leakdetectortest\\leakdetectortest.cpp (11): LeakDetectorTest.exe!new_some_mem() + 0x7 bytes\n    e:\\program\\github\\leakdetector\\leakdetectortest\\leakdetectortest.cpp (19): LeakDetectorTest.exe!main()\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (74): LeakDetectorTest.exe!invoke_main() + 0x1b bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (264): LeakDetectorTest.exe!__scrt_common_main_seh() + 0x5 bytes\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl (309): LeakDetectorTest.exe!__scrt_common_main()\n    f:\\dd\\vctools\\crt\\vcstartup\\src\\startup\\exe_main.cpp (17): LeakDetectorTest.exe!mainCRTStartup()\n    KERNEL32.DLL!BaseThreadInitThunk() + 0x24 bytes\n    ntdll.dll!RtlUnicodeStringToInteger() + 0x253 bytes\n    ntdll.dll!RtlUnicodeStringToInteger() + 0x21e bytes\n</code></pre> <p>The program correctly identified the two instances where memory was allocated but not released, and printed out the complete call stack information. The required functionality has been completed up to this point.</p>","tags":["dev"]},{"location":"en/cpp-%E7%BC%96%E5%86%99Windows%E4%B8%8B%E7%9A%84MemoryLeakDetector/#conclusion","title":"Conclusion","text":"<p>When you are not familiar with program linking, loading, and libraries, you may be confused about how to find functions in shared libraries, let alone replacing the library's functions with our own. Here, we take detecting memory leaks as an example and discuss how to replace functions in Windows DLLs. For a more detailed implementation, you can refer to the source code of VLD.</p> <p>Also, I want to say that \"The Self-Cultivation of Programmers: Linking, Loading, and Libraries\" is really a good book. Just expressing my heartfelt admiration, not promotional content.</p> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev"]},{"location":"en/game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/","title":"Game AOI Algorithm Analysis and Performance Testing","text":"","tags":["dev","game"]},{"location":"en/game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#introduction","title":"Introduction","text":"<p><code>AOI</code> (Area Of Interest) is a fundamental feature in multiplayer online games, where players need to receive information about other players or entities entering their field of view. The algorithms that calculate which entities are present within a player's field of view and which entities enter or exit the field of view are generally referred to as <code>AOI</code> algorithms.</p> <p>This article discusses two types of <code>AOI</code> algorithms: Grid of Nine and Cross-chain. It also provides performance analysis of these two algorithms to give you a clear understanding and help you remain calm when facing challenges.</p> <p>The text will mention two terms: \"\u200b\u73a9\u5bb6\u200b\" and \"\u200b\u5b9e\u4f53\u200b\". \"\u200b\u5b9e\u4f53\u200b\" refers to the concept of objects in the game, while \"\u200b\u73a9\u5bb6\u200b\" refers to entities that have the AOI.</p> <p>The code mentioned in the text can be found here: AoiTesting.</p>","tags":["dev","game"]},{"location":"en/game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#nine-gridmatrix","title":"Nine-grid/matrix","text":"<p>The so-called \"Nine Palace\" is a division of the positions of all entities in a scene into grids, for example, dividing them into squares with a side length of 200. To find other entities within the AOI (Area of Interest) of the central player, compare all the players within the grids involved in this range.</p> <p>For example, in a scene, there is a tick every 100 milliseconds. In the tick function, we can update the player's AOI like this:</p> <ul> <li>Calculate the set of grids involved in the AOI radius, with the player's position as the center.</li> <li>Calculate the distance between each entity in the grid set and the player.</li> <li>The set of entities whose distance is less than the AOI radius is the player's new AOI.</li> </ul> <p>The Sudoku algorithm is quite simple to implement. It can be described in a few sentences. We will discuss the performance analysis later. Let's take a look at the Cross-linked List algorithm first.</p>","tags":["dev","game"]},{"location":"en/game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#cross-linked-list","title":"Cross-linked list","text":"<p>For 3D games, we usually create ordered linked lists for the X and Z coordinates separately. Each entity has a node on the linked list, storing the corresponding coordinate axis value. The values are stored in ascending order. However, if we only store the coordinates of the entities themselves, the efficiency of querying using these two linked lists is still low.</p> <p>The real key is that we will add left and right sentinel nodes to each player who has AOI on the linked list. The coordinates of the two sentinels are exactly equal to the player's coordinates plus or minus the AOI radius. For example, if the player <code>P</code> has coordinates <code>(a, b, c)</code> and the AOI radius is <code>r</code>, then there will be two sentinels <code>left_x</code> and <code>right_x</code> on the X-axis, with coordinates <code>a - r</code> and <code>a + r</code>, respectively. With the presence of the sentinels, we update AOI by tracking the movement of the sentinels and other entity nodes. Continuing with the previous example, if an entity <code>E</code> moves and crosses from the right side of <code>left_x</code> to the left side of <code>left_x</code> on the X-axis, it means that <code>E</code> has definitely left the AOI of <code>P</code>; similarly, if it crosses from the left side of <code>right_x</code> to the right side of <code>right_x</code>, it has also left the AOI. Conversely, if it crosses from the right side of <code>left_x</code> or the left side of <code>right_x</code>, it means that it may enter the AOI of <code>P</code>.</p> <p>It can be seen that the Cross-link List algorithm is much more complex than the Nine-grid algorithm. We need to maintain two sorted lists and synchronize the movement of nodes on the lists whenever an entity coordinate is updated, and update the AOI when crossing over other nodes.</p>","tags":["dev","game"]},{"location":"en/game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#implementation-of-the-nine-grid-system","title":"Implementation of the Nine-grid System","text":"<p>Because it involves performance measurements, let's delve a little deeper into the implementation details of the Sudoku algorithm.</p> <pre><code>struct Sensor {\n  // ...\n  Nuid sensor_id;\n  float radius;\n  float radius_square;\n  PlayerPtrList aoi_players[2];\n};\n\nstruct PlayerAoi {\n  // ...    \n  Nuid nuid;\n  SquareId square_id;\n  int square_index;\n  Pos pos;\n  Pos last_pos;\n  Uint32 flags;\n  std::vector&lt;Sensor&gt; sensors;\n};\n</code></pre> <p><code>PlayerAoi</code> stores player data, including an array called <code>sensors</code> which is used to calculate entities within a certain range. After each <code>Tick</code>, the calculated entities are then placed in the <code>aoi_players</code> array. <code>aoi_players</code> is a container that holds two arrays, used to compare the previous <code>Tick</code> results and determine players entering or leaving. The general flow of <code>Tick</code> is as follows:</p> <pre><code>AoiUpdateInfos SquareAoi::Tick() {\n  AoiUpdateInfos update_infos;\n  PlayerPtrList remove_list;\n\n  for (auto&amp; elem : player_map_) {\n    auto&amp; player = *elem.second;\n    // ...\n// Calculate Aoi for players with sensors\n    if (!player.sensors.empty()) {\n      auto update_info = _UpdatePlayerAoi(cur_aoi_map_idx_, &amp;player);\n      if (!update_info.sensor_update_list.empty()) {\n        update_infos.emplace(update_info.nuid, std::move(update_info));\n      }\n    }\n    // ...\n  }\n\n  // ...\n// Record the player's last position\n  for (auto&amp; elem : player_map_) {\n    auto&amp; player = *elem.second;\n    player.last_pos = player.pos;\n  }\n  cur_aoi_map_idx_ = 1 - cur_aoi_map_idx_;\n  return update_infos;\n}\n</code></pre> <p>The task performed by <code>Tick</code> is very simple. It iterates through players with <code>sensors</code> and calculates the entities within the range of the <code>sensor</code>, which is referred to as AOI (Area of Interest). <code>last_pos</code> is used to determine whether an entity has entered or left the AOI. The code for <code>_UpdatePlayerAoi</code> is as follows:</p> <pre><code>AoiUpdateInfo SquareAoi::_UpdatePlayerAoi(Uint32 cur_aoi_map_idx, PlayerAoi* pptr) {\n  AoiUpdateInfo aoi_update_info;\n  aoi_update_info.nuid = pptr-&gt;nuid;\n  Uint32 new_aoi_map_idx = 1 - cur_aoi_map_idx;\n\n  for (auto&amp; sensor : pptr-&gt;sensors) {\n    auto&amp; old_aoi = sensor.aoi_players[cur_aoi_map_idx];\n    auto&amp; new_aoi = sensor.aoi_players[new_aoi_map_idx];\n    (this-&gt;*calc_aoi_players_func_)(*pptr, sensor, &amp;new_aoi);\n\n    SensorUpdateInfo update_info;\n\n    auto&amp; enters = update_info.enters;\n    auto&amp; leaves = update_info.leaves;\n    float radius_square = sensor.radius_square;\n\n    _CheckLeave(pptr, radius_square, old_aoi, &amp;leaves);\n    _CheckEnter(pptr, radius_square, new_aoi, &amp;enters);\n\n    if (enters.empty() &amp;&amp; leaves.empty()) {\n      continue;\n    }\n\n    update_info.sensor_id = sensor.sensor_id;\n    aoi_update_info.sensor_update_list.push_back(std::move(update_info));\n  }\n\n  return aoi_update_info;\n}\n</code></pre> <p>The <code>old_aoi</code> is the AOI calculated from the previous <code>Tick</code>, and the <code>new_aoi</code> is the AOI to be calculated for this <code>Tick</code>. The <code>new_aoi</code> is obtained by traversing all the entities in the grid within the AOI range and selecting those that are within a distance less than the AOI radius from the player. Then, the <code>_CheckLeave</code> and <code>_CheckEnter</code> functions are used to calculate the entities that leave and enter the AOI in this <code>Tick</code>. For example, if an entity's <code>last_pos</code> in <code>new_aoi</code> is not within the AOI range, it means that the entity has entered the AOI in this <code>Tick</code>. The specific code can be found in the source file, and will not be further elaborated here.</p>","tags":["dev","game"]},{"location":"en/game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#implementation-of-cross-linked-list","title":"Implementation of Cross-linked List","text":"<p>Compared to the nine-grid, the implementation of the cross-linked list is more complex. Let's first take a look at the basic data structure:</p> <pre><code>struct CoordNode {\n  // ...\n  Uint8 type;\n  float value;\n  CoordNode *prev = nullptr;\n  CoordNode *next = nullptr;\n  PlayerAoi *pplayer;\n  Sensor *psensor;\n\n};\n\nKHASH_MAP_INIT_INT64(SensorHashMap, PlayerAoi*);\n\nstruct Sensor {\n  // ...\n  Nuid sensor_id;\n  float radius;\n  float radius_square;\n  PlayerAoi *pplayer;\n  CoordNode left_x;\n  CoordNode right_x;\n  CoordNode left_z;\n  CoordNode right_z;\n  PlayerPtrList aoi_players[2];\n\n  std::shared_ptr&lt;khash_t(SensorHashMap)&gt; aoi_player_candidates;\n};\n\nstruct PlayerAoi {\n  // ...\n  Nuid nuid;\n  Pos pos;\n  Pos last_pos;\n  Uint32 flags;\n  CoordNode node_x;\n  CoordNode node_z;\n  std::vector&lt;Sensor&gt; sensors;\n  std::shared_ptr&lt;boost::unordered_map&lt;Nuid, std::vector&lt;Nuid&gt;&gt;&gt; detected_by;\n};\n</code></pre> <p><code>Sensor</code> and <code>PlayerAoi</code> have some similarities with the 9-grid, but with the addition of a linked list-related node structure called <code>CoordNode</code>. <code>CoordNode</code> represents a node on the linked list, and it records the type and value of the node itself. There are three types: player node, left node of <code>Sensor</code>, and right node of <code>Sensor</code>.</p> <p>Most of the work in a cross-linked list is to maintain the order of the list.</p> <ul> <li>When a player joins, they need to move their player node to the correct position, and at the same time, handle the AOI events of other players entering or leaving.</li> <li>After the player moves to the correct position, the left and right nodes of the <code>Sensor</code> move from the front and back positions of the player to the correct position, and handle the events triggered when crossing other player nodes, such as entering and leaving.</li> <li>When the player moves, update their coordinates and move the player node and the left and right nodes of the <code>Sensor</code>, handling AOI enter and leave events.</li> </ul> <p>The code for moving a node is as follows. Each time a node is traversed, the <code>MoveCross</code> function is called. Based on the direction of movement, the node being moved, and the type of node being crossed, the <code>MoveCross</code> function determines whether to enter or leave the AOI.</p> <pre><code>void ListUpdateNode(CoordNode **list, CoordNode *pnode) {\n  float value = pnode-&gt;value;\n\n  if (pnode-&gt;next &amp;&amp; pnode-&gt;next-&gt;value &lt; value) {\n    // move right\n    auto cur_node = pnode-&gt;next;\n    while (1) {\n      MoveCross(MOVE_DIRECTION_RIGHT, pnode, cur_node);\n      if (!cur_node-&gt;next || cur_node-&gt;next-&gt;value &gt;= value) break;\n      cur_node = cur_node-&gt;next;\n    }\n\n    ListRemove(list, pnode);\n    ListInsertAfter(list, cur_node, pnode);\n\n  } else if (pnode-&gt;prev &amp;&amp; pnode-&gt;prev-&gt;value &gt; value) {\n    // move left\n    auto cur_node = pnode-&gt;prev;\n    while (1) {\n      MoveCross(MOVE_DIRECTION_LEFT, pnode, cur_node);\n      if (!cur_node-&gt;prev || cur_node-&gt;prev-&gt;value &lt;= value) break;\n      cur_node = cur_node-&gt;prev;\n    }\n\n    ListRemove(list, pnode);\n    ListInsertBefore(list, cur_node, pnode);\n  }\n}\n</code></pre> <p>Moving the linked list is slow, with a complexity of <code>O(n)</code>, especially when a new player joins the scene. The player needs to move gradually from a faraway location to the correct position, which requires traversing a large number of nodes and consumes a significant amount of resources. To optimize performance, we can place lighthouses in fixed positions in the scene. These lighthouses function similarly to players, but they additionally maintain a separate set of <code>detected_by</code> data, which records the sensors within range of the sentinel entity. When a player first enters the scene, they no longer start moving from the farthest point. Instead, they find the nearest lighthouse, insert their node next to it, and quickly enter the AOI (Area of Interest) range of other players who match the lighthouse's <code>detected_by</code> data. Then, they begin moving to the correct position. Of course, during the movement, entering and leaving also need to be handled. Similarly, for sensors, we can first inherit the lighthouse's data and then move to the correct position from the lighthouse's location. By implementing these two optimizations, player insertion performance can be improved by more than double.</p> <p><code>Sensor</code> has another <code>HashMap</code> called <code>aoi_player_candidates</code> (here, for performance reasons, khash is used). The AOI events triggered by node movement can only detect a square area with side length <code>2r</code> on the X-Z coordinate axis, which is not strictly a circular AOI. The entities within this square area are recorded in <code>aoi_player_candidates</code> and the circular AOI range is calculated by iterating through them in the <code>Tick</code> function, hence the name <code>candidates</code>.</p> <p>All operations of the cross-linked list are to continuously maintain the entities <code>candidates</code> within the square area. The operations performed by the <code>Tick</code> in the cross-linked list are almost identical to those of the 9-grid, except that the calculation of the AOI <code>candidates</code> in the traversal is different. The <code>candidates</code> in the 9-grid are the entities covered by the circular AOI area in the grid, while the cross-linked list is the entities in the square area defined by the left and right nodes of the <code>Sensor</code> with a side length of <code>2r</code>. Qualitatively speaking, the <code>candidates</code> in the cross-linked list are generally fewer than those in the 9-grid, so the number of traversals in the <code>Tick</code> is smaller, resulting in better performance. However, the cross-linked list also has a lot of additional performance overhead on maintaining the list. The overall performance of these two approaches remains to be tested.</p>","tags":["dev","game"]},{"location":"en/game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#performance-testing","title":"Performance Testing","text":"<p>I have separately tested the time consumption of the player joining the scene (<code>Add Player</code>), calculating AOI enter and exit events (<code>Tick</code>), and updating player coordinates (<code>Update Pos</code>).</p> <p>The player's initial position is randomly generated within the map range, and then the player is added to the scene. <code>player_num</code> represents the number of players, and <code>map_size</code> denotes the range of X-Z coordinates on the map. The player's position is uniformly generated within this range. Each player has a <code>Sensor</code> with a radius of 100, which is used for AOI (Area of Interest). The boost::cpu_timer is used for time calculation. The <code>player_num</code> field includes three scenarios: 100, 1000, and 10000, while the <code>map_size</code> field includes four scenarios: [-50, 50], [-100, 100], [-1000, 1000], and [-10000, 10000].</p> <p>Updating player position will make the player move in a fixed random direction at a speed of <code>6m/s</code>.</p> <p>The current test environment is:</p> <ul> <li>CPU: Intel(R) Core(TM) i5-4590 CPU @ 3.30GHz</li> <li>System: Debian GNU/Linux 10 (buster)</li> <li>gcc version: gcc version 8.3.0 (Debian 8.3.0-6)</li> <li>boost version: boost_1_75_0</li> </ul>","tags":["dev","game"]},{"location":"en/game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#nine-grid-actual-test","title":"Nine-grid Actual Test","text":"<p>The test results for the grid of nine squares are as follows:</p> <pre><code>===Begin Milestore: player_num = 100, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 0.000081s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000452s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000230s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 0.000070s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000338s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000185s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 0.000084s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000103s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000187s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.000084s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000080s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000185s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 0.000673s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.035298s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (85.0%)\nUpdate Pos (10 times) 0.001841s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 0.000664s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.025806s wall, 0.030000s user + 0.000000s system = 0.030000s CPU (116.3%)\nUpdate Pos (10 times) 0.001842s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 0.000721s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.001793s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.001849s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (540.8%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.000885s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000804s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.001855s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 0.006454s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (154.9%)\nTick (1 times) 3.822028s wall, 3.800000s user + 0.020000s system = 3.820000s CPU (99.9%)\nUpdate Pos (10 times) 0.018402s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (108.7%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 0.006439s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 2.805551s wall, 2.760000s user + 0.040000s system = 2.800000s CPU (99.8%)\nUpdate Pos (10 times) 0.018489s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (54.1%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 0.006698s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (149.3%)\nTick (1 times) 0.093759s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (106.7%)\nUpdate Pos (10 times) 0.018350s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (54.5%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.009046s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (110.6%)\nTick (1 times) 0.012091s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (82.7%)\nUpdate Pos (10 times) 0.019033s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (105.1%)\n===End Milestore\n</code></pre> <p>In the game grid, when there are <code>100</code> players, the time required for the three operations is very short. In the extreme case where <code>map_size = [-50, 50]</code>, all players are within the AOI range, and the time required for each <code>Tick</code> is approximately <code>0.4ms</code>. The performance is good, and both the player joining the scene and updating the coordinates have a linear complexity of <code>O(player_num)</code>.</p> <p>However, when the number of players reaches ten thousand (<code>player_num = 10000</code>) with a map size of <code>[-50, 50]</code>, both the <code>Add Player</code> and <code>Update Pos</code> operations can be completed within a few milliseconds due to their linear complexity. But the <code>Tick</code> operation takes up to <code>3.8s</code>, requiring a significant amount of CPU resources and rendering it unusable. In the case of ten thousand players and a map size of <code>[-1000, 1000]</code>, the <code>Tick</code> operation consumes approximately <code>94ms</code>. If the <code>Tick</code> frequency is reduced, for example, to twice per second, it can still be considered usable, albeit with some difficulty.</p>","tags":["dev","game"]},{"location":"en/game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#cross-linked-list-measurement","title":"Cross-linked List Measurement","text":"<p>The test results of the cross-linked list are as follows:</p> <pre><code>===Begin Milestore: player_num = 100, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 0.002057s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000330s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000232s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 0.001201s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000222s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000272s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 0.000288s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000048s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000200s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 100, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.000194s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nTick (1 times) 0.000041s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.000192s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 0.130766s wall, 0.130000s user + 0.000000s system = 0.130000s CPU (99.4%)\nTick (1 times) 0.028091s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (71.2%)\nUpdate Pos (10 times) 0.005369s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (186.2%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 0.103015s wall, 0.100000s user + 0.000000s system = 0.100000s CPU (97.1%)\nTick (1 times) 0.019545s wall, 0.020000s user + 0.000000s system = 0.020000s CPU (102.3%)\nUpdate Pos (10 times) 0.009208s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (108.6%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 0.010150s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (98.5%)\nTick (1 times) 0.000845s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.003023s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 1000, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.004950s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (202.0%)\nTick (1 times) 0.000427s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\nUpdate Pos (10 times) 0.002234s wall, 0.000000s user + 0.000000s system = 0.000000s CPU (n/a%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-50.000000, 50.000000)\nAdd Player (1 times) 21.606402s wall, 21.040000s user + 0.570000s system = 21.610000s CPU (100.0%)\nTick (1 times) 3.696885s wall, 3.680000s user + 0.030000s system = 3.710000s CPU (100.4%)\nUpdate Pos (10 times) 0.434396s wall, 0.430000s user + 0.000000s system = 0.430000s CPU (99.0%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-100.000000, 100.000000)\nAdd Player (1 times) 18.499235s wall, 18.470000s user + 0.020000s system = 18.490000s CPU (100.0%)\nTick (1 times) 2.292608s wall, 2.290000s user + 0.000000s system = 2.290000s CPU (99.9%)\nUpdate Pos (10 times) 1.522617s wall, 1.530000s user + 0.000000s system = 1.530000s CPU (100.5%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-1000.000000, 1000.000000)\nAdd Player (1 times) 1.642519s wall, 1.640000s user + 0.000000s system = 1.640000s CPU (99.8%)\nTick (1 times) 0.042767s wall, 0.050000s user + 0.000000s system = 0.050000s CPU (116.9%)\nUpdate Pos (10 times) 0.202949s wall, 0.200000s user + 0.000000s system = 0.200000s CPU (98.5%)\n===End Milestore\n\n===Begin Milestore: player_num = 10000, map_size = (-10000.000000, 10000.000000)\nAdd Player (1 times) 0.571257s wall, 0.570000s user + 0.000000s system = 0.570000s CPU (99.8%)\nTick (1 times) 0.006325s wall, 0.010000s user + 0.000000s system = 0.010000s CPU (158.1%)\nUpdate Pos (10 times) 0.042568s wall, 0.040000s user + 0.000000s system = 0.040000s CPU (94.0%)\n===End Milestore\n</code></pre> <p>As we analyze, the cross-linked list takes more time in <code>Add Player</code> and <code>Update Pos</code>, especially in <code>Add Player</code>, which is several hundred or even tens of thousands times slower than the grid performance (<code>100, [-50, 50]</code> cross-linked list takes <code>2ms</code>, while the grid only takes <code>0.08ms</code>; <code>10000, [-50, 50]</code> cross-linked list takes <code>21.6s</code>, while the grid only takes <code>6ms</code>). There can also be a difference of up to a hundredfold in the execution time of <code>Update Pos</code>, where <code>10000, [-100, 100]</code> cross-linked list takes <code>1.5s</code>, while the grid takes only <code>18ms</code>. It can be observed that the cross-linked list has a wider range of execution time for <code>Add Player</code> and <code>Update Pos</code> compared to the grid, and is more affected by the number of players and the size of the map. In densely populated areas, the performance of these two operations will rapidly decline until they become unusable.</p> <p>Looking at the <code>Tick</code> operation of the Cross-chain, the overall performance is indeed better than that of the Nine-grid. In the best case, the time consumed is approximately only half of the Nine-grid's time (<code>0.8ms</code> for Cross-chain with <code>1000, [-1000, 1000]</code>, and <code>1.8ms</code> for Nine-grid), but in the worst case, the performance of the Cross-chain will degrade to be close to that of the Nine-grid (<code>3.7s</code> for Cross-chain with <code>10000, [-10000, 10000]</code>, and <code>3.8s</code> for Nine-grid). This is because, due to the small scene, players are all within each other's AOI range, and the number of <code>candidates</code> traversed by the Cross-chain <code>Tick</code> is actually very close to that of the Nine-grid.</p> <p>The Cross-Chain needs to achieve better performance than the Nine-Grid when used. This requires some stronger assumptions, such as <code>player_num = 1000, map_size = [-1000, 1000]</code>. In this case, the Cross-Chain takes 0.8ms for <code>Tick</code>, while the Nine-Grid takes 1.8ms; for <code>Update Pos</code>, the Cross-Chain takes 0.3ms and the Nine-Grid takes 0.18ms (note that the test time for <code>Update Pos</code> is the sum of the time for 10 executions). In order for the Cross-Chain to be faster than the Nine-Grid in terms of the total time of <code>Tick + Update Pos</code>, the number of <code>Update Pos</code> operations cannot exceed 8 times the number of <code>Tick</code> operations, or in other words, the number of <code>Update Pos</code> operations between two <code>Tick</code> operations needs to be less than 8 times. </p> <p>Furthermore, due to the significant time consumption of <code>Add Player</code> in the Cross-Chain, it is not suitable for scenarios where players frequently enter and exit scenes within a short period of time or when there is large-scale teleportation within the scene. Additionally, if a large number of players enter the scene within a short period of time, it can easily lead to performance degradation and consume a significant amount of CPU resources.</p> <p>For the cross-linked list, there is an optimization that can be done under one condition: get rid of <code>Tick</code>. The condition is that the game can accept a square-shaped AOI, and the additional costs such as network consumption brought by the square-shaped AOI are acceptable when measured. Actually, the condition is quite strict, because in the game, the CPU usage of AOI calculation is usually not significant. However, changing the circular AOI to a square AOI increases the area of the AOI range, and the number of players within the range may increase, possibly up to 1.27 times the original amount under a uniform distribution. However, once the condition is met, the cross-linked list can eliminate the need for <code>Tick</code> to periodically update AOI events, because the <code>candidates</code> of the cross-linked list already maintains a square-shaped AOI, which was originally used only for calculating the circular AOI distance in <code>Tick</code>. In this case, the cross-linked list has the potential to achieve excellent performance, as the performance of the cross-linked list's <code>Update Pos</code> can be several times to tens of times better than <code>Tick</code>.</p> <p>Finally, here is a comparative bar graph of the two:</p> <p></p> <p></p> <p></p>","tags":["dev","game"]},{"location":"en/game-%E6%B8%B8%E6%88%8FAOI%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E6%80%A7%E8%83%BD%E5%AE%9E%E6%B5%8B/#summary","title":"Summary","text":"<p>In this article, we introduce the principles and basic implementations of two AOI algorithms (grid-based and cross-linked), and analyze the performance pros and cons of these two algorithms through empirical data. We hope that this will provide some assistance or inspiration to the readers.</p> <p>In general, the Nine-grid method is easy to implement and has balanced performance. It is very suitable for games that are not performance-intensive, such as AOI. The performance fluctuation range of the Nine-grid method is within the expected range, with a relatively high performance lower limit, making it less likely to become a bottleneck. However, on the other hand, the optimization space is not large, and the time complexity is relatively fixed.  On the contrary, the Cross-chain method has a more complex implementation and a lower performance lower limit compared to the Nine-grid method. However, if certain assumptions and prerequisites can be met, the Cross-chain method can offer higher optimization space, in other words, the upper limit can be higher.  These two methods have their own advantages and disadvantages. Different game engines in the gaming industry have chosen one of them. It's a matter of personal preference and needs.</p> <p>I have limited ability, and the content of this text only represents my own thoughts. If there are any deficiencies or inappropriate aspects, please feel free to leave a comment for discussion.</p> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev","game"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/","title":"Python Chat 1 - Exploring __builtins__","text":"","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#introduction","title":"Introduction","text":"<p>We know that <code>__builtins__</code> itself is an object that exists in the global namespace, intentionally exposed by Python at the code level, and can be directly used anywhere in the code. But a little-known fact is that in the <code>main</code> module (also known as <code>__main__</code>, referring to the same module, which may be used interchangeably later), it refers to the <code>__builtin__</code> module, whereas in other modules, it represents <code>__builtin__.__dict__</code>, which is a bit perplexing. Although it's not recommended to use <code>__builtins__</code> directly, why do you bring up two scenarios? In this article, we will explore the origin of this setting and find answers to these questions: What is the difference between <code>__builtin__</code> and <code>__builtins__</code>? Why are <code>__builtins__</code> different in the <code>main</code> module and other modules? Where is <code>__builtins__</code> defined?</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#__builtin__","title":"<code>__builtin__</code>","text":"<p>Before discussing <code>__builtins__</code>, we need to take a look at what <code>__builtin__</code> is. <code>__builtin__</code> is the module that contains all the built-in objects. The built-in objects that we can directly use in Python are essentially objects in the <code>__builtin__</code> module, which are located in <code>__builtin__.__dict__</code>, corresponding to Python's built-in namespace. Remember this key point: <code>__builtin__</code> is a module. We can find the definition and usage of the <code>__builtin__</code> module in the Python source code (note that the Python source code mentioned below refers to the CPython-2.7.18 source code):</p> <pre><code>// pythonrun.c\nvoid\nPy_InitializeEx(int install_sigs)\n{\n    PyInterpreterState *interp;\n    ...\n// Initialize __builtin__\n    bimod = _PyBuiltin_Init();\n    // interp-&gt;builtins = __builtin__.__dict__\n    interp-&gt;builtins = PyModule_GetDict(bimod);\n    ...\n}\n\n// bltinmodule.c\nPyObject *\n_PyBuiltin_Init(void)\n{\n    PyObject *mod, *dict, *debug;\n    mod = Py_InitModule4(\"__builtin__\", builtin_methods,\n                         builtin_doc, (PyObject *)NULL,\n                         PYTHON_API_VERSION);\n    if (mod == NULL)\n        return NULL;\n    dict = PyModule_GetDict(mod);\n\n// Add built-in objects to the dictionary\n    ...\n}\n\n// ceval.c\n// Get builtins\nPyObject *\nPyEval_GetBuiltins(void)\n{\n    PyFrameObject *current_frame = PyEval_GetFrame();\n    if (current_frame == NULL)\n        return PyThreadState_GET()-&gt;interp-&gt;builtins;\n    else\n        return current_frame-&gt;f_builtins;\n}\n</code></pre> <p>When Python initializes, it calls <code>_PyBuiltin_Init</code> to create the <code>__builtin__</code> module and adds the built-in objects to it. The interpreter itself will refer to <code>interp-&gt;builtins = __buintin__.__dict__</code>, and the currently executing stack frame structure will also refer to <code>current_frame-&gt;f_builtins</code>. So, naturally, when executing code needs to find an object based on its name, Python will look in <code>current_frame-&gt;f_builtins</code> and be able to access all the built-in objects.</p> <pre><code>// ceval.c\nTARGET(LOAD_NAME)\n{\n// First look in the f-&gt;f_locals namespace\n    ...\n    if (x == NULL) {\n    // Look for the global scope again\n        x = PyDict_GetItem(f-&gt;f_globals, w);\n        if (x == NULL) {\n// Look for it in the built-in space\n            x = PyDict_GetItem(f-&gt;f_builtins, w);\n            if (x == NULL) {\n                format_exc_check_arg(\n                            PyExc_NameError,\n                            NAME_ERROR_MSG, w);\n                break;\n            }\n        }\n        Py_INCREF(x);\n    }\n    PUSH(x);\n    DISPATCH();\n}\n</code></pre> <p>Finally, due to the name <code>__builtin__</code> being too confusing, it has been renamed to <code>builtins</code> in <code>Python3</code>.</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#__builtins__","title":"<code>__builtins__</code>","text":"<p>The behavior of <code>__builtins__</code> is a bit strange: In the <code>main</code> module (the <code>main</code> module, also known as the <code>environment where the top-level code is executed</code>, is the Python module specified by the user to run first. This is typically the module that we run from the command line using <code>python xxx.py</code>. Here, <code>xxx.py</code> is the module), <code>__builtins__ = __builtin__</code>. In other modules, <code>__builtins__ = __builtin__.__dict__</code>.</p> <p>The same name, but behaving differently in different modules, can easily be confusing. However, as long as you understand this setup, it's enough to support you in using <code>__builtins__</code> in Python, and confusion will not affect your ability to write sufficiently secure code, such as:</p> <pre><code>def SetBuiltins(builtins, key, val):\n    if isinstance(builtins, dict):\n        builtins[key] = val\n    else:\n        setattr(builtins, key, val)\n\nSetBuiltins(__builtins__, 'test', 1)\n</code></pre> <p>It's worth noting that it's actually not recommended to use <code>__builtins__</code>:</p> <p>CPython implementation detail: Users should not touch <code>__builtins__</code>; it is strictly an implementation detail. Users wanting to override values in the builtins namespace should import the <code>__builtin__</code> (no \u2018s\u2019) module and modify its attributes appropriately.</p> <p>Of course, such doubts will eventually make you curious. That's why I've decided to continue exploring, which is also the reason for this article. The following content will delve deeply into the CPython implementation detail.</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#restricted-execution","title":"Restricted Execution","text":"<p>Restricted Execution can be understood as executing unsafe code with limitations. The so-called restrictions can include limiting access to the network, I/O, and so on, to confine the code within a certain execution environment, controlling the code's execution permissions, and preventing it from impacting the external environment and system. A common use case is online code execution websites, such as this one: pythonsandbox\u3002</p> <p>As you guessed, the setting of <code>__builtins__</code> in Python is related to Restricted Execution. Python provided similar functionality prior to version 2.3 [Restricted Execution] as expected.(https://docs.python.org/2.7/library/restricted.html)Just because it was later confirmed to be unworkable, this feature had to be disabled. However, the code is still preserved in version 2.7.18, so we can go back and take a look.</p> <p>First, let's take a look at the setting of <code>__builtins__</code> in the <code>Python</code> source code:</p> <pre><code>// pythonrun.c\nstatic void initmain(void)\n{\n    PyObject *m, *d;\n// Get the __main__ module\n    m = PyImport_AddModule(\"__main__\");\n    if (m == NULL)\n        Py_FatalError(\"can't create __main__ module\");\n\n    // d = __main__.__dict__\n    d = PyModule_GetDict(m);\n\nSet `__builtins__` in `__main__.__dict__`, if it does not exist already.\n    if (PyDict_GetItemString(d, \"__builtins__\") == NULL) {\n        PyObject *bimod = PyImport_ImportModule(\"__builtin__\");\n        if (bimod == NULL ||\n            PyDict_SetItemString(d, \"__builtins__\", bimod) != 0)\n            Py_FatalError(\"can't add __builtins__ to __main__\");\n        Py_XDECREF(bimod);\n    }\n}\n</code></pre> <p>In <code>initmain</code>, <code>Python</code> will set the <code>__builtins__</code> attribute for the <code>__main__</code> module by default to be equal to the <code>__builtin__</code> module, but if it already exists, it will be skipped and not reset. Taking advantage of this characteristic, we can modify <code>__main__.__builtins__</code> to change some built-in functionalities, in order to restrict the execution permissions of the code. The specific method is not mentioned for now, but let's take a look at how <code>__builtins__</code> is propagated.</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#passing-__builtins__","title":"Passing <code>__builtins__</code>","text":"<p>When creating a new stack frame:</p> <pre><code>PyFrameObject *\nPyFrame_New(PyThreadState *tstate, PyCodeObject *code, PyObject *globals,\n            PyObject *locals)\n{\n    ...\n    if (back == NULL || back-&gt;f_globals != globals) {\n// Use globals['__builtins__'] as the __builtins__ for the new stack frame\nThe `builtin_object` is the string '__builtins__'.\n        builtins = PyDict_GetItem(globals, builtin_object);\n        if (builtins) {\n            if (PyModule_Check(builtins)) {\n                builtins = PyModule_GetDict(builtins);\n                assert(!builtins || PyDict_Check(builtins));\n            }\n            else if (!PyDict_Check(builtins))\n                builtins = NULL;\n        }\n        ...\n\n    }\n    else {\n        /* If we share the globals, we share the builtins.\n           Save a lookup and a call. */\n// Or directly inherit f_builtins from the upper stack frame\n        builtins = back-&gt;f_builtins;\n        assert(builtins != NULL &amp;&amp; PyDict_Check(builtins));\n        Py_INCREF(builtins);\n    }\n    ...\n    f-&gt;f_builtins = builtins;\n    f-&gt;f_globals = globals;\n}\n</code></pre> <p>When creating a new stack frame, there are mainly two ways to handle <code>__builtins__</code>: one is when there is no upper-level stack frame, you take <code>globals['__builtins__']</code>; the other is to directly take <code>f_builtins</code> from the upper-level stack frame. In summary, under normal circumstances, the <code>__builtins__</code> set in <code>__main__</code> will be inherited by subsequent stack frames as if they were shared.</p> <p>When importing the <code>import</code> module:</p> <pre><code>static PyObject *\nload_compiled_module(char *name, char *cpathname, FILE *fp)\n{\n    long magic;\n    PyCodeObject *co;\n    PyObject *m;\n    ...\n    co = read_compiled_module(cpathname, fp);\n    ...\n    m = PyImport_ExecCodeModuleEx(name, (PyObject *)co, cpathname);\n    ...\n}\n\n\nPyObject *\nPyImport_ExecCodeModuleEx(char *name, PyObject *co, char *pathname)\n{\n    ...\n    m = PyImport_AddModule(name);\n    ...\n    // d = m.__dict__\n    d = PyModule_GetDict(m);\n\n// Set the __builtins__ property for the new loaded module here\n    if (PyDict_GetItemString(d, \"__builtins__\") == NULL) {\n        if (PyDict_SetItemString(d, \"__builtins__\",\n                                 PyEval_GetBuiltins()) != 0)\n            goto error;\n    }\n    ...\n    // globals = d, locals = d\n    v = PyEval_EvalCode((PyCodeObject *)co, d, d);\n    ...\n}\n\nPyObject *\nPyEval_EvalCode(PyCodeObject *co, PyObject *globals, PyObject *locals)\n{\n    return PyEval_EvalCodeEx(co,\n                      globals, locals,\n                      (PyObject **)NULL, 0,\n                      (PyObject **)NULL, 0,\n                      (PyObject **)NULL, 0,\n                      NULL);\n}\n</code></pre> <p>When <code>import</code>ing other modules, the <code>__builtins__</code> of that module will be set to the return value of <code>PyEval_GetBuiltins()</code>, which we have already mentioned, in most cases it is equivalent to <code>current_frame-&gt;f_builtins</code>. For <code>import</code> within the <code>__main__</code> module, <code>current_frame</code> is the stack frame of the <code>__main__</code> module, and <code>current_frame-&gt;f_builtins = __main__.__dict__['__builtins__']</code> (the first case mentioned in the previous section about <code>PyFrame_New</code>).</p> <p>The newly loaded module will use <code>PyEval_EvalCode</code> to execute the code in the new module. You can see that the arguments <code>globals</code> and <code>locals</code> passed to <code>PyEval_EvalCode</code> are actually the module's own <code>__dict__</code>, and the module <code>m.__dict__['__builtins__'] = PyEval_GetBuiltins()</code>.</p> <p>From a comprehensive view, we can infer that the modules imported starting from the <code>__main__</code> module will also inherit the <code>__builtins__</code> in <code>__main__</code> and pass it down in internal imports. This ensures that all modules and submodules loaded from <code>__main__</code> can share the same <code>__builtins__</code> from `main.</p> <p>So what if the function is called within a module? For functions within a module, when creating and calling them:</p> <pre><code>// ceval.c\n// Create function\nTARGET(MAKE_FUNCTION)\n{\n    v = POP(); /* code object */\n\n// The `f-&gt;f_globals` here is equivalent to the module's own globals, as mentioned above, it is also equivalent to `m.__dict__`.\n    x = PyFunction_New(v, f-&gt;f_globals);\n    ...\n}\n\nPyObject *\nPyFunction_New(PyObject *code, PyObject *globals)\n{\n    PyFunctionObject *op = PyObject_GC_New(PyFunctionObject,\n                                        &amp;PyFunction_Type);\n    ...\n// This is equivalent to op-&gt;func_globals = globals = f-&gt;f_globals\n    op-&gt;func_globals = globals;\n}\n\n// Call the function\nstatic PyObject *\nfast_function(PyObject *func, PyObject ***pp_stack, int n, int na, int nk)\n{\n    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);\n    // globals = func-&gt;func_globals\n    PyObject *globals = PyFunction_GET_GLOBALS(func);\n    ...\n// Global variables are passed to PyEval_EvalCodeEx, which in turn passes them to PyFrame_New to create a new stack frame.\n    return PyEval_EvalCodeEx(co, globals,\n                             (PyObject *)NULL, (*pp_stack)-n, na,\n                             (*pp_stack)-2*nk, nk, d, nd,\n                             PyFunction_GET_CLOSURE(func));\n}\n</code></pre> <p>When creating a function, the variable <code>f-&gt;f_globals</code> is stored in the function structure variable <code>func_globals</code>, and for the module <code>m</code>, <code>f-&gt;f_globals = m.__dict__</code>. When the function is executed, the <code>globals</code> parameter passed to <code>PyFrame_New</code> is the <code>func_globals</code> that was saved during creation, and <code>__builtins__</code> can naturally be obtained in <code>func_globals</code>.</p> <p>So far, the propagation of <code>__builtins__</code> can ensure consistency. All modules, submodules, functions, stack frames, etc. can refer to the same one, which means they have the same built-in namespace.</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#specify-execution-of-the-__main__-module","title":"Specify execution of the <code>__main__</code> module.","text":"<p>We already know that the <code>__builtins__</code> of the <code>__main__</code> module can be passed to all submodules, functions, and stack frames. When executing <code>python a.py</code> from the command line, Python will execute <code>a.py</code> as the <code>__main__</code> module. How is this achieved?</p> <pre><code>// python.c\nint\nmain(int argc, char **argv)\n{\n    ...\n    return Py_Main(argc, argv);\n}\n\n// main.c\nint\nPy_Main(int argc, char **argv)\n{\n    ...\n// Try executing code using the importer of the module\n    if (filename != NULL) {\n        sts = RunMainFromImporter(filename);\n    }\n    ...\n// Typically, we use this to execute our own py files.\n    sts = PyRun_AnyFileExFlags(\n            fp,\n            filename == NULL ? \"&lt;stdin&gt;\" : filename,\n            filename != NULL, &amp;cf) != 0;\n    }\n    ...\n}\n\n// pythonrun.c\nint\nPyRun_AnyFileExFlags(FILE *fp, const char *filename, int closeit,\n                     PyCompilerFlags *flags)\n{\n    ...\n    return PyRun_SimpleFileExFlags(fp, filename, closeit, flags);\n}\n\n\nint\nPyRun_SimpleFileExFlags(FILE *fp, const char *filename, int closeit,\n                        PyCompilerFlags *flags)\n{\n    ...\n    m = PyImport_AddModule(\"__main__\");\n    d = PyModule_GetDict(m);\n    ...\n// Set the __file__ attribute\n    if (PyDict_SetItemString(d, \"__file__\", f) &lt; 0) {\n        ...\n    }\n    ...\n    // globals = locals = d = __main__.__dict__\n    v = run_pyc_file(fp, filename, d, d, flags);\n    ...\n}\n\nstatic PyObject *\nrun_pyc_file(FILE *fp, const char *filename, PyObject *globals,\n             PyObject *locals, PyCompilerFlags *flags)\n{\n    ...\n// Read code object co from pyc file and execute the code.\n// PyEval_EvalCode also calls PyFrame_New to create a new frame.\n    v = PyEval_EvalCode(co, globals, locals);\n    ...\n}\n</code></pre> <p>When executing <code>python a.py</code>, in general, it will reach <code>PyRun_SimpleFileExFlags</code>. Inside <code>PyRun_SimpleFileExFlags</code>, it will fetch <code>__main__.__dict__</code> as the <code>globals</code> and <code>locals</code> when executing the code, eventually passing it to <code>PyFrame_New</code> to create a new stack frame to execute <code>a.py</code>. Combined with what we mentioned earlier about passing <code>__builtins__</code> in modules and functions, this allows subsequent code executions to share the same <code>current_frame-&gt;f_builtins = __main__.__builtins__.__dict__</code>.</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#revisiting-restricted-execution","title":"Revisiting Restricted Execution","text":"<p><code>Python</code> has provided [Restricted Execution] before version 2.3.(https://docs.python.org/2.7/library/restricted.html)It is made based on the characteristics of <code>__builtins__</code>. Alternatively, one can consider that the reason <code>__builtins__</code> is designed as a module object in the <code>__main__</code> module and as a <code>dict</code> object in other modules is to achieve Restricted Execution.</p> <p>Consider this scenario: if we could freely customize our <code>__builtin__</code> module and set it as <code>__main__.__builtins__</code>, then all subsequent executed code would use our customized module. We would be able to customize specific versions of built-in functions and types such as <code>open</code>, <code>__import__</code>, <code>file</code>, and so on. Furthermore, could this approach help us restrict the permissions for executing code, preventing it from making unsafe function calls or accessing unsafe files?</p> <p><code>Python</code> had already made this attempt at that time, and the module that implements this functionality is called <code>rexec</code>.</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#rexec","title":"<code>rexec</code>","text":"<p>I don't intend to go into too much detail about the implementation of <code>rexec</code>, because the principle has already been explained in the previous text, and this module itself is deprecated. I will simply provide a brief summary of some key code snippets for easy reference.</p> <pre><code># rexec.py\nclass RExec(ihooks._Verbose):\n    ...\n    nok_builtin_names = ('open', 'file', 'reload', '__import__')\n\n    def __init__(self, hooks = None, verbose = 0):\n        ...\n        self.modules = {}\n        ...\n        self.make_builtin()\n        self.make_initial_modules()\n        self.make_sys()\n        self.loader = RModuleLoader(self.hooks, verbose)\n        self.importer = RModuleImporter(self.loader, verbose)\n\n    def make_builtin(self):\n        m = self.copy_except(__builtin__, self.nok_builtin_names)\n        m.__import__ = self.r_import\n        m.reload = self.r_reload\n        m.open = m.file = self.r_open\n\n    def add_module(self, mname):\n        m = self.modules.get(mname)\n        if m is None:\n            self.modules[mname] = m = self.hooks.new_module(mname)\n        m.__builtins__ = self.modules['__builtin__']\n        return m\n\n    def r_exec(self, code):\n        m = self.add_module('__main__')\n        exec code in m.__dict__\n\n    def r_eval(self, code):\n        m = self.add_module('__main__')\n        return eval(code, m.__dict__)\n\n    def r_execfile(self, file):\n        m = self.add_module('__main__')\n        execfile(file, m.__dict__)\n</code></pre> <p>The <code>r_execfile</code> function executes the file as the <code>__main__</code> module, except <code>__main__</code> is customized. In the <code>self.add_module('__main__')</code> code, the module's <code>m.__builtins__</code> is set to <code>self.modules['__builtin__']</code>. The <code>__builtin__</code> is custom-generated by <code>make_builtin</code>, replacing the <code>__import__</code>, <code>reload</code>, and <code>open</code> functions and deleting the <code>file</code> type. This way, we can control the access to the built-in namespace by the code to be executed.</p> <p>For some built-in modules, <code>rexec</code> has also been customized to protect against unsafe access. For example, the <code>sys</code> module only keeps a portion of its objects and uses the customized <code>self.loader</code> and <code>self.importer</code> to prioritize loading the customized modules when importing.</p> <p>If you are interested in the details of the code, please refer to the relevant source code yourself.</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#the-failure-of-rexec","title":"The failure of <code>rexec</code>","text":"<p>The previous mentioned, <code>Python 2.3</code> and later, <code>rexec</code> has been deprecated, because this approach has been proven to be unfeasible. With curiosity, let's briefly trace the origin:</p> <ul> <li>Someone reported a [Bug] in the community.(https://mail.python.org/pipermail/python-dev/2002-December/031160.html)And triggered a discussion among developers: <p>it's never going to be safe, and I doubt it's very useful as long as it's not safe.</p> <p>Every change is a potential security hole.</p> <p>it's hard to predict what change is going to break it.</p> <p>I don't expect you'll ever reach the point where it'll be wise to advertise this as safe.  I certainly won't.</p> <p>this is only a useful occupation if you expect to eventually reach a point where you expect that there aren't any security flaws left.  Jeremy &amp; I both doubt that Python will ever reach that level, meaning that the whole exercise of fixing security flaws is a waste of time (if you know you can't make it safe, don't waste time trying).</p> <p>I agree (but I have said that in past) the best thing is to deprecate/rip out rexec.</p> <p>The code will still be in older versions if someone decides to pick it up and work on it as a separate project.</p> </li> </ul> <p>The cause of this bug was that <code>Python</code> introduced the new-style class <code>object</code>, which resulted in <code>rexec</code> not functioning properly. As a result, developers expressed that in the foreseeable future, it would be difficult to avoid this situation, as any changes might lead to <code>rexec</code> vulnerabilities, malfunctioning, or breaches of permission restrictions, making it practically impossible to provide a secure environment without vulnerabilities. Developers would constantly need to fix and patch, wasting a considerable amount of time. In the end, the <code>rexec</code> module was abandoned, and <code>Python</code> did not provide similar functionality again. However, the setting of <code>__builtins__</code> was retained due to compatibility issues and other reasons.</p> <p>In the back, around 2010, a programmer launched [pysandbox].(https://github.com/vstinner/pysandbox)\uff0cdedicated to providing a <code>Python</code> sandbox environment that can replace <code>rexec</code>. However, after 3 years, the author voluntarily abandoned this project and detailed why the author believed the project had failed: The pysandbox project is broken\uff0cother authors have also written articles summarizing the failure of this project: The failure of pysandboxIf you're interested, you can take a look at the original text for more details. I'll also provide some excerpts here to help you understand:</p> <p>After having work during 3 years on a pysandbox project to sandbox untrusted code, I now reached a point where I am convinced that pysandbox is broken by design. Different developers tried to convinced me before that pysandbox design is unsafe, but I had to experience it myself to be convineced.</p> <p>I now agree that putting a sandbox in CPython is the wrong design. There are too many ways to escape the untrusted namespace using the various introspection features of the Python language. To guarantee the [safety] of a security product, the code should be [carefully] audited and the code to review must be as small as possible. Using pysandbox, the \"code\" is the whole Python core which is a really huge code base. For example, the Python and Objects directories of Python 3.4 contain more than 126,000 lines of C code.</p> <p>The security of pysandbox is the security of its weakest part. A single bug is enough to escape the whole sandbox.</p> <p>pysandbox cannot be used in practice. To protect the untrusted namespace, pysandbox installs a lot of different protections. Because of all these protections, it becomes hard to write Python code. Basic features like \"del dict[key]\" are denied. Passing an object to a sandbox is not possible to sandbox, pysandbox is unable to proxify arbitary objects. For something more complex than evaluating \"1+(2*3)\", pysandbox cannot be used in practice, because of all these protections.</p> <p>The author of pysandbox believes that creating a sandbox environment within <code>Python</code> is a flawed design. There are too many ways to escape from the sandbox, <code>Python</code> offers rich language features, and the extensive codebase of <code>CPython</code> makes it nearly impossible to ensure sufficient security. The development of pysandbox has involved continuously patching the system with so many restrictions that the author now believes it is no longer practical to use. Many syntax features and functionalities, such as simple operations like <code>del dict[key]</code>, have been restricted and cannot be used.</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#restricted-execution-where-is-the-way-out","title":"Restricted Execution Where is the way out","text":"<p>Since methods like <code>rexec</code> and pysandbox that provide sandbox environments by patching Python are no longer feasible, I can't help but wonder: How can Python be provided with a usable sandbox environment?</p> <p>Here I continue to collect some other implementation methods or cases for easy reference and consultation:</p> <ul> <li>PyPyThere is a branchProvided sandbox functionality, combined with additional sandboxlib, you can compile a version of PyPy with a sandbox environment by yourself. If you are interested, you can try to configure it on your own, referring to some [instructions] here.(https://foss.heptapod.net/pypy/pypy/-/issues/3192)The principle behind PyPy\u2019s implementation is to create a subprocess, where all the input, output, and system calls are redirected to an external process, which controls those permissions. Additionally, it can also control the usage of memory and CPU. It's worth noting that this branch has not had any new commits for some time, so please use it with caution.</li> </ul> <p>By using the sandbox environment tool provided by the operating system. [seccomp](https://en.wikipedia.org/wiki/Seccomp)It is a security tool provided by the Linux kernel, [libseccomp].(https://github.com/seccomp/libseccomp/tree/main/src/python)Provided Python bindings, which can be embedded into code for use; or use tools based on seccomp to execute code, such as [Firejail].(https://firejail.wordpress.com/). AppArmorIt is a Linux kernel security module that allows administrators to control the system resources and functionality that programs can access, thus protecting the operating system. codejailIt's a Python sandbox environment based on AppArmor. Feel free to give it a try. There are many similar tools out there, but I won't list them all here.</p> <ul> <li>Use sandbox virtual environment or containers. Windows Sandbox<code>,</code>LXC, Docker\u200b\u7b49\u7b49\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4e0d\u518d\u200b\u8be6\u8ff0\u200b\u3002</li> </ul>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%881-%E6%8E%A2%E7%A9%B6__builtins__/#summary","title":"Summary","text":"<p>This article is a bit long, thank you for reading this far, I believe all the questions raised at the beginning of the article have been fully answered.</p> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev","game","python","__builtins__","builtins"]},{"location":"en/py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/","title":"Python Miscellaneous 2 - Python 3.12 Hot Reload","text":"","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"en/py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#python-miscellaneous-2-python-312-hot-update","title":"Python Miscellaneous 2 - Python 3.12 Hot Update","text":"<p>Record how to implement hot reloading in Python 3.12</p>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"en/py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#hot-update","title":"Hot update","text":"<p>Hot Reload is a technology that allows updates to be made to a program without the need for a restart. This technology is widely used in the gaming industry. When developers need to fix issues with games, they often use silent updates, or hot reloads, to avoid impacting players.</p>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"en/py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#python-hot-reload","title":"Python hot reload","text":"<p>Python itself is a dynamic language, where everything is an object and has the ability to achieve hot updates. We can roughly categorize the objects in Python that need hot updates into two types: data and functions.</p> <p>Data can be understood as the numerical values or settings in the game, such as the player's level, equipment, and so on. Some data should not be updated in real-time. For example, the player's current level, the equipment the player has, should not be modified through real-time updates. Some data is what we want to update in real-time, such as the basic numerical settings of equipment, the basic numerical settings of skills, and the text on the UI, and so on.</p> <p>Function, can be understood as game logic, which is basically what we want to hotfix, logic errors basically need to be implemented through hot update functions.</p> <p>Let's take a closer look at what methods can be used to perform hot reloading on Python 3.12.</p>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"en/py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#hotfix","title":"Hotfix","text":"<p>The first method we call Hotfix, it allows the program (both client and server programs) to execute a specific piece of Python code, achieving hot updates to data and functions. A simple Hotfix code might look like this:</p> <pre><code># hotfix code\n\n# hotfix data\nimport weapon_data\nweapon_data.gun.damage = 100\n\n# hotfix func\nimport player\ndef new_fire_func(self, target):\n    target.health -= weapon_data.gun.damage\n    # ...\nplayer.Player.fire_func = new_fire_func\n</code></pre> <p>The above code simply demonstrates the usage of Hotfix. After the data/function is modified, the program will read the new data/function for subsequent access and execution.</p> <p>If you are meticulous, you may have a question: What will happen if other code refers to these data and functions that need to be modified?</p> <pre><code># attack.py module\n\nplayer_fire = player.Player.fire_func\n\ndef player_attack_by_gun(player, target):\n    player_fire(player, target)\n    # ...\n</code></pre> <p>The answer is that the previous Hotfix does not work for this situation. The function <code>fire_func</code> is like an extra copy in another module. The module calls the copy of the function, so the modifications to the original function do not affect the copy.</p> <p>So it's important to note that in general, we should try to minimize module-level data references and function references in the code to avoid situations where Hotfixes don't take effect. If the code is already written this way, extra work will be needed for the Hotfix to work properly:</p> <pre><code># hotfix code\n# ...\n\nimport attack\nattack.player_fire = player.Player.fire_func\n</code></pre> <p>After modifying the data/function core with a hotfix, make additional modifications to the places where it is referenced. These additional modifications are easily overlooked, so we still recommend avoiding the practice of multiple references as much as possible from the code specification perspective.</p> <p>In conclusion, Hotfix can meet the basic needs of hot updates, but it also has the following problems:</p> <ul> <li>If the data/function is explicitly referenced by other modules, additional references to these modules are required. Hotfix If there is a large amount of data/functions that need to be hotfixed, then the code of the hotfix will become very large, maintenance will become more difficult, and it will also be more prone to errors.</li> </ul>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"en/py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#reload","title":"Reload","text":"<p>You can obtain the source code for this section from here: python_reloader</p> <p>What we really want is automatic hot updates, without the need to write additional hotfixes. Just update the code files, execute a reload function, and the program will automatically replace the new functions and data. We call this automatic hot update feature \"Reload.\"</p> <p>Python 3.12 provides the <code>importlib.reload</code> function, which can reload modules, but it is a full reload and returns a new module object, so it doesn't automatically update references in other modules. This means that if other modules import the reloaded module, they will still access the old module object. This functionality isn't much better than our Hotfix, especially since it's a full reload of the module and we can't control which data should be retained. We want to implement our own Reload feature that meets these requirements:</p> <ul> <li>Automatically replace the function, while the reference to the old function remains valid and will execute the content of the new function</li> <li>Automatically replace data while controlling partial replacement</li> <li>Keep the reference to the old module, so that the new content can be accessed through the old module.</li> <li>Modules that need reloading are controllable</li> </ul> <p>To meet these requirements, we need to leverage the meta_path mechanism within Python. For detailed information, please refer to the official documentation the-meta-path\u3002</p> <p>In <code>sys.meta_path</code>, we can define our meta path finder objects, for example, we name the finder used for reloading as <code>reload_finder</code>. The <code>reload_finder</code> needs to implement a function <code>find_spec</code> and return the <code>spec</code> object. Once Python gets the <code>spec</code> object, it will sequentially execute <code>spec.loader.create_module</code> and <code>spec.loader.exec_module</code> to complete the module import.</p> <p>If we execute new module code during this process and copy the functions and required data from the new module into the old module, we can achieve the purpose of reloading.</p> <pre><code>class MetaFinder:\n    def __init__(self, reloader):\n        self._reloader = reloader\n\n    def find_spec(self, fullname, path, target=None):\n        # find source file\n        finder = importlib.machinery.PathFinder()\n        spec = finder.find_spec(fullname, path)\n        if not spec:\n            return\n\n        old_module = self._reloader.GetOldModule(fullname)\n        if old_module:\n            # run new code in old module dict\n            code = spec.loader.get_code(fullname)\n            exec(code, old_module.__dict__)\n            module = old_module\n        else:\n            # if old module not exists, just create a new one\n            module = import_util.module_from_spec(spec)\n            spec.loader.exec_module(module)\n\n        try:\n            self._reloader.ReloadModule(module)\n        except:\n            sys.excepthook(*sys.exc_info())\n\n        return import_util.spec_from_loader(fullname, MetaLoader(module))\n\n\nclass MetaLoader:\n    def __init__(self, module):\n        self._module = module\n\n    def create_module(self, spec):\n        return self._module\n\n    def exec_module(self, module):\n        # restore __spec__\n        module.__spec__ = module.__dict__.pop('__backup_spec__')\n        module.__loader__ = module.__dict__.pop('__backup_loader__')\n</code></pre> <p>As mentioned above, <code>find_spec</code> loads the latest module source code and executes the new module's code inside the <code>__dict__</code> of the old module. Afterwards, we call <code>ReloadModule</code> to handle the references and replacements of classes, functions, and data. The purpose of <code>MetaLoader</code> is to adapt to the meta_path mechanism and return the processed module objects to the Python virtual machine.</p> <p>After completing the loading process, let's take a look at the general implementation of <code>ReloadModule</code>.</p> <pre><code># ...\ndef ReloadModule(self, module):\n    old_module_info = self._old_module_infos.get(module.__name__)\n    if not old_module_info:\n        return\n\n    self.ReloadDict(module, old_module_info, module.__dict__)\n\ndef ReloadDict(self, module, old_dict, new_dict, _reload_all_data=False, _del_func=False):\n    dels = []\n\n    for attr_name, old_attr in old_dict.items():\n\n        if attr_name in self.IGNORE_ATTRS:\n            continue\n\n        if attr_name not in new_dict:\n            if _del_func and (inspect.isfunction(old_attr) or inspect.ismethod(old_attr)):\n                dels.append(attr_name)\n            continue\n\n        new_attr = new_dict[attr_name]\n\n        if inspect.isclass(old_attr):\n            new_dict[attr_name] = self.ReloadClass(module, old_attr, new_attr)\n\n        elif inspect.isfunction(old_attr):\n            new_dict[attr_name] = self.ReloadFunction(module, old_attr, new_attr)\n\n        elif inspect.ismethod(old_attr) or isinstance(old_attr, classmethod) or isinstance(old_attr, staticmethod):\n            self.ReloadFunction(module, old_attr.__func__, new_attr.__func__)\n            new_dict[attr_name] = old_attr\n\n        elif inspect.isbuiltin(old_attr) \\\n                or inspect.ismodule(old_attr) \\\n                or inspect.ismethoddescriptor(old_attr) \\\n                or isinstance(old_attr, property):\n            # keep new\n            pass\n\n        elif not _reload_all_data and not self.NeedUpdateData(module, new_dict, attr_name):\n            # keep old data\n            new_dict[attr_name] = old_attr\n\n    if dels:\n        for name in dels:\n            old_dict.pop(name)\n# ...\n</code></pre> <p>The <code>ReloadDict</code> inside will differentiate and handle different types of objects.</p> <p>If it's a class, calling <code>ReloadClass</code> will return the reference to the old module and update the class members. If it is a function/method, calling <code>ReloadFunction</code> will return a reference to the old module and update the internal function data. If it's data and needs to be preserved, it will roll back <code>new_dict[attr_name] = old_attr</code> - The rest should remain with the new citation. - Remove functions that do not exist in the new module</p> <p>The specific code for <code>ReloadClass</code> and <code>ReloadFunction</code> will not be further analyzed here. If you are interested, you can directly refer to the source code\u3002</p> <p>The entire process of Reload can be summarized as \"putting new wine in old bottles.\" In order to maintain the effectiveness of modules, module functions, module classes, and module data, we need to retain references to these original objects (shells) and then update their specific data internally. For example, for functions, we update <code>__code__</code>, <code>__dict__</code>, and other data. When the function is executed, it will then execute the new code.</p>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"en/py-Python%E6%9D%82%E8%B0%882-Python312-%E7%83%AD%E6%9B%B4%E6%96%B0/#summary","title":"Summary","text":"<p>This article provides a detailed introduction to two hot update methods of Python3, each with its corresponding use cases, hoping to be helpful to you. Feel free to reach out if you have any questions.</p> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev","game","python","reload","\u70ed\u66f4\u65b0"]},{"location":"en/py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/","title":"Compile Python 2.7.11 using Visual Studio 2015.","text":"","tags":["dev"]},{"location":"en/py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#reason","title":"Reason","text":"<p>The official version of Python 2.7 supports compiling with Visual Studio versions prior to 2010. Please refer to <code>PCbuild\\readme.txt</code> for more information.</p> <pre><code>1.  Install Microsoft Visual Studio 2008, any edition.\n2.  Install Microsoft Visual Studio 2010, any edition, or Windows SDK 7.1 and any version of Microsoft Visual Studio newer than 2010.\n</code></pre> <p>If you want to mess around with Python on Windows, like compiling a debug version or modifying the source code yourself, the simplest method is to install VS2010.</p> <p>However, personally, I would prefer to compile Python using VS2015 for the following reasons:</p> <ul> <li>VS2010 is a bit outdated and its functionality and user experience are much worse than VS2015. I have been using VS2015 all along, so I really don't want to install VS2010 again.</li> <li>Since you have been using VS2015, you will use it to write your own programs. If you want to embed Python into your programs, you need to use the same version of VS to compile your programs. If different versions of VS are used, various unforeseen issues may occur. Here is a more detailed explanation.</li> </ul> <p>So I started to work on Python version 2.7.11 using VS2015 (the latest version of Python 2.7).</p> <p>Note that Python 3.x now supports compilation with VS2015.</p>","tags":["dev"]},{"location":"en/py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#source-code-download","title":"Source Code Download","text":"<p>The version of Python is, of course, 2.7.11. Additionally, there are some third-party modules. You can run the <code>PCbuild\\get_externals.bat</code> script in the Python source code directory to obtain all the modules required for compilation. Please note that you need to install svn and add svn.exe to the system PATH.</p> <p>Downloading could be unstable, and the whole process may be terminated due to network problems. Therefore, it is recommended to directly download the \"externals\" directory from my GitHub: My Python Version</p>","tags":["dev"]},{"location":"en/py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#compilation-process","title":"Compilation Process","text":"","tags":["dev"]},{"location":"en/py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#third-party-modules","title":"Third-party modules","text":"<p>The first thing to address is the third-party modules, mainly tcl, tk, tcltk.</p> <p>Modify the file <code>externals/tcl-8.5.15.0/win/makefile.vc</code> and change line 434 to</p> <pre><code>- cdebug = -Zi -WX $(DEBUGFLAGS)\n+ cdebug = -Zi -WX- $(DEBUGFLAGS)\n</code></pre> <p>Regarding the option <code>WX</code>, you can refer to Microsoft's official documentation: /WX (Treat Linker Warnings as Errors)</p> <p>\u200b\u518d\u6765\u200b\u6539\u200b<code>PCbuild/tk.vcxproj</code>\uff0c\u200b\u7528\u200b\u6587\u672c\u7f16\u8f91\u200b\u5668\u200b\u6253\u5f00\u200b\uff0c\u200b\u4fee\u6539\u200b 63, 64 \u200b\u884c\u200b</p> <p>Go ahead and make changes to <code>PCbuild/tk.vcxproj</code>. Open it with a text editor and modify lines 63 and 64.</p> <pre><code>- &lt;TkOpts&gt;msvcrt&lt;/TkOpts&gt;\n- &lt;TkOpts Condition=\"$(Configuration) == 'Debug'\"&gt;symbols,msvcrt&lt;/TkOpts&gt;\n+ &lt;TkOpts&gt;msvcrt,noxp&lt;/TkOpts&gt;\n+ &lt;TkOpts Condition=\"$(Configuration) == 'Debug'\"&gt;symbols,msvcrt,noxp&lt;/TkOpts&gt;\n</code></pre> <p>Change <code>PCbuild/tcltk.props</code>, open it with a text editor, and modify line 41.</p> <pre><code>- &lt;BuildDirTop&gt;$(BuildDirTop)_VC9&lt;/BuildDirTop&gt;\n+ &lt;BuildDirTop&gt;$(BuildDirTop)_VC13&lt;/BuildDirTop&gt;\n</code></pre> <p>Due to the cancellation of the definition of <code>timezone</code> in VS2015, it has been changed to <code>_timezone</code>. Therefore, wherever <code>timezone</code> is used in the code, it needs to be changed to <code>_timezone</code>. For third-party modules, only the file <code>externals/tcl-8.5.15.0/win/tclWinTime.c</code> needs to be modified. Add the following at the beginning of the file:</p> <pre><code>#if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1900\n#define timezone _timezone\n#endif\n</code></pre>","tags":["dev"]},{"location":"en/py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#modify-python-source-code","title":"Modify Python Source Code","text":"<p>The issue with <code>timezone</code> also exists in the Python module <code>time</code>. Modify line 767.</p> <pre><code>- #ifdef __CYGWIN__\n+ #if defined(__CYGWIN__) || defined(_MSC_VER) &amp;&amp; _MSC_VER &gt;= 1900\n</code></pre> <p>In addition, due to a special method used by Python on Windows to check the validity of file handles, this method has been completely disabled in VS2015, which would result in compilation errors, so it needs to be changed first. Modify the file <code>Include/fileobject.h</code>, lines 73 and 80:</p> <pre><code>73 - #if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1400\n73 + #if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1400 &amp;&amp; _MSC_VER &lt; 1900\n\n80 - #elif defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1200\n80 + #elif defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1200 &amp;&amp; _MSC_VER &lt; 1400\n</code></pre> <p>File <code>Modules/posixmodule.c</code>, line 532:</p> <pre><code>- #if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1400\n+ #if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1400 &amp;&amp; _MSC_VER &lt; 1900\n</code></pre> <p>So far, Python can be compiled successfully. For more specific modifications, you can refer to the contents of my commit: modify to build by vs2015</p>","tags":["dev"]},{"location":"en/py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#invalid-handle-check","title":"Invalid Handle Check","text":"<p>Although the compilation passed, the consequence of forcefully ignoring invalid file handles is that once an invalid handle is accessed (such as closing the same file twice), Python will directly trigger an assertion failure and the program will crash. In this way, Python is simply unusable. Python utilizes a special method to prevent this situation, but unfortunately it cannot be used in VS2015. The explanation in the comments is as follows:</p> <pre><code>Microsoft CRT in VS2005 and higher will verify that a filehandle is valid and raise an assertion if it isn't.\n</code></pre> <p>Fortunately, there is already a solution, which I found in the Python issue tracker. You can find it here: issue23524, issue25759. This method is also used in Python 3.x.</p> <p>To be specific, it means disabling the assert crash mechanism in Windows when using file handles and replacing it with error code checking. So how do you disable the assert mechanism in Windows? The answer is to use your own error handling function to replace the default Windows handling function. The key code is:</p> <p>[to_be_replace[x]]</p> <p>Create a new file <code>PC/invalid_parameter_handler.c</code> to define our own error handling function that can temporarily ignore the occurred errors.</p> <pre><code>#ifdef _MSC_VER\n\n#include &lt;stdlib.h&gt;\n\n#if _MSC_VER &gt;= 1900\n/* pyconfig.h uses this function in the _Py_BEGIN_SUPPRESS_IPH/_Py_END_SUPPRESS_IPH\n * macros. It does not need to be defined when building using MSVC\n * earlier than 14.0 (_MSC_VER == 1900).\n */\n\nstatic void __cdecl _silent_invalid_parameter_handler(\n    wchar_t const* expression,\n    wchar_t const* function,\n    wchar_t const* file,\n    unsigned int line,\n    uintptr_t pReserved) \n{}\n\n_invalid_parameter_handler _Py_silent_invalid_parameter_handler = _silent_invalid_parameter_handler;\n\n#endif\n\n#endif\n</code></pre> <p>Define two macros to facilitate the replacement of error handling functions. Note that the replacement is temporary, and the system's default functions need to be restored afterwards.</p> <pre><code>#if defined _MSC_VER &amp;&amp; _MSC_VER &gt;= 1900\n\nextern _invalid_parameter_handler _Py_silent_invalid_parameter_handler;\n#define _Py_BEGIN_SUPPRESS_IPH { _invalid_parameter_handler _Py_old_handler = \\\n    _set_thread_local_invalid_parameter_handler(_Py_silent_invalid_parameter_handler);\n#define _Py_END_SUPPRESS_IPH _set_thread_local_invalid_parameter_handler(_Py_old_handler); }\n\n#else\n\n#define _Py_BEGIN_SUPPRESS_IPH\n#define _Py_END_SUPPRESS_IPH\n\n#endif /* _MSC_VER &gt;= 1900 */\n</code></pre> <p>Afterwards, in the places where Windows file handle errors may be triggered, add the macro <code>_Py_BEGIN_SUPPRESS_IPH</code> before and <code>_Py_END_SUPPRESS_IPH</code> after, and then check the error code. There are quite a few places that need to be modified, refer to someone else's commit for modification: Here</p>","tags":["dev"]},{"location":"en/py-%E4%BD%BF%E7%94%A8VisualStudio2015%E7%BC%96%E8%AF%91Python2.7.11/#end","title":"End","text":"<p>By now, Python 2.7.11 can be compiled and run normally in VS2015. However, Python official does not recommend this configuration.</p> <pre><code>***WARNING***\nBuilding Python 2.7 for Windows using any toolchain that doesn't link\nagainst MSVCRT90.dll is *unsupported* as the resulting python.exe will\nnot be able to use precompiled extension modules that do link against\nMSVCRT90.dll.\n</code></pre> <p>So it's best to pay attention when using it.</p> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/","title":"Compile UE4 and UE5 using FASTBuild.","text":"<p>This method has been tested and supports UE4.27 - UE5.3. Other versions have not been tested, but you can give it a try.</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#preface","title":"Preface","text":"<p>FASTBuild is a free and open-source distributed compilation tool. The compilation process of UE itself is quite time-consuming, but by using FASTBuild, it is possible to significantly reduce the time required.</p> <p>Starting from UE 4.x, it is able to support FASTBuild. The official source code comes with a modified version of FASTBuild tool, based on version 0.99 of FASTBuild. Its location is <code>Engine\\Extras\\ThirdPartyNotUE\\FASTBuild</code>. UE5.3 also uses this version. However, this is a relatively old version. As of the creation time of this article, the latest official version of FASTBuild is 1.11, which provides more new features and bug fixes. This article focuses on how to use version 1.11 to support both UE4 and UE5 simultaneously.</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#easy-configuration","title":"Easy Configuration","text":"<p>To achieve the goal, we need to make some modifications to FASTBuild 1.11 and the UE source code. Here, in fact, I have already made all the modifications, so we can directly use the version I have modified.</p> <p>Download the executable files FBuild.exe, FBuildCoordinator.exe, and FBuildWorker.exe from the latest version that I submitted. In order to better illustrate, the machine that uses FBuild.exe for programming will be referred to as <code>local machine</code>, while the remote machines that provide CPU participation for editing will be referred to as <code>remote machines</code>.</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#local-configuration","title":"Local Configuration","text":"<p>Add the directory where FBuild.exe is located to the system environment variable <code>Path</code>, to ensure that FBuild.exe can be executed directly in the <code>cmd</code> command prompt.</p> <p>Configure Cache Shared Directory (If Cache generation is not needed, this configuration can be skipped): Set an empty directory as a shared path and ensure that the remote machine has access to it.</p> <p>Open the source code project of your local UE4/UE5. Modify the compilation configuration file Engine\\Saved\\UnrealBuildTool\\BuildConfiguration.xml as follows:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;\n&lt;Configuration xmlns=\"https://www.unrealengine.com/BuildConfiguration\"&gt;\n    &lt;BuildConfiguration&gt;\n        &lt;bAllowFASTBuild&gt;true&lt;/bAllowFASTBuild&gt;\n    &lt;/BuildConfiguration&gt;\n    &lt;FASTBuild&gt;\n        &lt;bEnableDistribution&gt;true&lt;/bEnableDistribution&gt;\n        &lt;bEnableCaching&gt;true&lt;/bEnableCaching&gt;\n        &lt;FBuildCachePath&gt;\\\\127.0.0.1\\Cache\\&lt;/FBuildCachePath&gt;\n        &lt;FBuildCoordinator&gt;127.0.0.1&lt;/FBuildCoordinator&gt;\n    &lt;/FASTBuild&gt;\n&lt;/Configuration&gt;\n</code></pre> <p>Run the downloaded FBuildCoordinator.exe on this machine.</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#remote-machine-configuration","title":"Remote Machine Configuration","text":"<p>With the same configuration as Cache, only the IP needs to be set to the local IP, assuming it is 192.168.1.100.   - FASTBUILD_CACHE_PATH: \\192.168.1.100\\Cache   - FASTBUILD_CACHE_MODE: rw</p> <p>[Same configuration Coordinator IP]   - FASTBUILD_COORDINATOR: 192.168.1.100</p> <p>After configuring, it should look like the following image.</p> <p></p> <p>Run FBuildWorker.exe on the remote machine. If the configuration is successful, logs will be printed on the FBuildCoordinator.exe of the local machine (here, 192.168.1.101 is the IP address of the remote machine):</p> <pre><code>FBuildCoordinator - v1.11-UE\n[2023-12-01-20:06:38] Listening on port 31392\n[2023-12-01-20:06:38] current [0] workers: []\n[2023-12-01-20:06:42] New worker available: 192.168.1.101\n[2023-12-01-20:06:42] current [1] workers: [192.168.1.101]\n</code></pre>","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#test-ue-compilation","title":"Test UE Compilation","text":"<p>Open the UE source code project sln with VisualStudio, select a C++ project, and click Rebuild. If the configuration is correct, you will see logs similar to the following:</p> <pre><code>11&gt;FBuild Command Line Arguments: '-monitor -summary -dist -cache -ide -j12 -clean -config \"E:\\UE\\ue5.3_git\\Engine\\Intermediate\\Build\\fbuild.bff\" -nostoponerror\n11&gt;FBuild Executable: 'd:\\libs\\FASTBuild\\bin\\FBuild.exe\n11&gt;FBuild Coordinator: '127.0.0.1\n11&gt;FBuild BrokeragePath: '\\\\127.0.0.1\\Brokerage\\\n11&gt;FBuild CachePath: '\\\\127.0.0.1\\Cache\\\n11&gt;BFF file 'E:\\UE\\ue5.3_git\\Engine\\Intermediate\\Build\\fbuild.bff' has changed (reparsing will occur).\n11&gt;Using Coordinator: 192.168.88.187\n11&gt;Requesting worker list from Corrdinator\n11&gt;Get Worker List from Coordinator.\n11&gt;2 workers in payload: [192.168.1.101]\n11&gt;Worker list received: 1 workers\n11&gt;Distributed Compilation : 1 Workers in pool '127.0.0.1'\n</code></pre> <p>FASTBuild can find the IP address of the remote machine and start sending the compilation tasks to it. On the FBuildWorker of the remote machine, you can also see that there are currently compilation tasks being executed.</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#advanced-configuration","title":"Advanced Configuration","text":"","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#support-for-older-versions-of-ue","title":"Support for older versions of UE","text":"<p>If you find that your UE doesn't have the FASTBuild tool (Engine\\Extras\\ThirdPartyNotUE\\FASTBuild), and there is no FASTBuild.cs file in the UnrealBuildTool project, it's highly likely that your UE version does not support FASTBuild yet.</p> <p>So you need to refer to the source code of UE4.27 and create a similar FASTBuild.cs file, and make the necessary modifications to other related code. No further details will be provided here.</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#compile-your-own-fastbuild","title":"Compile your own FASTBuild","text":"<p>If you are also interested in FASTBuild itself, or want to make some modifications, you can try using FASTBuild to compile FASTBuild.</p> <ul> <li>Download my latest source code and unzip it.</li> <li>Modify External\\SDK\\VisualStudio\\VS2019.bff, change .VS2019_BasePath and .VS2019_Version to the corresponding values on your machine. You can find the Version in the .VS2019_BasePath\\Tools\\MSVC directory, for example...     <pre><code>.VS2019_BasePath        = 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\VC'    // &lt;-- Set path here\n.VS2019_Version         = '14.29.30133' // &lt;-- Set version here\n.VS2019_MSC_VER         = '1929' // &lt;-- Set MSC_VER here\n</code></pre></li> </ul> <ul> <li>Modify the .Windows10_SDKBasePath and .Windows10_SDKVersion in External\\SDK\\Windows\\Windows10SDK.bff file. The version can be found inside .Windows10_SDKBasePath/bin folder.     <pre><code>.Windows10_SDKBasePath        = 'C:\\Program Files (x86)\\Windows Kits/10'    // &lt;-- Set path here\n.Windows10_SDKVersion         = '10.0.19041.0' // &lt;-- Set version here\n</code></pre></li> </ul> <ul> <li>Update the <code>.Clang11_BasePath</code> and <code>.Clang11_Version</code> in <code>External\\SDK\\Clang\\Windows\\Clang11.bff</code>, the path is located in <code>.VS2019_BasePath\\Tools\\Tools/LLVM/x64</code>.     <pre><code>.Clang11_BasePath = 'C:/Program Files (x86)/Microsoft Visual Studio/2019/Professional/VC/Tools/LLVM/x64'    // &lt;-- Set path here\n.Clang11_Version  = '12.x.x'\n</code></pre></li> </ul> <ul> <li>Go to the Code directory and execute <code>FBuild.exe All-x64-Release</code> in the cmd. If the configuration is correct, you should see a successful compilation. You can find the FBuild.exe in tmp\\x64-Release\\Tools\\FBuild\\FBuild.</li> </ul> <p>The command <code>FBuild.exe All-x64-Release -dist -coordinator=127.0.0.1</code> enables distributed compilation.</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#fbuild-more-options","title":"FBuild More Options","text":"<p>The FBuild I provide itself supports the following commonly used options:</p> <ul> <li>coordinator: Specify the Coordinator IP address (can override the value of system environment variables)</li> <li>brokerage: Specify the Brokerage address (can override the value of system environment variables)</li> <li>nocache: Force to not use cache</li> <li>dist: Enable distributed compilation</li> <li>forceremote: Force to compile on a remote machine</li> <li>summary: Output a statistical report after editing is finished</li> </ul> <p>Wait, you can run <code>FBuild.exe -help</code> to see more options.</p> <p>The commonly used options for FBuildWorker are:</p> <ul> <li>coordinator: Specify the Coordinator IP address (can override the value of the system environment variable).</li> <li>brokerage: Specify the Brokerage address (can override the value of the system environment variable).</li> <li>nocache: Forcefully disable the use of cache.</li> <li>cpus: Specify the number of cores to allocate for compilation.</li> </ul> <p>To see more options, you can run <code>FBuildWorder.exe -help</code>.</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#modify-the-built-in-fastbuildcs-in-ue","title":"Modify the built-in FASTBuild.cs in UE","text":"<p>The built-in FASTBuild.cs provided by UE does not handle system environment variables well in relation to the parameters specified in BuildConfiguration.xml. Many parameters prioritize reading system environment variables, which clearly contradicts the logic of using BuildConfiguration.xml.</p> <p>To do this, you can modify the relevant code like this, taking UE5.3 as an example here:</p> <pre><code>private bool ExecuteBffFile(string BffFilePath, ILogger Logger)\n{\n    string CacheArgument = \"\";\n\n    if (bEnableCaching)\n    {\n        switch (CacheMode)\n        {\n            case FASTBuildCacheMode.ReadOnly:\n                CacheArgument = \"-cacheread\";\n                break;\n            case FASTBuildCacheMode.WriteOnly:\n                CacheArgument = \"-cachewrite\";\n                break;\n            case FASTBuildCacheMode.ReadWrite:\n                CacheArgument = \"-cache\";\n                break;\n        }\n    }\n    else\n    {\n        CacheArgument = \"-nocache\";\n    }\n\n    string DistArgument = bEnableDistribution ? \"-dist\" : \"\";\n    string ForceRemoteArgument = bForceRemote ? \"-forceremote\" : \"\";\n    string NoStopOnErrorArgument = bStopOnError ? \"\" : \"-nostoponerror\";\n    string IDEArgument = IsApple() ? \"\" : \"-ide\";\n    string MaxProcesses = \"-j\" + ((ParallelExecutor)LocalExecutor).NumParallelProcesses;\n\n    // Interesting flags for FASTBuild:\n    // -nostoponerror, -verbose, -monitor (if FASTBuild Monitor Visual Studio Extension is installed!)\n    // Yassine: The -clean is to bypass the FASTBuild internal\n    // dependencies checks (cached in the fdb) as it could create some conflicts with UBT.\n    // Basically we want FB to stupidly compile what UBT tells it to.\n    string FBCommandLine = $\"-monitor -summary {DistArgument} {CacheArgument} {IDEArgument} {MaxProcesses} -clean -config \\\"{BffFilePath}\\\" {NoStopOnErrorArgument} {ForceRemoteArgument}\";\n\n    Logger.LogInformation(\"FBuild Command Line Arguments: '{FBCommandLine}\", FBCommandLine);\n\n    string FBExecutable = GetExecutablePath()!;\n    Logger.LogInformation(\"FBuild Executable: '{FBExecutable}\", FBExecutable);\n\n    string WorkingDirectory = Path.GetFullPath(Path.Combine(Unreal.EngineDirectory.MakeRelativeTo(DirectoryReference.GetCurrentDirectory()), \"Source\"));\n\n    ProcessStartInfo FBStartInfo = new ProcessStartInfo(FBExecutable, FBCommandLine);\n    FBStartInfo.UseShellExecute = false;\n    FBStartInfo.WorkingDirectory = WorkingDirectory;\n    FBStartInfo.RedirectStandardError = true;\n    FBStartInfo.RedirectStandardOutput = true;\n\n    string? Coordinator = GetCoordinator();\n    if (!String.IsNullOrEmpty(Coordinator))\n    {\n        Logger.LogInformation(\"FBuild Coordinator: '{Coordinator}\", Coordinator);\n        FBStartInfo.EnvironmentVariables[\"FASTBUILD_COORDINATOR\"] = Coordinator;\n    }\n\n    string? BrokeragePath = GetBrokeragePath();\n    if (!String.IsNullOrEmpty(BrokeragePath))\n    {\n        Logger.LogInformation(\"FBuild BrokeragePath: '{BrokeragePath}\", BrokeragePath);\n        FBStartInfo.EnvironmentVariables[\"FASTBUILD_BROKERAGE_PATH\"] = BrokeragePath;\n    }\n\n    string? CachePath = GetCachePath();\n    if (!String.IsNullOrEmpty(CachePath))\n    {\n        Logger.LogInformation(\"FBuild CachePath: '{CachePath}\", CachePath);\n        FBStartInfo.EnvironmentVariables[\"FASTBUILD_CACHE_PATH\"] = CachePath;\n    }\n...\n</code></pre>","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8FASTBuild%E7%BC%96%E8%AF%91UE4%E5%92%8CUE5/#advanced-configuration-of-buildconfigurationxml","title":"Advanced Configuration of BuildConfiguration.xml","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;\n&lt;Configuration xmlns=\"https://www.unrealengine.com/BuildConfiguration\"&gt;\n    &lt;ProjectFileGenerator&gt;\n&lt;!-- Specify VS version --&gt;\n        &lt;Format&gt;VisualStudio2022&lt;/Format&gt;   \n    &lt;/ProjectFileGenerator&gt;\n    &lt;BuildConfiguration&gt;\n&lt;!-- Enable FASTBuild --&gt;\n        &lt;bAllowFASTBuild&gt;true&lt;/bAllowFASTBuild&gt;\n&lt;!-- Specify the number of CPU cores that will participate in the compilation on the local machine --&gt;\n        &lt;MaxParallelActions&gt;12&lt;/MaxParallelActions&gt;\n&lt;!-- Disable Incredibuild --&gt;\n        &lt;bAllowXGE&gt;false&lt;/bAllowXGE&gt;\n    &lt;/BuildConfiguration&gt;\n    &lt;FASTBuild&gt;\n&lt;!-- Specify the FBuild path --&gt;\n        &lt;FBuildExecutablePath&gt;d:\\libs\\FASTBuild\\bin\\FBuild.exe&lt;/FBuildExecutablePath&gt;\n&lt;!-- Enable distributed compilation --&gt;\n        &lt;bEnableDistribution&gt;true&lt;/bEnableDistribution&gt;\n&lt;!-- Specify the brokerage path --&gt;\n        &lt;FBuildBrokeragePath&gt;\\\\127.0.0.1\\Brokerage\\&lt;/FBuildBrokeragePath&gt;\n&lt;!-- Specify cache path --&gt;\n        &lt;FBuildCachePath&gt;\\\\127.0.0.1\\Cache\\&lt;/FBuildCachePath&gt;\n&lt;!-- Enable cache --&gt;\n        &lt;bEnableCaching&gt;true&lt;/bEnableCaching&gt;\n&lt;!-- cache read/write permissions Read/Write/ReadWrite --&gt;\n        &lt;CacheMode&gt;ReadWrite&lt;/CacheMode&gt;\n&lt;!-- Specify coordinator ip --&gt;\n        &lt;FBuildCoordinator&gt;192.168.88.187&lt;/FBuildCoordinator&gt;\n&lt;!-- Force remote compilation --&gt;\n        &lt;!-- &lt;bForceRemote&gt;true&lt;/bForceRemote&gt; --&gt;\n    &lt;/FASTBuild&gt;\n&lt;/Configuration&gt;\n</code></pre> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev","game","ue","UnreanEngine"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BD%A2%E5%BC%8F%E6%89%A9%E5%B1%95%E8%8F%9C%E5%8D%95/","title":"UE uses path-based expanding menu.","text":"<p>Record how to implement path-based extension menus in UE</p> <p>If you are not familiar with the UE extension menu, it is recommended to take a quick look at: UE Extension Editor Menu</p> <p>This text is based on the plugin: UE.EditorPlus</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BD%A2%E5%BC%8F%E6%89%A9%E5%B1%95%E8%8F%9C%E5%8D%95/#node-management","title":"Node Management","text":"<p>Manage the menu according to the structure of a tree, where parent nodes can include children:</p> <pre><code>class EDITORPLUS_API FEditorPlusMenuBase: public TSharedFromThis&lt;FEditorPlusMenuBase&gt;\n{\nprotected:\n    // sub menus\n    TArray&lt;TSharedRef&lt;FEditorPlusMenuBase&gt;&gt; Children;\n}\n</code></pre> <p>Create child nodes while creating the parent node:</p> <pre><code>void FEditorPlusMenuBase::Register(FMenuBuilder&amp; MenuBuilder)\n{\n    for (const auto Menu: Children)\n    {\n        Menu-&gt;Register(MenuBuilder);\n    }\n}\n</code></pre> <p>Of course, the specific creation behavior of each node may be a little different, override the virtual function to achieve it:</p> <pre><code>// Menubar\nvoid FEditorPlusMenuBar::Register(FMenuBarBuilder&amp; MenuBarBuilder)\n{\n    MenuBarBuilder.AddPullDownMenu(\n        GetFriendlyName(),\n        GetFriendlyTips(),\n        // Delegate to call Register\n        FEditorPlusMenuManager::GetDelegate&lt;FNewMenuDelegate&gt;(GetUniqueId()),       \n        Hook);\n}\n\n// Section\nvoid FEditorPlusSection::Register(FMenuBuilder&amp; MenuBuilder)\n{\n    MenuBuilder.BeginSection(Hook, GetFriendlyName());\n    FEditorPlusMenuBase::Register(MenuBuilder);\n    MenuBuilder.EndSection();\n}\n\n// Separator\nvoid FEditorPlusSeparator::Register(FMenuBuilder&amp; MenuBuilder)\n{\n    MenuBuilder.AddMenuSeparator(Hook);\n    FEditorPlusMenuBase::Register(MenuBuilder);\n}\n\n// SubMenu\nvoid FEditorPlusSubMenu::Register(FMenuBuilder&amp; MenuBuilder)\n{\n    MenuBuilder.AddSubMenu(\n        GetFriendlyName(),\n        GetFriendlyTips(),\n        FNewMenuDelegate::CreateSP(this, &amp;FEditorPlusSubMenu::MakeSubMenu),\n        false,\n        FSlateIcon(),\n        true,\n        Hook\n    );\n}\n\n// Command\nvoid FEditorPlusCommand::Register(FMenuBuilder&amp; MenuBuilder)\n{\n    MenuBuilder.AddMenuEntry(\n        CommandInfo-&gt;Label, CommandInfo-&gt;Tips, CommandInfo-&gt;Icon,\n        CommandInfo-&gt;ExecuteAction, CommandInfo-&gt;Hook, CommandInfo-&gt;Type);\n}\n\n// ......\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BD%A2%E5%BC%8F%E6%89%A9%E5%B1%95%E8%8F%9C%E5%8D%95/#generate-nodes-through-the-path","title":"Generate nodes through the path","text":"<p>Organize the menu in a tree structure, and the path format can define the tree structure of a menu:</p> <pre><code>\"/&lt;Hook&gt;Help/&lt;MenuBar&gt;BarTest/&lt;SubMenu&gt;SubTest/&lt;Command&gt;Action\"\n</code></pre> <p>The above path can be used to define a series of menu creations:</p> <ul> <li><code>&lt;Hook&gt;Help</code>: Located after the menu named Help in the Hook.</li> <li><code>&lt;MenuBar&gt;BarTest</code>: Create a menu of type MenuBar with the name BarTest</li> <li><code>&lt;SubMenu&gt;SubTest</code>: create a sub-item of type SubMenu, named SubTest</li> <li><code>&lt;Command&gt;Action</code>: Finally, create a command</li> </ul> <p>The interface call format can be very concise:</p> <pre><code>const FString Path = \"/&lt;Hook&gt;Help/&lt;MenuBar&gt;BarTest/&lt;SubMenu&gt;SubTest/&lt;Command&gt;Action\";\nFEditorPlusPath::RegisterPathAction(\n    Path, \n    FExecuteAction::CreateLambda([]\n    {\n        // do action\n    })\n);\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BD%A2%E5%BC%8F%E6%89%A9%E5%B1%95%E8%8F%9C%E5%8D%95/#generate-nodes-from-custom-forms","title":"Generate nodes from custom forms","text":"<p>We still retain the cumbersome way of creating menus, which allows for more detailed settings. The organization of the code is somewhat similar to the UE SlateUI style.</p> <pre><code>EP_NEW_MENU(FEditorPlusMenuBar)(\"BarTest\")\n-&gt;RegisterPath()\n-&gt;Content({\n    EP_NEW_MENU(FEditorPlusSubMenu)(\"SubTest\")\n    -&gt;Content({\n        EP_NEW_MENU(FEditorPlusCommand)(\"Action\")\n        -&gt;BindAction(FExecuteAction::CreateLambda([]\n            {\n                // do action\n            })),\n    })\n});\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E4%BD%BF%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BD%A2%E5%BC%8F%E6%89%A9%E5%B1%95%E8%8F%9C%E5%8D%95/#mixed-form","title":"Mixed Form","text":"<p>Of course, the path format itself and the custom-generated menu are the same, and they can be used interchangeably, providing great flexibility.</p> <pre><code>FEditorPlusPath::RegisterPath(\n    \"/&lt;MenuBar&gt;BarTest/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action1\", \n    EP_NEW_MENU(FEditorPlusCommand)(\"Action1\")\n    -&gt;BindAction(FExecuteAction::CreateLambda([]\n        {\n            // do action\n        })),\n);\n\nFEditorPlusPath::RegisterPath(\n    \"/&lt;MenuBar&gt;BarTest/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action2\", \n    EP_NEW_MENU(FEditorPlusCommand)(\"Action2\")\n    -&gt;BindAction(FExecuteAction::CreateLambda([]\n        {\n            // do action\n        })),\n);\n</code></pre> <p>Multiple menus defined in different places will be merged into the same tree structure, and nodes with the same name will be considered the same node. In other words, the path is unique, and the same path can uniquely determine a menu node. So we can also identify the nodes and make some adjustments and modifications.</p> <pre><code>// set Name and Tips\nFEditorPlusPath::GetNodeByPath(\"/&lt;MenuBar&gt;BarTest\")-&gt;SetFriendlyName(LOCTEXT(\"MenuTest\", \"MenuTest\"))-&gt;SetFriendlyTips(LOCTEXT(\"MenuTestTips\", \"MenuTestTips\"));\n</code></pre> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/","title":"UE expands editor menu","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#ue-editor-menu-extension","title":"UE Editor Menu Extension","text":"<p>Record how to extend the editor menu in UE</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#hook","title":"Hook","text":"<p>Hook can be understood as an anchor point for extending menus. We can set the newly added menu commands to appear before or after the Hook. The built-in editor menu commands in UE generally come with a Hook. In UE5, open <code>Edit - Editor Preferences - General - Others - Show UI extension points</code> to display all menu Hooks.</p> <p></p> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#module-dependency","title":"Module dependency","text":"<p>You need to add the required modules LevelEditor, Slate, SlateCore, EditorStyle, EditorWidgets, UnrealEd, ToolMenus to the .Build.cs file of the project.</p> <pre><code>PrivateDependencyModuleNames.AddRange(\n    new string[]\n    {\n        \"Core\",\n        \"Engine\",\n        \"CoreUObject\",\n        \"LevelEditor\",\n        \"Slate\",\n        \"SlateCore\",\n        \"EditorStyle\",\n        \"EditorWidgets\",\n        \"UnrealEd\",\n        \"ToolMenus\",\n    }\n    );\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#add-menu-bar","title":"Add menu bar","text":"<p>Directly enter the code</p> <pre><code>auto MenuExtender = MakeShared&lt;FExtender&gt;();\n\nMenuExtender-&gt;AddMenuBarExtension(\n    \"Help\", EExtensionHook::After,      // Create After Help\n    nullptr,\n    FMenuBarExtensionDelegate::CreateLambda([](FMenuBarBuilder&amp; MenuBarBuilder)\n    {\n        MenuBarBuilder.AddPullDownMenu(\n            TEXT(\"MenuTest\"),       // Name\n            TEXT(\"MenuTest\"),       // Tips\n            FNewMenuDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n            {\n                // create sub menus\n            }),\n            TEXT(\"MenuText\"));      // New Hook\n    })\n);\nFModuleManager::LoadModuleChecked&lt;FLevelEditorModule&gt;(\"LevelEditor\").GetMenuExtensibilityManager()-&gt;AddExtender(MenuExtender);\n</code></pre> <p>Executing the above code, you can see that a menu bar MenuTest has been added after the Help.</p> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#add-command","title":"Add Command","text":"<p>Using the <code>MenuBuilder.AddMenuEntry</code> interface:</p> <pre><code>// Inside MenuTest Lambda\nMenuBuilder.AddMenuEntry(\n    FText::FromName(\"MenuTestAction\"), FText::FromName(\"MenuTestAction\"),\n    FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n    {\n        // do action\n    })));\n</code></pre> <p>Put the above code into CreateLambda to generate menu commands:</p> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#menu-section","title":"Menu Section","text":"<p>Use <code>MenuBuilder.BeginSection</code> and <code>MenuBuilder.EndSection</code>:</p> <pre><code>MenuBuilder.BeginSection(NAME_None, FText::FromName(\"MenuTestSection\"));\n// code to create action\nMenuBuilder.EndSection();\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#separator","title":"Separator","text":"<pre><code>MenuBuilder.AddMenuSeparator();\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#submenu","title":"Submenu","text":"<p>Submenus are similar to menus and need to be defined inside Lambda:</p> <pre><code>MenuBuilder.AddSubMenu(\n    FText::FromName(\"MenuTestSub\"), \n    FText::FromName(\"MenuTestSub\"), \n    FNewMenuDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n    {\n        MenuBuilder.AddMenuEntry(\n            FText::FromName(\"MenuTestSubAction\"), FText::FromName(\"MenuTestSubAction\"),\n            FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n            {\n                // do action\n            })));\n    }));\n</code></pre> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#slateui-control","title":"SlateUI Control","text":"<p>You can also add UI controls:</p> <pre><code>MenuBuilder.AddWidget(\n    SNew(SHorizontalBox)\n        + SHorizontalBox::Slot()\n        .AutoWidth()\n        [\n            SNew(SEditableTextBox)\n            .MinDesiredWidth(50)\n            .Text(FText::FromName(\"MenuTestWidget\"))\n        ]\n\n        + SHorizontalBox::Slot()\n        .AutoWidth()\n        .Padding(5, 0, 0, 0)\n        [\n        SNew(SButton)\n        .Text(FText::FromName(\"ExtendWidget\"))\n        .OnClicked(FOnClicked::CreateLambda([]()\n        {\n            // do action\n            return FReply::Handled();\n        }))\n        ],\n    FText::GetEmpty()\n);\n</code></pre> <p></p> <p>The content related to Slate UI is not elaborated here. If you are interested, you can look for another article to read.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#hook-add-menu","title":"Hook Add Menu","text":"<p>For example, add a command in <code>Tools - Programming</code>:</p> <pre><code>MenuExtender-&gt;AddMenuExtension(\n    \"Programming\", EExtensionHook::After,\n    nullptr,\n    FMenuExtensionDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n    {\n        MenuBuilder.AddMenuEntry(\n        FText::FromName(\"MenuTestAction\"), FText::FromName(\"MenuTestAction\"),\n        FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n        {\n            // do action\n        })));\n    })\n);\n</code></pre> <p></p> <p>Similarly, you can add other types of menus.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E6%89%A9%E5%B1%95%E7%BC%96%E8%BE%91%E5%99%A8%E8%8F%9C%E5%8D%95/#complete-code","title":"Complete Code","text":"<pre><code>void BuildTestMenu()\n{\n    auto MenuExtender = MakeShared&lt;FExtender&gt;();\n\n    MenuExtender-&gt;AddMenuBarExtension(\n        \"Help\", EExtensionHook::After,\n        nullptr,\n        FMenuBarExtensionDelegate::CreateLambda([](FMenuBarBuilder&amp; MenuBarBuilder)\n        {\n            MenuBarBuilder.AddPullDownMenu(\n                FText::FromName(\"MenuTest\"),\n                FText::FromName(\"MenuTest\"),\n                FNewMenuDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n                {\n                    MenuBuilder.BeginSection(NAME_None, FText::FromName(\"MenuTestSection\"));\n                    MenuBuilder.AddMenuSeparator();\n                    MenuBuilder.AddMenuEntry(\n                        FText::FromName(\"MenuTestAction\"), FText::FromName(\"MenuTestAction\"),\n                        FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n                        {\n                            // do action\n                        })));\n\n                    MenuBuilder.AddSubMenu(\n                        FText::FromName(\"MenuTestSubb\"),\n                        FText::FromName(\"MenuTestSubb\"),\n                        FNewMenuDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n                        {\n                            MenuBuilder.AddMenuEntry(\n                                FText::FromName(\"MenuTestSubAction\"), FText::FromName(\"MenuTestSubAction\"),\n                                FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n                                {\n                                    // do action\n                                })));\n                        }));\n                    MenuBuilder.EndSection();\n\n                    MenuBuilder.AddWidget(\n                    SNew(SHorizontalBox)\n                         + SHorizontalBox::Slot()\n                         .AutoWidth()\n                         [\n                             SNew(SEditableTextBox)\n                             .MinDesiredWidth(50)\n                             .Text(FText::FromName(\"MenuTestWidget\"))\n                         ]\n                         + SHorizontalBox::Slot()\n                         .AutoWidth()\n                         .Padding(5, 0, 0, 0)\n                         [\n                            SNew(SButton)\n                            .Text(FText::FromName(\"ExtendWidget\"))\n                            .OnClicked(FOnClicked::CreateLambda([]()\n                            {\n                                // do action\n                                return FReply::Handled();\n                            }))\n                         ],\n                     FText::GetEmpty()\n                    );\n                }),\n                \"MenuTest\");\n        })\n    );\n\n    MenuExtender-&gt;AddMenuExtension(\n        \"Programming\", EExtensionHook::After,\n        nullptr,\n        FMenuExtensionDelegate::CreateLambda([](FMenuBuilder&amp; MenuBuilder)\n        {\n            MenuBuilder.AddMenuEntry(\n            FText::FromName(\"MenuTestAction\"), FText::FromName(\"MenuTestAction\"),\n            FSlateIcon(), FUIAction(FExecuteAction::CreateLambda([]()\n            {\n                // do action\n            })));\n        })\n    );\n\n    FModuleManager::LoadModuleChecked&lt;FLevelEditorModule&gt;(\"LevelEditor\").GetMenuExtensibilityManager()-&gt;AddExtender(MenuExtender);\n}\n</code></pre> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/","title":"UE Editor Plugin EditorPlus Documentation","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#ue-editor-plugin-editorplus-documentation","title":"UE Editor Plugin EditorPlus Documentation","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#plugin-source-code","title":"Plugin Source Code","text":"<p>UE.EditorPlus</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#add-the-source-code-plugin-editorplus-to-the-project","title":"Add the source code plugin EditorPlus to the project.","text":"<p>Reference documents:</p> <ul> <li>Chinese: UE Adding Plugins through Plugin Source Code</li> <li>English: UE adds plugins through the plugin source code</li> </ul>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#plugin-description","title":"Plugin Description","text":"<p>EditorPlus is a UE editor plugin that provides a convenient way to extend the editor menu and supports advanced methods of extension, while also including some useful editor tools. This plugin supports UE5.2+.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#expand-editor-menu","title":"Expand editor menu","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#explanation","title":"Explanation","text":"<p>Supports multiple ways to expand the editor menu:</p> <ul> <li>Path method: <code>RegisterPathAction(\"/&lt;MenuBar&gt;Bar/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action\")</code> Instantiation method: <code>EP_NEW_MENU(FEditorPlusMenuBar)(\"Bar\")</code></li> <li>Mixed mode: <code>RegisterPath(\"/&lt;MenuBar&gt;Bar/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action\",EP_NEW_MENU(FEditorPlusCommand)(\"Action\")</code></li> </ul>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#path-mode","title":"Path mode","text":"<p>You can register an editor menu command in this way:</p> <pre><code>FEditorPlusPath::RegisterPathAction(\n    \"/&lt;MenuBar&gt;Bar/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action\",\n    FExecuteAction::CreateLambda([]\n        {\n            // do action\n        })\n);\n</code></pre> <p>This way you can add a menu bar Bar behind the Help menu in the editor, and within Bar, add a submenu SubMenu, and within SubMenu, add a command Action.</p> <p>The complete path format would be like this: <code>/&lt;Hook&gt;HookName/&lt;Type1&gt;Name1/&lt;Type2&gt;Name2</code>, the first path must be <code>&lt;Hook&gt;</code>, currently supported types and restrictions:</p> <ul> <li><code>&lt;Hook&gt;</code>: Subsequent paths cannot contain <code>&lt;Hook&gt;</code></li> <li><code>&lt;MenuBar&gt;</code>: The path behind cannot contain <code>&lt;Hook&gt;, &lt;MenuBar&gt;</code></li> <li><code>&lt;Section&gt;</code>: The following path cannot contain <code>&lt;Hook&gt;, &lt;MenuBar&gt;, &lt;Section&gt;</code></li> <li><code>&lt;Separator&gt;</code>: The path after it cannot contain <code>&lt;Hook&gt;, &lt;MenuBar&gt;</code></li> <li><code>&lt;SubMenu&gt;</code>: The following path cannot contain <code>&lt;Hook&gt;</code>, <code>&lt;MenuBar&gt;</code></li> <li><code>&lt;Command&gt;</code>: There should be no path following it. <code>&lt;Widget&gt;</code>: There should be no path after it.</li> </ul> <p>More simplified path form: <code>/BarName/SubMenuName1/SubMenuName2/CommandName</code>, if the type is not specified, the first part of the path is <code>&lt;MenuBar&gt;</code>, the middle part is <code>&lt;SubMenu&gt;</code>, and the last part is <code>&lt;Command&gt;</code>.</p> <p>If <code>&lt;Hook&gt;</code> is not specified, automatically prepend <code>&lt;Hook&gt;Help</code>, indicating to add the menu bar after the Help menu.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#instantiation-method","title":"Instantiation Method","text":"<p>The path method automatically instantiates all nodes based on their type and default parameters, but we can also control instantiation ourselves for more detailed control over the content of the expansion.</p> <pre><code>EP_NEW_MENU(FEditorPlusMenuBar)(\"MyBar\", \"MyBar\", LOCTEXT(\"MyBar\", \"MyBar\"), LOCTEXT(\"MyBarTips\", \"MyBarTips\"))\n-&gt;RegisterPath()\n-&gt;Content({\n    EP_NEW_MENU(FEditorPlusSubMenu)(\"MySubMenu\")\n    -&gt;Content({\n        EP_NEW_MENU(FEditorPlusCommand)(\"MyAction\")\n        -&gt;BindAction(FExecuteAction::CreateLambda([]\n            {\n                // do action\n            })),\n    })\n});\n``\n\nWhen instantiating `MyBar`, you can pass in the hook name, localized name, and localized hint parameters (`\"MyBar\", LOCTEXT(\"MyBar\", \"MyBar\"), LOCTEXT(\"MyBarTips\", \"MyBarTips\")`). The above code is equivalent to the path-style `/` `&lt;Hook&gt;Help/` `&lt;MenuBar&gt;MyBar/` `&lt;SubMenu&gt;MySubMenu/` `&lt;Command&gt;MyAction`.\n\n##Mixed mode\n\nOf course, it can also be used in a mixed way:\n\n```cpp\nFEditorPlusPath::RegisterPath(\n    \"/&lt;MenuBar&gt;Bar/&lt;SubMenu&gt;SubMenu/&lt;Command&gt;Action\",\n    EP_NEW_MENU(FEditorPlusCommand)(\"Action\")\n    -&gt;BindAction(FExecuteAction::CreateLambda([]\n        {\n            // do action\n        })),\n);\n</code></pre> <p>In this situation, the plugin will automatically instantiate the nodes in the intermediate paths, and the user's own instantiated nodes will be used for the final path.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#more-use-cases","title":"More Use Cases","text":"<p>Header file:</p> <pre><code>#include &lt;EditorPlusPath.h&gt;\n</code></pre> <p>Specify the localized language by path, <code>EP_FNAME_HOOK_AUTO</code> means automatically using the path name as the hook name:</p> <pre><code>FEditorPlusPath::RegisterPathAction(\n        \"/Bar/Action\",\n        FExecuteAction::CreateLambda([]\n        {\n            // do action\n        }),\n        EP_FNAME_HOOK_AUTO,\n        LOCTEXT(\"Action\", \"Action\"),\n        LOCTEXT(\"ActionTips\", \"ActionTips\"));\n</code></pre> <p>Retrieve nodes and set localized text via paths:</p> <pre><code>FEditorPlusPath::GetNodeByPath(\"/MenuTest\")\n    -&gt;SetFriendlyName(LOCTEXT(\"MenuTest\", \"MenuTest\"))\n    -&gt;SetFriendlyTips(LOCTEXT(\"MenuTestTips\", \"MenuTestTips\"));\n</code></pre> <p>Add a Slate UI widget at the end of the path.</p> <pre><code>FEditorPlusPath::RegisterPath(\n    \"/&lt;MenuBar&gt;Bar/&lt;SubMenu&gt;SubMenu/&lt;Widget&gt;Widget\",\n    EP_NEW_MENU(FEditorPlusWidget)(\"Widget\", LOCTEXT(\"Widget\", \"Widget\"))\n        -&gt;BindWidget(SNew(SHorizontalBox)));\n);\n</code></pre> <p>Add new nodes in the UE built-in Hook.</p> <pre><code>FEditorPlusPath::RegisterPath(\"&lt;Hook&gt;EpicGamesHelp/&lt;Separator&gt;ExtendSeparator\")\n</code></pre> <p>Repeated declarations of the same path will be recognized as a single path, so you can continuously expand the same path.</p> <pre><code>FEditorPlusPath::RegisterPathAction(\"/MenuTest/SubMenu1/SubMenu1/Path1\", Action, EP_FNAME_HOOK_AUTO, LOCTEXT(\"Path1\", \"Path1\"), LOCTEXT(\"Path1Tips\", \"Path1Tips\"));\nFEditorPlusPath::RegisterPathAction(\"/MenuTest/SubMenu1/SubMenu1/Path2\", Action, EP_FNAME_HOOK_AUTO, LOCTEXT(\"Path2\", \"Path2\"), LOCTEXT(\"Path2Tips\", \"Path2Tips\"));\n</code></pre> <p>To continue expanding the path for a node</p> <pre><code>auto node = FEditorPlusPath::GetNodeByPath(\"/MenuTest\");\nFEditorPlusPath::RegisterChildPath(node, \"&lt;SubMenu&gt;Sub/&lt;Separator&gt;Sep\");\n</code></pre> <p>Delete a path</p> <pre><code>FEditorPlusPath::UnregisterPath(\"/MenuTest/SubMenu1/SubMenu1/Path1\");\n</code></pre>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#interface-description","title":"Interface Description","text":"<pre><code>class EDITORPLUS_API FEditorPlusPath\n{\npublic:\n\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterPath(const FString&amp; Path, const TSharedPtr&lt;FEditorPlusMenuBase&gt;&amp; Menu=nullptr);\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterPath(const FString&amp; Path, const FText&amp; FriendlyName, const FText&amp; FriendlyTips);\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterPathAction(\n        const FString&amp; Path, const FExecuteAction&amp; ExecuteAction, const FName&amp; Hook=EP_FNAME_HOOK_AUTO,\n        const FText&amp; FriendlyName=FText::GetEmpty(), const FText&amp; FriendlyTips=FText::GetEmpty());\n\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterChildPath(\n        const TSharedRef&lt;FEditorPlusMenuBase&gt;&amp; InParent, const FString&amp; Path, const TSharedPtr&lt;FEditorPlusMenuBase&gt;&amp; Menu=nullptr);\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterChildPath(\n        const TSharedRef&lt;FEditorPlusMenuBase&gt;&amp; InParent, const FString&amp; Path, const FText&amp; FriendlyName, const FText&amp; FriendlyTips);\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; RegisterChildPathAction(\n        const TSharedRef&lt;FEditorPlusMenuBase&gt;&amp; InParent, const FString&amp; Path, const FExecuteAction&amp; ExecuteAction,\n        const FName&amp; Hook=EP_FNAME_HOOK_AUTO, const FText&amp; FriendlyName=FText::GetEmpty(), const FText&amp; FriendlyTips=FText::GetEmpty());\n\n    static bool UnregisterPath(\n        const FString&amp; Path, const TSharedPtr&lt;FEditorPlusMenuBase&gt;&amp; Leaf=nullptr);\n\n    static TSharedPtr&lt;FEditorPlusMenuBase&gt; GetNodeByPath(const FString&amp; Path);\n};\n</code></pre> <ul> <li><code>RegisterPath</code>: Generate path menu</li> <li><code>RegisterPathAction</code>: Generate the path menu and automatically bind the operation to the end <code>&lt;Command&gt;</code> node.</li> <li><code>RegisterChildPath</code>: Generate child paths for the specified node. <code>RegisterChildPathAction</code>: Automatically generate child paths for the specified node and bind the action</li> <li><code>UnregisterPath</code>: Delete path, with <code>Leaf</code> multiple same-name end nodes can be specified for strict matching. During the deletion process, the intermediate nodes will be backtracked, and any intermediate node without any child nodes will also be deleted.</li> <li><code>GetNodeByPath</code>: Get the node by path</li> </ul> <p>Node Type</p> <pre><code>// base class of all node\nclass EDITORPLUS_API FEditorPlusMenuBase: public TSharedFromThis&lt;FEditorPlusMenuBase&gt; {}\n\nclass EDITORPLUS_API FEditorPlusHook: public TEditorPlusMenuBaseRoot {}\n\nclass EDITORPLUS_API FEditorPlusMenuBar: public TEditorPlusMenuBaseNode {}\n\nclass EDITORPLUS_API FEditorPlusSection: public TEditorPlusMenuBaseNode {}\n\nclass EDITORPLUS_API FEditorPlusSeparator: public TEditorPlusMenuBaseNode{}\n\nclass EDITORPLUS_API FEditorPlusSubMenu: public TEditorPlusMenuBaseNode {}\n\nclass EDITORPLUS_API FEditorPlusCommand: public TEditorPlusMenuBaseLeaf {}\n\nclass EDITORPLUS_API FEditorPlusWidget: public TEditorPlusMenuBaseLeaf {}\n</code></pre> <p>For more examples and interface explanations, please refer to the source code UE.EditorPlus\", test case MenuTest.cpp</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E7%BC%96%E8%BE%91%E5%99%A8%E6%8F%92%E4%BB%B6-EditorPlus/#modular-management","title":"Modular Management","text":"<p>UE.EditorPlus also provides a modular framework for managing extension menus, supporting automatic loading and unloading of extension menus when plugins are loaded and unloaded.</p> <p>Let the menu class inherit from <code>IEditorPlusToolInterface</code>, and override the <code>OnStartup</code> and <code>OnShutdown</code> functions. <code>OnStartup</code> is responsible for creating the menu, and <code>OnShutdown</code> is responsible for calling the node's <code>Destroy</code> function to clean up the menu. When the reference count of a single node reaches 0, automatic cleaning is performed.</p> <pre><code>class FMenuTest: public IEditorPlusToolInterface\n{\npublic:\n    virtual void OnStartup() override;\n    virtual void OnShutdown() override;\n}\n\nvoid FMenuTest::OnStartup()\n{\n    BuildPathMenu();\n    BuildCustomMenu();\n    BuildMixMenu();\n    BuildExtendMenu();\n}\n\nvoid FMenuTest::OnShutdown()\n{\n    for(auto Menu: Menus)\n    {\n        if(Menu.IsValid()) Menu-&gt;Destroy();\n    }\n    Menus.Empty();\n}\n</code></pre> <p>The MenuManager class inherits from <code>IEditorPlusToolManagerInterface</code> and overrides the <code>AddTools</code> function to add menu items inside the <code>AddTools</code> function.</p> <pre><code>class FEditorPlusToolsImpl: public IEditorPlusToolManagerInterface\n{\npublic:\n    virtual void AddTools() override;\n}\n\nvoid FEditorPlusToolsImpl::AddTools()\n{\n    if (!Tools.Num())\n    {\n        Tools.Emplace(MakeShared&lt;FMenuTest&gt;());\n    }\n\n}\n</code></pre> <p>When plugins are loaded and unloaded, the management class's <code>StartupTools</code> and <code>ShutdownTools</code> functions are called, respectively.</p> <pre><code>void FEditorPlusToolsModule::StartupModule()\n{\n    Impl = FEditorPlusToolsImpl::Get();\n    Impl-&gt;StartupTools();\n\n}\nvoid FEditorPlusToolsModule::ShutdownModule()\n{\n    Impl-&gt;ShutdownTools();\n}\n</code></pre> <p>Once the above adaptation is completed, the extension menus will be automatically loaded and unloaded when the plugins are loaded and unloaded.</p> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/","title":"UE sets up localization for multiple languages.","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#localizing-multilingual-user-experience","title":"Localizing Multilingual User Experience","text":"<p>Record how to achieve localization and multilingual support in UE.</p> <p>If you're not familiar with the UE extension menu, it's recommended to take a quick look at: UE extension editor menu, ue-Use path to expand the menu</p> <p>This text is based on the plugin: UE.EditorPlus</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#feature-introduction","title":"Feature Introduction","text":"<p>The UE comes with tools for implementing localization for multiple languages, for example, we can localize the editor menu:</p> <p>English Menu:</p> <p></p> <p>English menu:</p> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#code-declaration","title":"Code declaration","text":"<p>In order to achieve menu localization, we need to explicitly declare the strings that require UE processing in the code, using the macros <code>LOCTEXT</code> and <code>NSLOCTEXT</code> defined by UE.</p> <ul> <li>To define the entire file globally, start by defining a macro called <code>LOCTEXT_NAMESPACE</code>, which contains the namespace of the current multilingual text. Then, use <code>LOCTEXT</code> to define the text in the file. Finally, remove the <code>LOCTEXT_NAMESPACE</code> macro at the end of the file.</li> </ul> <pre><code>// #define LOCTEXT(InKey, InTextLiteral)\n\n#define LOCTEXT_NAMESPACE \"EditorPlusTools\"\nLOCTEXT(\"Key\", \"Content\");\n#undef LOCTEXT_NAMESPACE\n</code></pre> <p>Local definition method, use <code>NSLOCTEXT</code>, when defining text, add namespace parameter:</p> <pre><code>// #define NSLOCTEXT(InNamespace, InKey, InTextLiteral)\n\nNSLOCTEXT(\"EditorPlusTools\", \"Key\", \"Content\");\n</code></pre> <p>The UE tool collects all the text that needs to be translated by searching for the presence of the macros <code>LOCTEXT</code> and <code>NSLOCTEXT</code>.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#use-a-tool-to-translate-the-text","title":"Use a tool to translate the text","text":"<p>Assuming we have the following code defining the text:</p> <pre><code>#define LOCTEXT_NAMESPACE \"EditorPlusTools\"\n// register path node loctext\nFEditorPlusPath::GetNodeByPath(\"/MenuTest\")-&gt;SetFriendlyName(LOCTEXT(\"MenuTest\", \"MenuTest\"))-&gt;SetFriendlyTips(LOCTEXT(\"MenuTestTips\", \"MenuTestTips\"));\nFEditorPlusPath::GetNodeByPath(\"/MenuTest/&lt;SubMenu&gt;SubMenu1\")-&gt;SetFriendlyName(LOCTEXT(\"SubMenu1\", \"SubMenu1\"))-&gt;SetFriendlyTips(LOCTEXT(\"SubMenu1Tips\", \"SubMenu1Tips\"));\nFEditorPlusPath::GetNodeByPath(\"/MenuTest/&lt;SubMenu&gt;SubMenu1/&lt;SubMenu&gt;SubMenu1\")-&gt;SetFriendlyName(LOCTEXT(\"SubMenu1\", \"SubMenu1\"))-&gt;SetFriendlyTips(LOCTEXT(\"SubMenu1Tips\", \"SubMenu1Tips\"));\nFEditorPlusPath::GetNodeByPath(\"/&lt;Hook&gt;Help/&lt;MenuBar&gt;MenuTest/&lt;SubMenu&gt;SubMenu1/&lt;Section&gt;Section1\")-&gt;SetFriendlyName(LOCTEXT(\"Section1\", \"Section1\"))-&gt;SetFriendlyTips(LOCTEXT(\"Section1Tips\", \"Section1Tips\"));\n#undef LOCTEXT_NAMESPACE\n</code></pre> <p>First, open the translation tool and go to the editor settings <code>Edit - Editor Preferences</code>, then check <code>General - Experimental Features - Tools - Translation Selector</code>.</p> <p></p> <p>Then open the translation tool <code>Tools - Localization Control Panel</code>:</p> <p></p> <p>Create a new target (It's okay to create under the default Game, creating a new one for the convenience of managing and moving these translated texts)</p> <p></p> <p>Set the parameters for the target, change the name to <code>EditorPlusTools</code> here, load the policy as <code>Editor</code>, collect from text, and add the plugin directory. The target dependencies are <code>Engine, Editor</code>, keep the other configurations unchanged:</p> <p></p> <p>Add language support to ensure that there are two language options: Chinese (Simplified) and English. Verify that when the mouse is placed over the language name, \"zh-Hans\" and \"en\" are displayed respectively. Select English, as the text in our code is defined in English, and we need to gather this English text here.</p> <p></p> <p>Click to collect text:</p> <p></p> <p>A progress dialog will pop up, wait for the collection to be successful, and a green check mark will be displayed:</p> <p></p> <p>Turn off the collection progress dialog and go back to the translation tool. You can see the number of collected items displayed in one line of English that we don't need to translate. Click the translation button for the Chinese line.</p> <p></p> <p>Open the window and you will see that the \"Untranslated\" column has content. On the right side of the English text, input the translated content. Once all the content has been translated, save and exit the window.</p> <p></p> <p>Click to calculate the number of words, and after finishing, you will be able to see the Chinese column displaying the translated quantity:</p> <p></p> <p>Final compiled text:</p> <p></p> <p>The translated data will be placed in <code>Content\\Localization\\EditorPlusTools</code>, with one folder for each language. Inside the zh-Hans folder, you can see two files. <code>.archive</code> is the collected and translated text, while <code>.locres</code> is the compiled data.</p> <p></p> <p></p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#put-the-translated-text-into-the-plugin-directory","title":"Put the translated text into the plugin directory","text":"<p>We've placed the translation text generated for the plugin in the project directory above. We need to move these texts into the plugin to facilitate publishing them along with the plugin.</p> <p>Move the <code>Content\\Localization\\EditorPlusTools</code> directory to the plugin directory under Content, I have it here as <code>Plugins\\UE.EditorPlus\\Content\\Localization\\EditorPlusTools</code>.</p> <p>Modify the configuration file of the project <code>DefaultEditor.ini</code> and add the new path:</p> <pre><code>[Internationalization]\n+LocalizationPaths=%GAMEDIR%Plugins/UE.EditorPlus/Content/Localization/EditorPlusTools\n</code></pre> <p>In this way, after receiving the plugin, other projects can simply modify <code>DefaultEditor.ini</code> to directly use the translated text without the need to reconfigure the translation.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E8%AE%BE%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%A4%9A%E8%AF%AD%E8%A8%80/#precautions","title":"Precautions","text":"<p>In the process of generating translation data, we have encountered some issues. The following are the key points to be aware of:</p> <p>In the code, text must be defined using the <code>LOCTEXT</code> and <code>NSLOCTEXT</code> macros, and the text needs to be a string constant for Unreal Engine to collect it. Translate these text into English language:</p> <p>The target name of the translation cannot contain the symbols <code>.</code>, and the directory name under <code>Content\\Localization\\</code> cannot contain <code>.</code>. UE will only take the name before the <code>.</code>. This may cause UE to fail to read the translation text due to incorrect names. For editor plugins, it is necessary to check if it is in command line mode using <code>IsRunningCommandlet()</code>. If it is, then menus and SlateUI should not be generated because there is no Slate module in command line mode, which can lead to an error when collecting text: <code>Assertion failed: CurrentApplication.IsValid()</code>. If you encounter a similar error, you can try adding this check. Specific error information:</p> <pre><code>&gt; Assertion failed: CurrentApplication.IsValid() [File:E:\\UE\\ue5.3_git\\Engine\\Source\\Runtime\\Slate\\Public\\Framework\\Application\\SlateApplication.h] [Line: 255]\n\n![](assets/img/2023-ue-localization/tool_error.png)\n</code></pre> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E9%80%9A%E8%BF%87%E6%8F%92%E4%BB%B6%E6%BA%90%E7%A0%81%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/","title":"UE adds plugins through plugin source code.","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E9%80%9A%E8%BF%87%E6%8F%92%E4%BB%B6%E6%BA%90%E7%A0%81%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/#add-plugins-by-adding-plugin-source-code-in-ue","title":"Add plugins by adding plugin source code in UE.","text":"","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E9%80%9A%E8%BF%87%E6%8F%92%E4%BB%B6%E6%BA%90%E7%A0%81%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/#add-plugin","title":"Add plugin","text":"<p>Simple record of how to add a plugin when you have the plugin source code.</p> <p>Plugin UE.EditorPlusFor example</p> <p>Put the source code into the Plugins directory. - (This step can be skipped) Modify the .uproject file of the project, add the following under the Plugins field:     <pre><code>    \"Plugins\": [\n    {\n        \"Name\": \"EditorPlus\",\n        \"Enabled\": true,\n        \"TargetAllowList\": [\n            \"Editor\"\n        ]\n    }\n</code></pre> - Right-click on the uproject file, execute \"Generate Visual Studio Project Files\", and update the sln project file. Open the .sln file and compile the project.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/ue-%E9%80%9A%E8%BF%87%E6%8F%92%E4%BB%B6%E6%BA%90%E7%A0%81%E6%B7%BB%E5%8A%A0%E6%8F%92%E4%BB%B6/#set-up-multiple-languages","title":"Set up multiple languages","text":"<p>Edit the project's configuration file <code>DefaultEditor.ini</code> to add the new path:</p> <pre><code>[Internationalization]\n+LocalizationPaths=%GAMEDIR%Plugins/UE.EditorPlus/Content/Localization/EditorPlusTools\n</code></pre> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev","game","UE","UnreanEngine","UE4","UE5"]},{"location":"en/unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/","title":"Unity Character Control","text":"<p>Character action control is a crucial part of the game, as games with strong operation capabilities can effectively attract players. Here, I will attempt to create a simple character control system where the character can perform basic movements, including walking and jumping.</p>","tags":["dev"]},{"location":"en/unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/#requirement","title":"Requirement","text":"<p>First, let's consider the specific requirements for character operations:</p> <ol> <li>Walking, able to walk on the surface of the rigid body, controlled by arrow keys for up, down, left, and right input, without considering the acceleration and deceleration process for now.</li> <li>The walking speed can be different in different directions, for example, moving backward should be slower than moving forward.</li> <li>Jumping, controlled by the jump key, the character leaves the ground with a certain initial velocity and gradually falls back to the ground.</li> </ol> <p>The general idea is as follows: Use velocity to describe the movement of a character. The components of velocity in each direction can be calculated separately, and finally, multiplying velocity by time gives the character's position offset.</p>","tags":["dev"]},{"location":"en/unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/#character-component-settings","title":"Character Component Settings","text":"<p>Before writing scripts to control and manipulate characters, some preparation work needs to be done to configure the relevant components of the character.</p> <ol> <li>In order to control the characters and give them some rigid physical behavior, it is necessary to add a <code>Character Controller Component</code> to the characters.</li> <li>For a clearer structure, separate the input for character operations first, read and preprocess the input, and then pass the results to the character controller. Name this part of the script as <code>MyThirdPersonInput.cs</code>.</li> <li>The script that actually controls the character's movement should be named <code>MyThirdPersonController.cs</code>.</li> </ol> <p>The result after configuration is as follows:</p> <p></p>","tags":["dev"]},{"location":"en/unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/#input","title":"Input","text":"<p>The input consists of up, down, left, right, and jump commands. The direction needs to be normalized:</p> <pre><code>// get movement from input\nvar direction = new Vector3(Input.GetAxis(\"Horizontal\"), 0, \n    Input.GetAxis(\"Vertical\"));\nif (direction != Vector3.zero)\n{\n    // constrain length to [0, 1]\n    var directionLength = direction.magnitude;\n    directionLength = Math.Min(1, directionLength);\n    direction = direction.normalized * directionLength;\n}\nperson.inputMoveDirction = direction;\nperson.inputJump = Input.GetButton(\"Jump\");\n````\n\n## Describing Movement and Jumping\nWe need to use some variables to describe the character's actions, such as movement speed, jumping speed, etc. Movement is described using the following variable:\n\n```c#    \n[System.Serializable]\npublic class Movement\n{\n    public float forwardSpeed = 5F;\n    public float backwardSpeed = 5F;\n    public float sidewardSpeed = 5F;\n}\npublic Movement movement = new Movement();\n</code></pre> <p><code>[System.Serializable]</code> is used to expose these parameters in the Inspector. The description of jumping is as follows:</p> <pre><code>[System.Serializable]\npublic class Jumping \n{\n    public bool enable = true;      // true if can jump\n    public float jumpSpeed = 5F;    // original speed when jump\n    public float gravity = 10F;\n    public float maxFallSpeed = 20F;\n    public bool jumping = false;    // true if now in the air\n}\npublic Jumping jumping = new Jumping();\n</code></pre>","tags":["dev"]},{"location":"en/unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/#decomposition-speed","title":"Decomposition Speed","text":"<p>In order to facilitate the description of movement in different directions, the direction is divided into three components: front and back, left and right, and up and down, respectively, to be resolved.</p> <p>The speed difference before and after varies. It can be determined based on the sign of the numerical value:</p> <pre><code>if (velocity.z &gt; 0)\n    velocity.z *= movement.forwardSpeed;\nelse\n    velocity.z *= movement.backwardSpeed;\n</code></pre> <p>Same Speed on Both Sides:</p> <pre><code>velocity.x = inputMoveDirction.x * movement.sidewardSpeed;\n</code></pre> <p>Jumping is a bit troublesome as it requires determining the current status of the character:</p> <ul> <li>If already in the air, calculate the speed with gravity.</li> <li>If on the ground:</li> <li> <ul> <li>If the jump key is pressed, the speed is the initial jump speed.</li> </ul> </li> <li> <ul> <li>Otherwise, the speed in the y direction is 0.</li> </ul> </li> </ul> <pre><code>if (!isOnGround)\n{\n    yVelocity = Math.Max(yVelocity - jumping.gravity * Time.deltaTime, \n        -jumping.maxFallSpeed);\n}\nelse\n{\n    if (jumping.enable &amp;&amp; inputJump)\n    {\n        yVelocity = jumping.jumpSpeed;\n    }\n    else\n        yVelocity = 0F;\n}\n</code></pre>","tags":["dev"]},{"location":"en/unity-Unity%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6/#update-character-location","title":"Update Character Location","text":"<p>The calculated velocity is assumed to be the velocity from the current frame. So, the velocity used to calculate the position in the current frame should be the one calculated in the previous frame. Therefore, before updating the velocity, calculate the character's new position first.</p> <pre><code>// move to new position\nvar collisionFlag = controller.Move(velocity * Time.deltaTime);\nisOnGround = (collisionFlag &amp; CollisionFlags.CollidedBelow) != 0;\n</code></pre> <p><code>controller.Move</code> will return <code>CollisionFlags</code> to indicate the collision state, through which we can determine whether the character is standing on the ground or not.</p> <p>Complete code:</p> <p>(to_be_replaced1)</p> <p>MyThirdPersonInput.cs:</p> <pre><code>using UnityEngine;\nusing System;\nusing System.Collections;\n[RequireComponent(typeof(MyThirdPersonController))]\n\npublic class MyThirdPersonInput : MonoBehaviour {\n\n    private MyThirdPersonController person;\n\n    void Awake()\n    {\n        person = GetComponent&lt;MyThirdPersonController&gt;();\n    }\n\n    // Update is called once per frame\n    void Update () \n    {\n        // get movement from input\n        var direction = new Vector3(Input.GetAxis(\"Horizontal\"), 0, \n            Input.GetAxis(\"Vertical\"));\n\n        if (direction != Vector3.zero)\n        {\n            // constrain length to [0, 1]\n            var directionLength = direction.magnitude;\n\n            directionLength = Math.Min(1, directionLength);\n\n            direction = direction.normalized * directionLength;\n\n        }\n\n        person.inputMoveDirction = direction;\n        person.inputJump = Input.GetButton(\"Jump\");\n\n    }\n}\n</code></pre> <p>MyThirdPersonController.cs:</p> <pre><code>using UnityEngine;\nusing System;\nusing System.Collections;\n\npublic class MyThirdPersonController : MonoBehaviour {\n\n    // The current global direction we want the character to move in.\n    [System.NonSerialized]\n    public Vector3 inputMoveDirction = Vector3.zero;\n\n    // Is the jump button held down? We use this interface instead of checking\n    // for the jump button directly so this script can also be used by AIs.\n    [System.NonSerialized]\n    public bool inputJump = false;\n\n    [System.Serializable]\n    public class Movement\n    {\n        public float forwardSpeed = 5F;\n        public float backwardSpeed = 5F;\n        public float sidewardSpeed = 5F;\n    }\n    public Movement movement = new Movement();\n\n    [System.Serializable]\n    public class Jumping \n    {\n        public bool enable = true;      // true if can jump\n        public float jumpSpeed = 5F;    // original speed when jump\n        public float gravity = 10F;     \n        public float maxFallSpeed = 20F;\n        public bool jumping = false;    // true if now in the air\n    }\n    public Jumping jumping = new Jumping();\n\n    private CharacterController controller;\n    private Vector3 velocity = Vector3.zero;\n    private bool isOnGround = true;\n    // Use this for initialization\n    void Start () \n    {\n        controller = GetComponent&lt;CharacterController&gt;();\n    }\n\n    // Update is called once per frame\n    void FixedUpdate() \n    {\n        // move to new position\n        var collisionFlag = controller.Move(velocity * Time.deltaTime);\n        isOnGround = (collisionFlag &amp; CollisionFlags.CollidedBelow) != 0;\n\n        // update velocity\n        float yVelocity = velocity.y;\n        velocity = Vector3.zero;\n\n        // x-z plane velocity\n        if (inputMoveDirction != Vector3.zero)\n        {\n            velocity.z = inputMoveDirction.z;\n            if (velocity.z &gt; 0)\n                velocity.z *= movement.forwardSpeed;\n            else\n                velocity.z *= movement.backwardSpeed;\n\n            velocity.x = inputMoveDirction.x * movement.sidewardSpeed;\n        }\n\n        // y velocity\n        if (!isOnGround)\n        {\n            yVelocity = Math.Max(yVelocity - jumping.gravity * Time.deltaTime, \n                -jumping.maxFallSpeed);\n        }\n        else\n        {\n            if (jumping.enable &amp;&amp; inputJump)\n            {\n                yVelocity = jumping.jumpSpeed;\n            }\n            else\n                yVelocity = 0F;\n        }\n\n        velocity = transform.rotation * velocity;\n        velocity.y = yVelocity;\n    }\n}\n</code></pre> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev"]},{"location":"en/unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/","title":"Unity implements volumetric light scattering (also known as Volumetric Light Scattering, or cloud gap light)","text":"","tags":["dev"]},{"location":"en/unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/#principle","title":"Principle","text":"<p>The principle of Volumetric Light Scattering can be referred to in Chapter 13 of \"GPU Gems 3\" (http://http.developer.nvidia.com/GPUGems3/gpugems3_ch13.html). The book contains effective illustrations.</p> <p></p> <p>[to_be_replace_0]Good-looking, well, then, our goal is to achieve this effect.</p> <p>The book explains the principle, and one key formula is:</p> <p>\\[ L(s, \\theta, \\phi) = exposure \\times \\sum_{i=0}^n decay^i \\times weight \\times \\frac{L( s_i, \\theta_i )}{n} \\]</p> <p>My understanding is that for each pixel on the image, light can be projected onto it. Therefore, we sample the line connecting the pixel to the light source (corresponding to the formula \\(i\\)), and the sampled result is weighted and averaged (corresponding to the formula \\(\\sum\\)), which becomes the new color value for that pixel. Additionally, there is a crucial post-pixel shader, but if we only use that shader to process the rendering results from the camera, it will create noticeable artificial artifacts, such as many stripes.</p> <p></p> <p>So how is the effect in the book achieved? In fact, the answer is already provided in the book and can be illustrated using a set of images:</p> <p></p> <p>\u200b\u56fe\u200ba represents a rough effect, and if you look carefully, you can see many stripes, and it doesn't cover up the lack of authenticity. Steps b, c, and d are necessary to achieve a good effect.</p> <p>b. Render the lighting radiance effect onto the image and add object occlusion.</p> <p>c. Apply the Volumetric Light Scattering pixel shader to b to achieve the effect after occlusion.</p> <p>d. Add colors from real scenes.</p> <p>Then let's proceed step by step.</p>","tags":["dev"]},{"location":"en/unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/#painting-obstacles","title":"Painting Obstacles","text":"<p>In actual operation, I first use <code>RenderWithShader</code> to render the objects that will be occluded in black, and the rest in white. Because this requires rendering each face, it can lead to a certain performance cost for complex scenes. The objects in the scene can be opaque or transparent. We want opaque objects to produce full occlusion of light, while transparent objects should produce partial occlusion. Therefore, we need to write different shaders for objects with different RenderTypes. RenderType is the Tag for SubShader. If you are not clear about it, you can refer to here. After writing the shaders, we can call them like this:</p> <p><pre><code>camera.RenderWithShader(objectOcclusionShader, \"RenderType\");\n</code></pre> The second parameter of <code>RenderWithShader</code> is used to specify the Shader replacement based on the RenderType. In simple terms, when replacing the Shader for the same object, the RenderType of the replacement Shader must be consistent with the original Shader. This allows us to use different Shaders for objects with different RenderTypes.</p> <pre><code>Shader \"Custom/ObjectOcclusion\" \n{\n    Properties \n    {\n        _MainTex (\"Base (RGB)\", 2D) = \"white\" {}\n    }\n    SubShader \n    {\n        Tags \n        {\n            \"Queue\" = \"Geometry\"\n            \"RenderType\" = \"Opaque\"\n        }\n        LOD 200\n        Pass\n        {\n            Lighting Off\n            ZTest Always Cull Off ZWrite Off\n            Fog { Mode off }\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n\n            uniform sampler2D _MainTex;\n\n            v2f_img vert(appdata_img i)\n            {\n                v2f_img o;\n                o.pos = mul (UNITY_MATRIX_MVP, i.vertex);\n                return o;\n            }\n\n            half4 frag(v2f_img i): COLOR\n            {\n                return half4(0, 0, 0, 1);\n            }\n            ENDCG\n        }\n\n    }\n        SubShader \n    {\n        Tags \n        {\n            \"Queue\" = \"Geometry\"\n            \"RenderType\" = \"Transparent\"\n        }\n        LOD 200\n        Pass\n        {\n            Lighting Off\n            ZTest Always Cull Off ZWrite Off\n            Fog { Mode off }\n            Blend SrcAlpha OneMinusSrcAlpha     // blend for transparent objects\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n\n            uniform sampler2D _MainTex;\n\n            v2f_img vert(appdata_img i)\n            {\n                v2f_img o;\n                o.pos = mul (UNITY_MATRIX_MVP, i.vertex);\n                o.uv = MultiplyUV( UNITY_MATRIX_TEXTURE0, i.texcoord );\n                return o;\n            }\n\n            half4 frag(v2f_img i): COLOR\n            {\n                half3 output = (1, 1, 1);\n                half4 color = tex2D(_MainTex, i.uv);\n                half alpha = color.a;\n                return half4(output *(1-alpha), alpha);\n            }\n            ENDCG\n        }\n\n    }\n\n    FallBack \"Diffuse\"\n}\n</code></pre> <p>Note the difference between shaders for opaque and transparent objects: opaque objects are directly rendered as black, while transparent objects require blending. We need to extract the alpha channel from the object's texture and use it for blending. The code above only lists Opaque and Transparent shaders, but there are also TreeOpaque (which is the same as Opaque but with a different RenderType) and TreeTransparentCutout (same as Transparent) shaders, among others. Since we have specified the RenderType, in order to be comprehensive, we need to cover as many scenarios as possible where objects can occlude each other. In this case, I have only included the four types mentioned earlier. The results are roughly as follows:</p> <p></p>","tags":["dev"]},{"location":"en/unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/#combine-object-occlusion-to-shade-light-source-radiation","title":"Combine object occlusion to shade light source radiation.","text":"<p>Painting the radiation of the light source is not difficult, but it is important to make some adjustments based on the size of the screen, so that the radiation of the light source appears circular.</p> <pre><code>Shader \"Custom/LightRadiate\" \n{\n    Properties \n    {\n        _MainTex (\"Base (RGB)\", RECT) = \"white\" {}\n        _LightPos (\"Light Pos In Screen Space(XY)\", Vector) = (0, 0, 0, 1)\n        _LightRadius (\"Light radiation radius (Pixel)\", Float) = 50\n    }\n    SubShader \n    {\n        Tags { \"RenderType\"=\"Opaque\" }\n        LOD 200\n        Pass\n        {\n            ZTest Always Cull Off ZWrite Off\n            Fog { Mode off }\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n\n            uniform sampler2D _MainTex;\n            float4 _LightPos;\n            float _LightRadius;\n\n            v2f_img vert(appdata_img i)\n            {\n                v2f_img o;\n                o.pos = mul (UNITY_MATRIX_MVP, i.vertex);\n                o.uv = MultiplyUV( UNITY_MATRIX_TEXTURE0, i.texcoord );\n                return o;\n            }\n\n            half4 frag(v2f_img i): COLOR\n            {\n                half2 deltaTexCoord = (i.uv - _LightPos.xy) * half2(_ScreenParams.x, _ScreenParams.y);\n                float dis = dot(deltaTexCoord, deltaTexCoord);\n                const float maxDis = _LightRadius * _LightRadius;\n                dis = saturate((maxDis-dis) / maxDis * 0.5);\n                return half4(dis, dis, dis, 1) * half4(tex2D(_MainTex, i.uv).rgb, 1);               \n            }\n\n            ENDCG\n        }\n    } \n    FallBack \"Diffuse\"\n}\n</code></pre> <p>This Shader requires the input of the screen position of the light source (which can be calculated using <code>camera.WorldToViewportPoint</code>, resulting in UV coordinates). Then, it draws a circle with a specified radius that decays in brightness outwardly. The result is combined with the previously obtained object occlusion image (stored in <code>_MainTex</code>), resulting in something like this:</p> <p></p>","tags":["dev"]},{"location":"en/unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/#light-scattering-processing-combined-with-real-colors","title":"Light Scattering processing, combined with real colors.","text":"<p>Here we will need to use the provided Pixel Shader in the book, my version being: [to_be_replace[x]]</p> <pre><code>Shader \"Custom/LightScattering\" \n{\n    Properties \n    {\n        _MainTex (\"Base (RGB)\", 2D) = \"white\" {}\n        _LightRadTex(\"Light Radiate Tex (RGB)\", 2D) = \"white\" {}\n        _LightPos (\"Light Pos In Screen Space(XY)\", Vector) = (0, 0, 0, 1)\n        _Params(\"Density Weight Decay Exposure\", Vector) = (1.0, 1.0, 1.0, 1.0)\n    }\n    SubShader \n    {\n        LOD 200\n        Pass\n        {\n            ZTest Always Cull Off ZWrite Off\n            Fog { Mode off }    \n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #pragma target 3.0\n            #include \"UnityCG.cginc\"\n\n            uniform sampler2D _MainTex;\n            uniform sampler2D _LightRadTex;\n            uniform float4 _LightPos;\n            uniform float4 _Params;\n\n            v2f_img vert(appdata_img i)\n            {\n                v2f_img o;\n                o.pos = mul (UNITY_MATRIX_MVP, i.vertex);\n                o.uv = MultiplyUV( UNITY_MATRIX_TEXTURE0, i.texcoord );\n                return o;\n            }\n\n            half4 frag(v2f_img i): COLOR\n            {   \n                // Calculate vector from pixel to light source in screen space\n                float2 deltaTexCoord = (i.uv - _LightPos.xy);\n\n                // Divide by number of samples and scale by control factor, here I use 32 samples\n                deltaTexCoord *= 1.0f / 32 * _Params.x; //density;\n\n                // Store color.\n                half3 color = tex2D(_MainTex, i.uv).rgb;\n\n                // Store initial sample.\n                half3 light = tex2D(_LightRadTex, i.uv).rgb;\n\n                // Set up illumination decay factor.\n                half illuminationDecay = 1.0f;\n\n                for(int j = 0; j &lt; 31; ++j)\n                {\n                    // Step sample location along ray.\n                    i.uv -= deltaTexCoord;\n\n                    // Retrieve sample at new location.\n                    half3 sample = tex2D(_LightRadTex, i.uv).rgb;\n\n                    // Apply sample attenuation scale/decay factors.\n                    sample *= illuminationDecay * 0.03125 * _Params.y ; //weight;\n\n                    // Accumulate combined light.\n                    light += sample;\n\n                    // Update exponential decay factor.\n                    illuminationDecay *= _Params.z;             //decay;\n                }\n\n                // Output final color with a further scale control factor.\n                return half4(color+(light * _Params.w), 1); // exposure\n            }\n\n            ENDCG       \n        }\n\n    } \n    FallBack \"Diffuse\"\n}\n</code></pre> <p>Generally speaking, it is consistent with what is described in the book, but my parameters need to be passed in the program, and it is combined with real color images and light scattering images. As a result:</p> <p></p>","tags":["dev"]},{"location":"en/unity-Unity%E5%AE%9E%E7%8E%B0%E4%BD%93%E7%A7%AF%E5%85%89%E7%85%A7%E6%95%A3%E5%B0%84/#complete-code","title":"Complete Code","text":"<p>The code is available here. Add the <code>cs</code> script to the camera.</p> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/","title":"Unity draws depth maps and performs edge detection.","text":"<p>Just got in touch with Unity not long ago, have always been interested in Unity's ShaderLab, feel like it can quickly achieve all kinds of display effects, very interesting. Well, as someone who hasn't even entered the door yet, I'll mess around with depth maps and edge detection then.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#mini-map-settings","title":"Mini Map Settings","text":"<p>Because I have only made a rough draft, I do not intend to go into detail on how to draw a small map on the scene. In general, I have done the following things:</p> <p>Translate these text into English language:</p> <ol> <li>Get the bounding box of the scene, which is useful when setting camera parameters and position.</li> <li>Configure the minimap camera as orthogonal projection, and set the camera's near and far planes based on the bounding box.</li> <li>Add a character target to the camera, which will be displayed at the center of the map.</li> <li>Update the camera position each time, based on the target's position and the maximum y value of the scene.</li> </ol> <p>Specific configurations can be referred to the code provided later.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#get-depth-map","title":"Get Depth Map","text":"","tags":["dev"]},{"location":"en/unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#use-depthtexturemode-to-access-the-depth-texture","title":"Use <code>depthTextureMode</code> to access the depth texture","text":"<p>The camera itself can save the DepthBuffer or a DepthNormalBuffer (which can be used for edge detection), just need to set <code>[to_be_replace]</code>.</p> <pre><code>Camera.depthTextureMode = DepthTextureMode.DepthNormals;\n</code></pre> <p>Then reference in the Shader.</p> <pre><code>sampler2D _CameraDepthNormalsTexture;\n</code></pre> <p>It's enough, you can refer to the code I provided later for specific instructions. Regarding the relationship between the depth value saved in the Z-Buffer and the real-world depth, you can refer to these two articles: Learning to Love your Z-buffer and Linearize depth. Additionally, Unity also provides some functions for depth calculation: <code>Linear01Depth</code>, <code>LinearEyeDepth</code>, etc.</p> <p>This is not the main point I want to discuss here. What I want to say is that initially my camera was set to use orthogonal projection, and the depth should have been linear. However, when I tested it, I found that it was not linear. Then I tried using the method described in the link above to calculate the depth in real-world units, but it was always incorrect. I couldn't get the true linear depth, and I'm not sure if it's a problem with Unity's Z_Buffer or something else. If anyone knows, please teach me.</p> <p>Of course, if you don't need the actual depth values and only need to compare depths, the method mentioned above is sufficient and quite simple. But for me, I want to map the real depth to color values, and I need to obtain the true linear depth values (although they are also in the range of [0, 1]). So, I had to resort to using another method, which is to use the RenderWithShader function.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#use-renderwithshader-to-obtain-depth-map","title":"Use <code>RenderWithShader</code> to obtain depth map","text":"<p>This method is actually using an example from the Unity Reference: Rendering with Replaced Shaders. It is important to understand that <code>RenderWithShader</code> will render the corresponding Mesh in the scene.</p> <p>Create a Shader:</p> <pre><code>Shader \"Custom/DepthByReplaceShader\" \n{\nSubShader \n{\n    Tags { \"RenderType\"=\"Opaque\" }\n    Pass {\n        Fog { Mode Off }\n        CGPROGRAM\n        #pragma vertex vert\n        #pragma fragment frag\n        #include \"UnityCG.cginc\"\n\n        struct v2f {\n            float4 pos : SV_POSITION;\n            float2 depth : TEXCOORD0;\n        };\n\n        v2f vert (appdata_base v) {\n            v2f o;\n            o.pos = mul (UNITY_MATRIX_MVP, v.vertex);\n            UNITY_TRANSFER_DEPTH(o.depth);\n            return o;\n        }\n\n        float4 frag(v2f i) : COLOR {\n            //UNITY_OUTPUT_DEPTH(i.depth);\n            float d = i.depth.x/i.depth.y;\n            return float4(d, d, d, 1);\n        }\n        ENDCG\n    }\n}\n}\n</code></pre> <p>Add a script to your mini map camera (create it if it doesn't exist), configure the camera to use orthographic projection, and render the scene using this Shader in the <code>Update()</code> method.</p> <pre><code>camera.targetTexture = depthTexture;\ncamera.RenderWithShader(depthShader, \"\");\n</code></pre> <p>The result of rendering will be saved in the <code>depthTexture</code>, it's very simple.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#map-depth-to-color","title":"Map Depth to Color","text":"<p>To accomplish this task, the first step is to have a color map. This map can be easily generated using Matlab. For example, I have utilized the \"jet\" map inside Matlab.</p> <p></p> <p>Put this image into the project directory <code>Assets\\Resources</code>, and you can read it in the program.</p> <pre><code>colorMap = Resources.Load&lt;Texture2D&gt;(\"colormap\");\n</code></pre> <p>What needs to be noted is that the <code>Wrap Mode</code> of this image should be set to <code>Clamp</code> to prevent interpolation between color values at the edges.</p> <p>Afterwards, you will need to use the <code>OnRenderImage</code> and <code>Graphics.Blit</code> functions. The function prototypes are:</p> <pre><code>void OnRenderImage(RenderTexture src, RenderTexture dst);\nstatic void Blit(Texture source, RenderTexture dest, Material mat, int pass = -1);\n</code></pre> <p>The <code>src</code> parameter of this function is the result of camera rendering, while <code>dst</code> is the processed result to be passed back to the camera. Therefore, this function is usually used to apply various effects to the image after camera rendering, such as depth-color mapping and edge detection in our case. The approach is to call <code>Graphics.Blit</code> in <code>OnRenderImage</code> and pass in a specific <code>Material</code>:</p> <pre><code>depthEdgeMaterial.SetTexture(\"_DepthTex\", src);\nGraphics.Blit(src, dst, depthEdgeMaterial);\nreturn;\n</code></pre> <p>It is worth noting that <code>Graphics.Blit</code> actually does the following: it draws a plane in front of the camera that is the same size as the screen, passes <code>src</code> as the <code>_MainTex</code> of this plane into the <code>Shader</code>, and then puts the result into <code>dst</code>, instead of redrawing the Meshes in the actual scene.</p> <p>The color mapping is essentially mapping the depth [0, 1] to the UV of an image. Since I want the areas close to the camera to be red, I inverted the depth.</p> <pre><code>half4 color = tex2D(_ColorMap, float2(saturate(1-depth), 0.5));\n</code></pre>","tags":["dev"]},{"location":"en/unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#edge-detection","title":"Edge Detection","text":"<p>Edge detection requires the use of the camera's <code>_CameraDepthNormalsTexture</code>, primarily utilizing the values of normals, while depth utilizes the previously calculated values. In each pixel (x, y, z, w) of the <code>_CameraDepthNormalsTexture</code>, (x, y) represents the normals, while (z, w) represents the depth. The normals are stored using a specific method, which you can explore more deeply if interested.</p> <p>The code refers to the edge detection in Unity's built-in Image Effect. What needs to be done is to compare the difference between the normal depth of the current pixel and its neighboring pixels. If the difference is large enough, we consider it as an edge.</p> <pre><code>inline half CheckSame (half2 centerNormal, half2 sampleNormal, float centerDepth, float sampleDepth)\n{\n    // difference in normals\n    // do not bother decoding normals - there's no need here\n    half2 diff = abs(centerNormal - sampleNormal);\n    half isSameNormal = (diff.x + diff.y) &lt; 0.5;\n\n    // difference in depth\n    float zdiff = abs(centerDepth-sampleDepth);\n    // scale the required threshold by the distance\n    half isSameDepth = (zdiff &lt; 0.09 * centerDepth) || (centerDepth &lt; 0.1);\n\n    // return:\n    // 1 - if normals and depth are similar enough\n    // 0 - otherwise\n    return isSameNormal * isSameDepth;\n}\n</code></pre> <p>The complete Shader is as follows:</p> <pre><code>Shader \"Custom/DepthColorEdge\" {\n\nProperties \n{\n    _DepthTex (\"Depth Tex\", 2D) = \"white\" {}\n    _ColorMap (\"Color Map\", 2D) = \"white\" {}\n}\n    SubShader \n    {\n        Tags { \"RenderType\"=\"Opaque\" }\n        LOD 200\n        Pass\n        {\n            ZTest Always Cull Off ZWrite Off\n            Fog { Mode off }\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n            sampler2D _CameraDepthNormalsTexture;\n            sampler2D _DepthTex;\n            uniform float4 _DepthTex_TexelSize;\n            sampler2D _ColorMap;\n            float _ZNear;\n            float _ZFar;\n\n            struct v2f \n            {\n                float4 pos : SV_POSITION;\n                float2 uv[3] : TEXCOORD0;\n            };\n\n            v2f vert (appdata_base v)\n            {\n                v2f o;\n                o.pos = mul (UNITY_MATRIX_MVP, v.vertex);\n                o.uv[0] = MultiplyUV( UNITY_MATRIX_TEXTURE0, v.texcoord );\n                o.uv[1] = o.uv[0] + float2(-_DepthTex_TexelSize.x, -_DepthTex_TexelSize.y);\n                o.uv[2] = o.uv[0] + float2(+_DepthTex_TexelSize.x, -_DepthTex_TexelSize.y);\n                return o;\n            }\n\n\n            inline half CheckSame (half2 centerNormal, half2 sampleNormal, float centerDepth, float sampleDepth)\n            {\n                // difference in normals\n                // do not bother decoding normals - there's no need here\n                half2 diff = abs(centerNormal - sampleNormal);\n                half isSameNormal = (diff.x + diff.y) &lt; 0.5;\n\n                // difference in depth\n                float zdiff = abs(centerDepth-sampleDepth);\n                // scale the required threshold by the distance\n                half isSameDepth = (zdiff &lt; 0.09 * centerDepth) || (centerDepth &lt; 0.1);\n\n                // return:\n                // 1 - if normals and depth are similar enough\n                // 0 - otherwise\n                return isSameNormal * isSameDepth;\n            }\n\n            half4 frag(v2f i) : COLOR \n            {\n                // get color based on depth\n                float depth = tex2D (_DepthTex, i.uv[0]).r;\n                half4 color = tex2D(_ColorMap, float2(saturate(1-depth), 0.5));\n\n                // detect normal diff\n                half2 centerNormal = tex2D(_CameraDepthNormalsTexture, i.uv[0]).xy;\n                half2 sampleNormal1 = tex2D (_CameraDepthNormalsTexture, i.uv[1]).xy;\n                half2 sampleNormal2 = tex2D (_CameraDepthNormalsTexture, i.uv[2]).xy;\n                float sampleDepth1 = tex2D (_DepthTex, i.uv[1]).r;\n                float sampleDepth2 = tex2D (_DepthTex, i.uv[2]).r;\n                color *= CheckSame(centerNormal, sampleNormal1, depth, sampleDepth1);\n                color *= CheckSame(centerNormal, sampleNormal2, depth, sampleDepth2);\n\n                return color;\n            }\n            ENDCG\n        }\n\n    }\n    FallBack \"Diffuse\"\n}\n</code></pre> <p>The result is similar to this:</p> <p></p>","tags":["dev"]},{"location":"en/unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#blending-real-world-images","title":"Blending Real-World Images","text":"<p>Adding color to a depth map alone can be a bit dull, so we can blend in colors from real-world scenes. To do this, we just need to create another shader and pass in the previous image as well as the camera's real-world image. Then, in the <code>OnRenderImage</code> function, we can blend the two images together.</p> <pre><code>Shader \"Custom/ColorMixDepth\" {\n    Properties {\n        _MainTex (\"Base (RGBA)\", 2D) = \"white\" {}\n        _DepthTex (\"Depth (RGBA)\", 2D) = \"white\" {}\n    }\n    SubShader {\n        Tags { \"RenderType\"=\"Opaque\" }\n        LOD 200\n\n        CGPROGRAM\n        #pragma surface surf Lambert\n\n        sampler2D _MainTex;\n        sampler2D _DepthTex;\n\n        struct Input {\n            float2 uv_MainTex;\n            float2 uv_DepthTex;\n        };\n\n        void surf (Input IN, inout SurfaceOutput o) {\n            half4 c = tex2D (_MainTex, IN.uv_MainTex);\n            half4 d = tex2D (_DepthTex, IN.uv_DepthTex);\n            //d = d.x == 1? 0 : d;\n            o.Albedo = c.rgb*0.1 + d.rgb*0.9;\n            o.Alpha = 1;\n        }\n        ENDCG\n    } \n    FallBack \"Diffuse\"\n}\n</code></pre> <p><pre><code>void OnRenderImage(RenderTexture src, RenderTexture dst)\n{\n    // if now rendering depth map\n    if (isRenderDepth)\n    {\n        depthEdgeMaterial.SetTexture(\"_DepthTex\", src);\n        if(isUseColorMap)\n            Graphics.Blit(src, dst, depthEdgeMaterial);\n        else\n            Graphics.Blit(src, dst);\n        return;\n    }\n    // else rendering real color scene, mix the real color with depth map\n    else\n    {\n        mixMaterial.SetTexture(\"_MainTex\", src);\n        mixMaterial.SetTexture(\"_DepthTex\", depthTexture);\n        Graphics.Blit(src, dst, mixMaterial);\n        ReleaseTexture();\n    }\n}\n</code></pre> The code above is responsible for completing this task. What needs to be understood is that when we call <code>RenderWithShader</code>, the function <code>OnRenderImage</code> will also be called. In other words, this function is called twice, and the functionality to be completed for each call is different. Therefore, I use a variable here to indicate the current rendering state, whether it is for creating a depth map or for blending.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%94%BB%E6%B7%B1%E5%BA%A6%E5%9B%BE%E5%92%8C%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#complete-code","title":"Complete code","text":"<p>The code files are a bit long, so I have placed them here: depth-minimap.</p> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/","title":"Building a Third-Person Camera in Unity (Part 1)","text":"<p>I want to create a third-person camera in Unity, with the camera's behavior modeled after the third-person camera in \"World of Warcraft\". The specific requirements are:</p> <ol> <li>Left mouse button: Control the camera to rotate around the character, but the character itself does not rotate.</li> <li>Right mouse button: Control the camera to rotate around the character. The character's forward direction (Unity's <code>tranform.forward</code>) rotates accordingly, but the character's upward direction remains unchanged.</li> <li>After rotating with the left mouse button, if you rotate with the right mouse button, the character's forward direction will immediately adjust based on the left mouse button's rotation. Then, the right mouse button rotation is applied, which is equivalent to two consecutive right mouse button rotations.</li> <li>Mouse scroll wheel: Control the camera's zoom in and out.</li> <li>The camera cannot pass through any rigid objects.</li> <li>After the camera moves away from a colliding rigid object, it gradually returns to its original distance.</li> <li>If the camera encounters an object and you use the mouse scroll wheel to zoom in, the camera needs to respond immediately, and the 6th point no longer occurs thereafter.</li> <li>If the camera hits the ground during rotation, it stops rotating up and down around the character and instead rotates up and down around itself. The left and right rotation still revolves around the character.</li> </ol> <p>This requirement can be divided into two parts: camera rotation and camera rigidity. For simplicity, let's first solve the issue of camera rotation, which refers to the first three points of the requirement.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#camera-position-indicator","title":"Camera position indicator","text":"<p>Before we proceed to the formal resolution of camera operations, there is one more issue that needs to be addressed: the representation of the camera position. This can be done in multiple ways:</p> <ul> <li>Camera world coordinates</li> <li>Camera coordinates relative to the character</li> <li>Direction and distance of the camera in the character coordinate system</li> </ul> <p>Because in our needs, the camera is transformed according to the position of the character, so here I use the third method, and the camera in the control always aims at the character, so only distance information needs to be saved in the camera.</p> <pre><code>float curDistance = 5F;\n</code></pre>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#camera-rotation","title":"Camera Rotation","text":"<p>Continuing to further divide the camera rotation behavior, it can be divided into left button rotation and right button rotation. Now let's complete these two rotations step by step. Firstly, I will set the camera as a child object of the character, so that basic camera movements will automatically follow the character.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#rotate-with-left-mouse-button","title":"Rotate with Left Mouse Button","text":"<p>When it comes to rotating with the left mouse button alone, the requirement is quite simple: the camera rotates while the character remains stationary. This is similar to a camera that observes a model, allowing the camera to observe the central object from any angle.</p> <p>To obtain the state of the left mouse button in Unity, you can use the statement: <code>Input.GetMouseButton(0)</code> (Note: all code-related references will be in C#). Similarly, to check the state of the right mouse button, you can use: <code>Input.GetMouseButton(1)</code>. To retrieve the movement position of the mouse cursor (which can be understood as the offset of the cursor on the X and Y axes between frames), you can use: <code>Input.GetAxis(\"Mouse X\"); Input.GetAxis(\"Mouse Y\")</code>. Now, let's proceed to retrieve the movement information of the cursor after the left mouse button is pressed.</p> <p><pre><code>if (Input.GetMouseButton(0))\n{\n    float x = Input.GetAxis(\"Mouse X\");\n    float y = Input.GetAxis(\"Mouse Y\");\n}\n</code></pre> The code is simple, and now comes the crucial part: how to control the camera rotation. To understand rotation, some knowledge about quaternions is needed (there are many online resources available, so I won't list them here). One important aspect of quaternions is that they can easily represent rotations, especially rotations around a specific vector. Once you understand quaternions, implementing the camera rotation around a character should not be difficult.</p> <p>One more thing to note is that the quaternion rotation axis is just a vector with the origin as the starting point. If you want to use a point <code>O</code> in the world coordinate system as the origin and a vector <code>V</code> starting from that point as the rotation axis, you need to perform a coordinate system transformation. In simple terms, you need to transform the point <code>P</code> that needs to be rotated into a coordinate system with <code>O</code> as the origin, rotate it based on <code>V</code>, and then transform it back to the world coordinate system. Based on these operations, a utility function can be written as follows:</p> <p><pre><code>Vector3 MyRotate(Vector3 oldPosition, float angle, Vector3 axis, Vector3 axisPosition)\n{\n// Construct a quaternion with `axis` as the rotation axis. This rotation is in the character's coordinate system.\n    Quaternion rotation = Quaternion.AngleAxis(angle, axis);\n// Here we are performing a coordinate system transformation, converting the camera's world coordinates into coordinates in the character's coordinate system.\n    Vector3 offset = oldPosition - axisPosition;\n// Calculate rotation and transform back into world coordinate system\n    return axisPosition + (rotation * offset);\n}\n</code></pre> <code>Quaternion</code> is a type in Unity that represents quaternions. By adding the previously detected mouse left-click, you can complete the left-click control to rotate the camera left and right.</p> <p>The code to control the camera's left and right rotation by moving the mouse left and right can be directly provided as:</p> <p>[to_be_replaced[Code]]</p> <p><pre><code>newForward = MyRotate(newForward, x, up, Vector3.zero);\n</code></pre> Because only the forward vector is being rotated here and there is no coordinate system transformation involved, the fourth parameter is set to <code>Vector3.zero</code>.</p> <p>Controlling the rotation in the up and down direction is a bit more difficult to understand compared to the left and right rotation because the rotation axis keeps changing (assuming here that the character's \"up\" direction is always the positive Y-axis). It's important to note that the camera is also continuously rotating and keeping the character in the center of the view. In this case, the camera's right direction is the axis we want to rotate around (imagine the camera's right as the character's right). With this understanding, the code for the up and down rotation becomes quite simple:</p> <pre><code>newForward = MyRotate(newForward, -y, transform.right, Vector3.zero);\n</code></pre>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#right-click-rotation","title":"Right-click Rotation","text":"<p>After performing a left-click rotation, right-click rotation is quite simple. You just need to set the character's forward direction when rotating left or right.</p> <pre><code>player.forward = Vector3.Normalize(new Vector3(oldForward.x, 0, oldForward.z));\n</code></pre> <p>The code for vertical rotation is the same as the code for left click.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#first-left-click-then-right-click","title":"First left click, then right click","text":"<p>Although you can rotate separately with the left click and the right click above, once you rotate with the left click first and then perform the right click operation, a problem will arise: the character's forward direction will be different from the camera's forward direction! This causes the camera and the character's orientation to separate, making the actual operation very strange. So, when we rotate with the right click, we need to adjust the character first to align with the camera's forward direction:</p> <pre><code>player.forward = Vector3.Normalize(new Vector3(oldForward.x, 0, oldForward.z));\n</code></pre>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#euler-angle-gimbal-lock","title":"Euler Angle Gimbal Lock","text":"<p>Up until now, the camera rotation is almost complete, but there is one more thing to be aware of: Euler Angle Gimbal Lock. I won't go into detail about the theory here, but those who are interested can search for it on their own. In the case of the camera here, when the camera rotates up or down to align with the upward direction of the character, the camera's perspective undergoes a sudden change. This is because when the camera reaches the top or bottom of the character, the camera's upward direction experiences a sudden change (since the Y value of the camera's upward direction needs to be greater than zero). Therefore, we need to limit the range of the camera's up and down rotation to prevent gimbal lock from occurring. The operation is very simple, just restrict the angle between the camera's forward direction and the character's upward direction.</p> <pre><code>if ((Vector3.Dot(transform.forward, transform.parent.up) &gt;= -0.95F || y &gt; 0) &amp;&amp;\n    (Vector3.Dot(transform.forward, transform.parent.up) &lt;= 0.95F || y &lt; 0))\n</code></pre>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8A%29/#full-code","title":"Full Code","text":"<pre><code>// rotate oldPosition around a axis starting at axisPosition\nVector3 MyRotate(Vector3 oldPosition, float angle, Vector3 axis, Vector3 axisPosition)\n{\n    Quaternion rotation = Quaternion.AngleAxis(angle, axis);\n    Vector3 offset = oldPosition - axisPosition;\n    return axisPosition + (rotation * offset);\n}\n\n// rotate oldForward, player forward may change when use mouse RB\nVector3 RotateIt(Vector3 oldForward, Vector3 up, Vector3 right, Transform player)\n{\n    Vector3 newForward = -oldForward;\n    // mouse LB RB rotate camera and character\n    if (Input.GetMouseButton(0) ^ Input.GetMouseButton(1))\n    {\n        float x = Input.GetAxis(\"Mouse X\") * rotateSpeed;\n        float y = Input.GetAxis(\"Mouse Y\") * rotateSpeed;\n\n        if (x != 0F)\n        {\n            newForward = MyRotate(newForward, x, up, Vector3.zero);\n\n            // mouse RB, character rotate together\n            if (Input.GetMouseButton(1))\n            {\n                player.forward = Vector3.Normalize(new Vector3(oldForward.x, 0, \n                    oldForward.z));\n            }\n        }\n\n        if (y != 0F)\n        {\n\n            if ((Vector3.Dot(transform.forward, up) &gt;= -0.95F || y &gt; 0)\n                &amp;&amp; (Vector3.Dot(transform.forward, up) &lt;= 0.95F || y &lt; 0))\n            {\n                newForward = MyRotate(newForward, -y, transform.right, Vector3.zero);\n\n            }\n        }\n    }\n\n    return -newForward;\n}\n</code></pre> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/","title":"Building a third-person camera in Unity (Part 2)","text":"<p>The previous episode was about camera rotation. So now, the problem we need to solve is the rigidity of the camera. How should we do it?</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#camera-rigidity","title":"Camera rigidity","text":"<p>Reviewing the requirements previously mentioned:</p> <ol> <li>Mouse scroll wheel: control camera zooming.</li> <li>The camera cannot pass through any rigid objects.</li> <li>After the camera leaves a collision with a rigid object, it slowly returns to its original distance.</li> <li>If the camera encounters a rigid body and the mouse scroll wheel is used to zoom in, the camera needs to react immediately, and point 6 no longer occurs afterwards; scaling operations cannot be performed after colliding with the ground.</li> <li>When the camera in rotation touches the ground, stop rotating around the character up and down, and instead rotate up and down around itself, while left and right rotation still revolves around the character.</li> </ol> <p>The meaning of these points is: When the camera encounters a rigid object, it is forced to get closer to the character. So, we want the camera to slowly return to its original distance when it moves away. However, if after automatically getting closer, you manually zoom in with the scroll wheel, it means that the camera is moving away from the object it collided with, and the zoom distance is the actual distance of the camera. Now let's analyze these requirements step by step.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#scroll-control","title":"Scroll control","text":"<p>Scroll wheel control is very simple, you just need to know that obtaining the scroll wheel information is <code>Input.GetAxis(\"Mouse ScrollWheel\")</code>, and set the maximum and minimum values for the distance and it's good to go:</p> <pre><code>public float mouseWheelSensitivity = 2; // control zoom speed\npublic int mouseWheelZoomMin = 2;       // min distance\npublic int mouseWheelZoomMax = 10;      // max distance\nfloat curDistance = 5F;\nfloat zoom = Input.GetAxis(\"Mouse ScrollWheel\");\nif (zoom != 0F)\n{\n    float distance = curDistance;\n    distance -= zoom * mouseWheelSensitivity;\n    distance = Math.Min(mouseWheelZoomMax, Math.Max(mouseWheelZoomMin, distance));\n    return distance;\n}\n</code></pre> <p><code>playerTransform</code> here refers to the character.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#cannot-pass-through-any-rigid-objects","title":"Cannot pass through any rigid objects.","text":"<p>This requires checking the contact between the camera and the object. There is a function that can achieve this functionality:</p> <pre><code>static bool Raycast(Ray ray, RaycastHit hitInfo, float distance = Mathf.Infinity, int layerMask = DefaultRaycastLayers);\n</code></pre> <p>Refer to Unity's Reference for specific usage. We can implement collision detection as follows:</p> <pre><code>RaycastHit hitInfo;\nif (Physics.Raycast(playerTransform.position, desiredPosition - playerTransform.position,\n    out hitInfo, (playerTransform.position - desiredPosition).magnitude, 1))\n{\n    curDistance = hitInfo.distance;\n}\n</code></pre> <p>The <code>targetPosition</code> is the position of the collision. Set the camera's position to the collision position and you're good to go.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#after-leaving-the-rigid-body-slowly-return-to-the-original-distance","title":"After leaving the rigid body, slowly return to the original distance.","text":"<p>To accomplish this functionality, firstly, we need to record the desired distance (<code>desiredDistance</code>) and the current distance (<code>curDistance</code>) that the camera should be at. We will store the result of the scroll wheel operation in the <code>desiredDistance</code> variable and then calculate the new distance based on collision.</p> <p>When we detect that the camera has moved away from the rigid body or has collided with a farther rigid body, we cannot directly assign the position of the collision to the camera. Instead, we need to use a movement speed to approach the new distance. Let's retrieve the new distance first:</p> <pre><code>float newDistance = desiredDistance;\nRaycastHit hitInfo;\nif (Physics.Raycast(playerTransform.position, desiredPosition - playerTransform.position,\n    out hitInfo, (playerTransform.position - desiredPosition).magnitude, 1))\n{\n    newDistance = hitInfo.distance;\n}\n</code></pre> <p>So how can we determine if the camera is moving to a greater distance? We can compare <code>newDistances</code> with the current distance:</p> <pre><code>// Move closer\nif (newDistance &lt; curDistance)\n{\n    curDistance = newDistance;\n}\n// Move towards a greater distance\nelse if(newDistance &gt; curDistance)\n{\n}\n</code></pre> <p>So, to determine the movement to a further distance, it becomes very intuitive, just add a velocity to move:</p> <p><pre><code>curDistance = Math.Min(curDistance + Time.deltaTime * autoZoomOutSpeed, newDistance);\n</code></pre> We have already completed the general behavior of the camera, but there are still some details that need to be handled.</p>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#after-encountering-a-rigid-body-the-roller-zooms-in-and-the-ground-does-not-scale","title":"After encountering a rigid body, the roller zooms in and the ground does not scale.","text":"<p>Here are two requirements:</p> <p>Translate these text into English language:</p> <ol> <li>After encountering a rigid body, you can only pull it closer, not farther apart.</li> <li>After contacting the ground, you cannot scale it.</li> </ol> <p>First, use a variable to store the collision status of the camera:</p> <pre><code>bool isHitGround = false;       // Indicates whether it has collided with the ground\nbool isHitObject = false;       // Indicates whether it has collided with a rigid body (excluding the ground)\n</code></pre> <p>Add conditional judgment when determining the zooming of the scroll wheel:</p> <pre><code>if (zoom != 0F &amp;&amp; (!isHitGround || (isHitObject &amp;&amp; zoom &gt; 0F)) )\n{\n    // calculate distance\n}\n</code></pre>","tags":["dev"]},{"location":"en/unity-Unity%E7%AC%AC%E4%B8%89%E4%BA%BA%E7%A7%B0%E7%9B%B8%E6%9C%BA%E6%9E%84%E5%BB%BA%28%E4%B8%8B%29/#meet-the-ground-and-rotate-around-oneself-up-and-down","title":"Meet the ground and rotate around oneself up and down.","text":"<p>This functionality is a bit complicated to implement. It is necessary because our previous assumption that the camera is always pointed at the character no longer holds true. At this point, we need to split it into two vectors: the camera's orientation (<code>desireForward</code>) and the direction from the character to the camera (<code>cameraToPlayer</code>). We calculate the values for these two vectors separately. The former determines the camera's orientation, while the latter determines the camera's position. For convenience, we have divided the rotation function from the previous episode into two parts: X rotation (<code>RotateX</code>) and Y rotation (<code>RotateY</code>). Therefore, when calculating <code>RotateY</code> for <code>cameraToPlayer</code>, we add a condition:</p> <pre><code>if ((!isHitGround) || \n    (isHitGround &amp;&amp; transform.forward.y &lt;= cameraToPlayer.y &amp;&amp; yAngle &gt; 0))\n{\n    cameraToPlayer = RotateY(cameraToPlayer, playerTransform.up, \n        transform.right, yAngle);\n}\n</code></pre> <p>This condition has two parts:</p> <ul> <li>Did not touch the ground.</li> <li>Touched the ground but is ready to leave the ground.</li> </ul> <p>Then use <code>cameraToPlayer</code> to calculate the position of the camera:</p> <pre><code>transform.position = playerTransform.position - cameraToPlayer * curDistance;\n</code></pre> <p>And calculate the orientation of the camera when necessary (i.e. when it encounters the ground):</p> <pre><code>if (!isHitGround)\n{\n    transform.LookAt(playerTransform);\n}\nelse\n{\n    desireForward = RotateX(desireForward, playerTransform.up, xAngle);\n    desireForward = RotateY(desireForward, playerTransform.up, transform.right, yAngle);\n    transform.forward = desireForward;\n}\n</code></pre> <p>We have implemented the behavior of this camera.</p> <p>Complete code:</p> <p>def hello_world():     print(\"Hello, world!\")</p> <p>hello_world()</p> <p>Output: Hello, world!</p> <pre><code>using UnityEngine;\nusing System;\nusing System.Collections;\n\n// use a forward vector and distance to describe the camera position\npublic class MyThirdPersonCamera : MonoBehaviour {\n\n    private Transform playerTransform;      // reference to player\n\n    public float mouseWheelSensitivity = 3; // control zoom speed\n    public int mouseWheelZoomMin = 2;       // min distance\n    public int mouseWheelZoomMax = 10;      // max distance\n\n    public float rotateSpeed = 5F;          // speed of rotate around player    \n    public float autoZoomOutSpeed = 10F;    // speed of auto zoom out, camera will auto zoom out \n                                            // to pre distance when stop colliding object\n    float curDistance = 5F;                 // distance to player\n    float desiredDistance = 5F;             // distance should be      \n    bool isHitGround = false;               // hit ground flag\n    bool isHitObject = false;               // hit object(except ground) flag\n\n    // Use this for initialization\n    void Awake ()\n    {\n        playerTransform = transform.parent;\n    }\n\n    void Start () \n    {\n        transform.position = playerTransform.position - playerTransform.forward \n            * curDistance;\n        transform.LookAt(playerTransform);\n\n    }\n\n    // Update is called once per frame\n    void Update () \n    {\n        Vector3 cameraToPlayer = \n            (playerTransform.position - transform.position).normalized;\n\n        Vector3 desireForward = transform.forward;\n\n        // get new distance of zoom\n        desiredDistance = ZoomIt(curDistance, desiredDistance);\n\n        float xAngle, yAngle;\n        bool isRightDown;\n\n        // get mouse LB, RB status\n        GetMouseButtonStatus(out xAngle, out yAngle, out isRightDown);\n\n        // rotate camera by x-axis movement\n        cameraToPlayer = RotateX(cameraToPlayer, playerTransform.up, xAngle);\n\n        // if RB on, change player orientation\n        if (isRightDown)\n        {\n            playerTransform.forward = Vector3.Normalize(new Vector3(cameraToPlayer.\n                x, 0, cameraToPlayer.z));\n        }\n\n        // rotate camera by y-axis, if camera is not on ground or camera is going to leave ground\n        if ((!isHitGround) \n        || (isHitGround &amp;&amp; transform.forward.y &lt;= cameraToPlayer.y &amp;&amp; yAngle &gt; 0))\n        {\n            cameraToPlayer = RotateY(cameraToPlayer, playerTransform.up, transform.\n                right, yAngle);\n        }\n\n        // detect collision of camera to rigid body, get the distance camera should be\n        float newDistance = DealWithCollision(playerTransform.position, \n            -cameraToPlayer, desiredDistance,ref isHitGround, ref isHitObject);\n\n        // check the distance\n        if (newDistance &lt;= curDistance)\n        {\n            curDistance = newDistance;\n        }\n        else\n        {\n            // now moving to farther position, use a speed to move it\n            curDistance = Math.Min(curDistance + Time.deltaTime * autoZoomOutSpeed, \n                newDistance);\n        }\n\n        // now calculate the position\n        transform.position = playerTransform.position - cameraToPlayer * curDistance;\n\n        // calculate the camera forward, if on ground, camera will rotate on self.Space\n        if (!isHitGround)\n        {\n            transform.LookAt(playerTransform);\n        }\n        else\n        {\n            desireForward = RotateX(desireForward, playerTransform.up, xAngle);\n            desireForward = RotateY(desireForward, playerTransform.up, transform.\n                right, yAngle);\n            transform.forward = desireForward;\n        }\n    }\n\n    // zoom in and zoom out\n    float ZoomIt(float curDistance, float desiredDistance)\n    {\n        float zoom = Input.GetAxis(\"Mouse ScrollWheel\");\n\n        //  zoom when hit rigid body and zoom in, or not on ground\n        if (zoom != 0F &amp;&amp; (!isHitGround || (isHitObject &amp;&amp; zoom &gt; 0F)) )\n        {\n            float distance = curDistance;\n\n            distance -= zoom * mouseWheelSensitivity;\n            distance = Math.Min(mouseWheelZoomMax, Math.Max(mouseWheelZoomMin, distance));\n\n            return distance;\n        }\n        return desiredDistance;\n    }\n\n    // rotate oldPosition around a axis starting at axisPosition\n    Vector3 RotateAroundAxis(Vector3 point, float angle, Vector3 axis, Vector3 axisPosition)\n    {\n        Quaternion rotation = Quaternion.AngleAxis(angle, axis);\n        Vector3 offset = point - axisPosition;\n        return axisPosition + (rotation * offset);\n    }\n\n    void GetMouseButtonStatus(out float x, out float y, out bool isRightDown)\n    {\n        x = y = 0F;\n        isRightDown = false;\n        if (Input.GetMouseButton(0) ^ Input.GetMouseButton(1))\n        {\n            x = Input.GetAxis(\"Mouse X\") * rotateSpeed;\n            y = -Input.GetAxis(\"Mouse Y\") * rotateSpeed;\n            if (Input.GetMouseButton(1))\n            {\n                isRightDown = true;\n            }\n        }\n    }\n\n    // rotate vectorP2C(player to camera) around up while mouse x is on, return true if do rotate\n    Vector3 RotateX(Vector3 vectorP2C, Vector3 up, float angle)\n    {\n        Vector3 newVector = vectorP2C;\n        if (angle != 0F)\n        {\n            newVector = RotateAroundAxis(newVector, angle, up, Vector3.zero);\n        }\n        return newVector;\n    }\n\n    // rotate vectorP2C(player to camera) around right while mouse y is on, return true is do rotate\n    Vector3 RotateY(Vector3 vectorP2C, Vector3 up, Vector3 right, float angle)\n    {\n        Vector3 newVector = vectorP2C;\n        if (angle != 0F)\n        {\n            if ((Vector3.Dot(vectorP2C, up) &gt;= -0.99F || angle &lt; 0)\n                &amp;&amp; (Vector3.Dot(vectorP2C, up) &lt;= 0.99F || angle &gt; 0))\n            {\n                newVector = RotateAroundAxis(newVector, angle, right, Vector3.zero);\n            }\n        }\n        return newVector;\n    }\n\n    // return distance if no collision, else return distance to rigid body\n    float DealWithCollision(Vector3 origin, Vector3 direction, float distance, \n        ref bool ishitGround, ref bool ishitObject)\n    {\n        // collision detection\n        RaycastHit hitInfo;\n        float newDistance = distance;\n        if (Physics.Raycast(playerTransform.position, direction, out hitInfo, desiredDistance, 1))\n        {\n            if (hitInfo.collider is TerrainCollider)\n            {\n                ishitGround = true;\n                ishitObject = false;\n            }\n            else\n            {\n                ishitObject = true;\n                ishitGround = false;\n            }\n            newDistance = hitInfo.distance;\n        }\n        else\n        {\n            ishitGround = ishitObject = false;\n        }\n\n        return newDistance;\n    }\n}\n</code></pre> <p>Original: https://disenone.github.io/wiki/en</p> <p>This post is protected by CC BY-NC-SA 4.0 agreement, should be reproduced with attribution.</p> <p><p>  Visitors.   Total Visits.   Page Visits. </p></p> <p>This post is translated using ChatGPT, please feedback if any omissions.</p>","tags":["dev"]}]}